{"version":3,"file":"static/js/209.284d6062.chunk.js","mappings":"yKACA,EAA8B,gCAA9B,EAAgF,oCAAhF,EAA6H,2B,oBCC7H,GAAeA,EAAAA,EAAAA,GAA4BC,EAAAA,cAAoB,OAAQ,CACrEC,EAAG,iEACD,aCFJ,GAAeF,EAAAA,EAAAA,GAA4BC,EAAAA,cAAoB,OAAQ,CACrEC,EAAG,8DACD,gB,iDCKSC,EAAaF,EAAAA,MAAW,SAACG,GAC9B,IAAMC,GAAWC,EAAAA,EAAAA,KACjB,GAA6BC,EAAAA,EAAAA,UAAQ,WAGjC,IAFA,IAAIC,EAAQC,KAAKC,KAAKN,EAAMO,WAAaP,EAAMQ,UAC3CC,EAAa,GACRC,EAAI,EAAGA,GAAKN,EAAOM,IACxBD,EAAWE,KAAKD,GAGpB,MAAO,CACHE,SAAUP,KAAKC,KAAKF,EAAQ,IAC5BK,WAAAA,KAGL,CAACT,EAAMO,WAAYP,EAAMQ,WAZvBI,EAAL,EAAKA,SAAUH,EAAf,EAAeA,WAeXI,EAA4C,IAA5Bb,EAAMc,eAAiB,GAAU,EACjDC,EAAuC,GAAvBf,EAAMc,eACtBE,EAAWP,EAAWQ,QAAO,SAACC,GAAD,OAAkBA,GAAQL,GAAgBK,GAAQH,KAC9EI,KAAI,SAACD,EAAME,GAAP,OAAiB,SAACC,EAAA,EAAD,CAAUC,QAAM,EAENC,UAAWL,IAASlB,EAAMwB,YAAf,UAAgCC,EAAhC,YAAgDA,GAAsBA,EACjFC,QAAS,kBAAMzB,GAAS0B,EAAAA,EAAAA,IAAeT,KAHjD,SAKjBA,GAJgCE,MAiBzC,OACI,iBAAKG,UAAWE,EAAhB,WACI,SAACG,EAAA,EAAD,CAAYC,MAAM,UACN,aAAW,iBACXC,UAAU,OACVC,SAAU/B,EAAMc,eAAiB,EACjCY,QAfO,WACvBzB,GAAS+B,EAAAA,EAAAA,IAAkBhC,EAAMc,eAAiB,KAU9C,UAMI,SAACmB,EAAD,OAEJ,SAACC,EAAA,EAAD,UACKlB,KAEL,SAACY,EAAA,EAAD,CAAYC,MAAM,UACN,aAAW,iBACXC,UAAU,OACVC,SAAU/B,EAAMc,iBAAmBF,EACnCc,QAtBQ,WACxBzB,GAAS+B,EAAAA,EAAAA,IAAkBhC,EAAMc,eAAiB,KAiB9C,UAMI,SAACqB,EAAD,Y,+ECtDPC,EAAOvC,EAAAA,MAAW,SAACG,GAC5B,IAAMC,GAAWC,EAAAA,EAAAA,KAUjB,OACI,0BACI,SAACmC,EAAA,EAAD,CAAOC,UAAW,EAAlB,UACI,UAACC,EAAA,EAAD,CAAMC,WAAS,EAACjB,UAAWE,EAAAA,EAAAA,KAA3B,WACI,UAACc,EAAA,EAAD,CAAMrB,MAAI,EAACuB,GAAI,EAAGlB,UAAWE,EAAAA,EAAAA,UAA7B,WACI,SAAC,KAAD,CAASiB,GAAE,mBAAc1C,EAAM2C,MAAMC,IAArC,UACI,SAACC,EAAA,EAAD,CAAQtB,UAAWE,EAAAA,EAAAA,OAAcqB,IAAI,aAAaC,IAAK/C,EAAM2C,MAAMK,OAAOC,OAASC,OAEvF,SAACC,EAAA,EAAD,CAAQ5B,UAAWE,EAAAA,EAAAA,OACX2B,QAAQ,WACRvB,MAAM,UACNwB,KAAM,QACNtB,SAAqC,SAA3B/B,EAAMsD,kBAA+BtD,EAAMuD,iBAAiBC,MAAK,SAAAtC,GAAI,OAAIA,IAASlB,EAAM2C,MAAMC,MACxGlB,QArBG,WACvB1B,EAAM2C,MAAMc,SACZxD,GAASyD,EAAAA,EAAAA,IAAkB1D,EAAM2C,MAAMC,KAEvC3C,GAAS0D,EAAAA,EAAAA,IAAgB3D,EAAM2C,MAAMC,MAYzB,SAOK5C,EAAM2C,MAAMc,SAAW,+DAAe,2EAG/C,UAAClB,EAAA,EAAD,CAAMrB,MAAI,EAACuB,GAAI,GAAIlB,UAAWE,EAAAA,EAAAA,SAA9B,WACI,SAAC,KAAD,CAASiB,GAAE,mBAAc1C,EAAM2C,MAAMC,IAArC,UACI,gBAAKrB,UAAWE,EAAAA,EAAAA,SAAhB,SAAiCzB,EAAM2C,MAAMiB,UAEjD,wLACmB5D,EAAM2C,MAAMkB,OAAS7D,EAAM2C,MAAMkB,OAAS,gFCFrF,EApCc,WACV,IAAM5D,GAAWC,EAAAA,EAAAA,KACXyC,GAAQmB,EAAAA,EAAAA,IAAe,SAAAC,GAAK,OAAIA,EAAMC,UAAUC,SAChD1D,GAAauD,EAAAA,EAAAA,IAAe,SAAAC,GAAK,OAAIA,EAAMC,UAAUzD,cACrDC,GAAWsD,EAAAA,EAAAA,IAAe,SAAAC,GAAK,OAAIA,EAAMC,UAAUxD,YACnDgB,GAAcsC,EAAAA,EAAAA,IAAe,SAAAC,GAAK,OAAIA,EAAMC,UAAUxC,eACtD+B,GAAmBO,EAAAA,EAAAA,IAAe,SAAAC,GAAK,OAAIA,EAAMC,UAAUT,oBAC3DzC,GAAiBgD,EAAAA,EAAAA,IAAe,SAAAC,GAAK,OAAIA,EAAMC,UAAUlD,kBACzDoD,GAAYJ,EAAAA,EAAAA,IAAe,SAAAC,GAAK,OAAIA,EAAMI,IAAID,aAC9CZ,GAAmBQ,EAAAA,EAAAA,IAAe,SAAAC,GAAK,OAAIA,EAAMI,IAAIb,qBAG3Dc,EAAAA,EAAAA,YAAU,WACNnE,GAASoE,EAAAA,EAAAA,IAAc7C,MACxB,CAACA,IAEJ,IAAM8C,EAAY3B,EAAMxB,KAAI,SAAAD,GAAI,OAAI,SAACkB,EAAD,CACMO,MAAOzB,EACPoC,iBAAkBA,EAClBC,iBAAkBA,GAHbrC,EAAK0B,OAKpD,OAAIsB,GACO,SAACK,EAAA,EAAD,KAIP,2BACKD,GACD,SAACvE,EAAD,CAAYyB,YAAaA,EACbjB,WAAYA,EACZC,SAAUA,EACVM,eAAgBA","sources":["webpack://samurai-way/./src/common/components/Pagination/pagination.module.css?7426","../node_modules/@material-ui/icons/esm/ArrowBack.js","../node_modules/@material-ui/icons/esm/ArrowForward.js","common/components/Pagination/Pagination.tsx","components/Users/User.tsx","pages/Users.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"listItemNum\":\"pagination_listItemNum__CN2-Q\",\"paginationBlock\":\"pagination_paginationBlock__19F+M\",\"active\":\"pagination_active__9cLwK\"};","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\"\n}), 'ArrowBack');","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 4l-1.41 1.41L16.17 11H4v2h12.17l-5.58 5.59L12 20l8-8z\"\n}), 'ArrowForward');","import React, {useMemo} from 'react';\r\nimport style from './pagination.module.css'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport {ArrowBack, ArrowForward} from '@material-ui/icons';\r\nimport List from '@material-ui/core/List';\r\nimport {ListItem} from '@material-ui/core';\r\nimport {useAppDispatch} from '../../utils/hooks/hooks';\r\nimport {setCurrentPage, setPortionsNumber} from '../../../redux/usersReducer';\r\n\r\nexport const Pagination = React.memo((props: PaginationPropsType) => {\r\n        const dispatch = useAppDispatch()\r\n        let {portions, arrayPages} = useMemo((): { portions: number, arrayPages: Array<number>, } => {\r\n            let pages = Math.ceil(props.totalCount / props.pageSize)\r\n            let arrayPages = []\r\n            for (let i = 1; i <= pages; i++) {\r\n                arrayPages.push(i)\r\n            }\r\n\r\n            return {\r\n                portions: Math.ceil(pages / 10),\r\n                arrayPages,\r\n            }\r\n\r\n        }, [props.totalCount, props.pageSize])\r\n\r\n\r\n        let leftPortions = (props.portionsNumber - 1) * 10 + 1\r\n        let rightPortions = props.portionsNumber * 10\r\n        let showPage = arrayPages.filter((item: number) => item >= leftPortions && item <= rightPortions)\r\n            .map((item, index) => <ListItem button\r\n                                            key={index}\r\n                                            className={item === props.currentPage ? `${style.active} ${style.listItemNum}` : style.listItemNum}\r\n                                            onClick={() => dispatch(setCurrentPage(item))}\r\n            >\r\n                {item}\r\n            </ListItem>)\r\n\r\n\r\n        const onClickLeftHandler = () => {\r\n            dispatch(setPortionsNumber(props.portionsNumber - 1))\r\n        }\r\n\r\n        const onClickRightHandler = () => {\r\n            dispatch(setPortionsNumber(props.portionsNumber + 1))\r\n        }\r\n\r\n\r\n        return (\r\n            <div className={style.paginationBlock}>\r\n                <IconButton color=\"primary\"\r\n                            aria-label=\"upload picture\"\r\n                            component=\"span\"\r\n                            disabled={props.portionsNumber < 2}\r\n                            onClick={onClickLeftHandler}\r\n                >\r\n                    <ArrowBack/>\r\n                </IconButton>\r\n                <List>\r\n                    {showPage}\r\n                </List>\r\n                <IconButton color=\"primary\"\r\n                            aria-label=\"upload picture\"\r\n                            component=\"span\"\r\n                            disabled={props.portionsNumber === portions}\r\n                            onClick={onClickRightHandler}\r\n                >\r\n                    <ArrowForward/>\r\n                </IconButton>\r\n\r\n            </div>\r\n        );\r\n    }\r\n)\r\n//type\r\ntype PaginationPropsType = {\r\n    totalCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    portionsNumber: number\r\n}\r\n\r\n","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport avatar from '../../assest/img/avatar.png'\nimport {Button, Grid, Paper} from '@material-ui/core';\nimport style from './users.module.css'\nimport {NavLink} from 'react-router-dom';\nimport {useAppDispatch} from '../../common/utils/hooks/hooks';\nimport {fetchFollowUser, fetchUnFollowUser} from '../../redux/usersReducer';\nimport {UserType} from '../../api/api';\nimport {StatusAuthorizedType} from '../../redux/appReducer';\n\n\nexport const User = React.memo((props: UserFCType) => {\n    const dispatch = useAppDispatch()\n\n    const onClickFollowedHandler = () => {\n        if (props.users.followed) {\n            dispatch(fetchUnFollowUser(props.users.id))\n        } else {\n            dispatch(fetchFollowUser(props.users.id))\n        }\n    }\n\n    return (\n        <div>\n            <Paper elevation={3}>\n                <Grid container className={style.user}>\n                    <Grid item md={2} className={style.userBlock}>\n                        <NavLink to={`/profile/${props.users.id}`}>\n                            <Avatar className={style.avatar} alt=\"Remy Sharp\" src={props.users.photos.small || avatar}/>\n                        </NavLink>\n                        <Button className={style.button}\n                                variant=\"outlined\"\n                                color=\"primary\"\n                                size={'small'}\n                                disabled={props.authorizedStatus === 'fail' || props.userSubscription.some(item => item === props.users.id)}\n                                onClick={onClickFollowedHandler}\n                        >\n                            {props.users.followed ? 'Отписаться' : 'Подписаться'}\n                        </Button>\n                    </Grid>\n                    <Grid item md={10} className={style.userInfo}>\n                        <NavLink to={`/profile/${props.users.id}`}>\n                            <div className={style.userName}>{props.users.name}</div>\n                        </NavLink>\n                        <div>Информация про\n                            пользователя: {props.users.status ? props.users.status : 'нету данных'}</div>\n                    </Grid>\n                </Grid>\n            </Paper>\n        </div>\n    )\n});\n//type\ntype UserFCType = {\n    users: UserType\n    authorizedStatus: StatusAuthorizedType\n    userSubscription: Array<number>\n}\n\n","import React, {useEffect} from 'react';\nimport {Pagination} from '../common/components/Pagination/Pagination';\nimport {Loading} from '../common/components/Loading/Loading';\nimport {fetchUserData,} from '../redux/usersReducer';\nimport {User} from '../components/Users/User';\nimport {useAppDispatch, useAppSelector} from '../common/utils/hooks/hooks';\n\n\nconst Users = () => {\n    const dispatch = useAppDispatch()\n    const users = useAppSelector(state => state.usersPage.items)\n    const totalCount = useAppSelector(state => state.usersPage.totalCount)\n    const pageSize = useAppSelector(state => state.usersPage.pageSize)\n    const currentPage = useAppSelector(state => state.usersPage.currentPage)\n    const userSubscription = useAppSelector(state => state.usersPage.userSubscription)\n    const portionsNumber = useAppSelector(state => state.usersPage.portionsNumber)\n    const isLoading = useAppSelector(state => state.app.isLoading)\n    const authorizedStatus = useAppSelector(state => state.app.authorizedStatus)\n\n\n    useEffect(() => {\n        dispatch(fetchUserData(currentPage))\n    }, [currentPage])\n\n    const usersList = users.map(item => <User key={item.id}\n                                              users={item}\n                                              authorizedStatus={authorizedStatus}\n                                              userSubscription={userSubscription}\n    />)\n    if (isLoading) {\n        return <Loading/>\n    }\n\n    return (\n        <div>\n            {usersList}\n            <Pagination currentPage={currentPage}\n                        totalCount={totalCount}\n                        pageSize={pageSize}\n                        portionsNumber={portionsNumber}\n            />\n        </div>\n    );\n};\nexport default Users\n\n\n\n\n\n"],"names":["createSvgIcon","React","d","Pagination","props","dispatch","useAppDispatch","useMemo","pages","Math","ceil","totalCount","pageSize","arrayPages","i","push","portions","leftPortions","portionsNumber","rightPortions","showPage","filter","item","map","index","ListItem","button","className","currentPage","style","onClick","setCurrentPage","IconButton","color","component","disabled","setPortionsNumber","ArrowBack","List","ArrowForward","User","Paper","elevation","Grid","container","md","to","users","id","Avatar","alt","src","photos","small","avatar","Button","variant","size","authorizedStatus","userSubscription","some","followed","fetchUnFollowUser","fetchFollowUser","name","status","useAppSelector","state","usersPage","items","isLoading","app","useEffect","fetchUserData","usersList","Loading"],"sourceRoot":""}
[{"G:\\program\\practica\\react-practica\\it-incubator\\samurai-way-TS\\src\\index.tsx":"1","G:\\program\\practica\\react-practica\\it-incubator\\samurai-way-TS\\src\\App.tsx":"2","G:\\program\\practica\\react-practica\\it-incubator\\samurai-way-TS\\src\\redux\\store.ts":"3","G:\\program\\practica\\react-practica\\it-incubator\\samurai-way-TS\\src\\redux\\headerReducer.ts":"4","G:\\program\\practica\\react-practica\\it-incubator\\samurai-way-TS\\src\\redux\\profileReducer.ts":"5","G:\\program\\practica\\react-practica\\it-incubator\\samurai-way-TS\\src\\redux\\dialogsReducer.ts":"6","G:\\program\\practica\\react-practica\\it-incubator\\samurai-way-TS\\src\\redux\\usersReducer.ts":"7","G:\\program\\practica\\react-practica\\it-incubator\\samurai-way-TS\\src\\components\\header\\Header.tsx":"8","G:\\program\\practica\\react-practica\\it-incubator\\samurai-way-TS\\src\\components\\navBar\\NavBar.tsx":"9","G:\\program\\practica\\react-practica\\it-incubator\\samurai-way-TS\\src\\components\\footer\\Footer.tsx":"10","G:\\program\\practica\\react-practica\\it-incubator\\samurai-way-TS\\src\\components\\login\\Login.tsx":"11","G:\\program\\practica\\react-practica\\it-incubator\\samurai-way-TS\\src\\api\\api.ts":"12","G:\\program\\practica\\react-practica\\it-incubator\\samurai-way-TS\\src\\components\\Dialogs\\DialogItems.tsx":"13","G:\\program\\practica\\react-practica\\it-incubator\\samurai-way-TS\\src\\components\\Dialogs\\Messages\\Message.tsx":"14","G:\\program\\practica\\react-practica\\it-incubator\\samurai-way-TS\\src\\components\\profile\\myPosts\\MyPosts.tsx":"15","G:\\program\\practica\\react-practica\\it-incubator\\samurai-way-TS\\src\\components\\profile\\userInfo\\UserInfo.tsx":"16","G:\\program\\practica\\react-practica\\it-incubator\\samurai-way-TS\\src\\components\\profile\\myPosts\\myPost\\MyPost.tsx":"17","G:\\program\\practica\\react-practica\\it-incubator\\samurai-way-TS\\src\\components\\Users\\User.tsx":"18","G:\\program\\practica\\react-practica\\it-incubator\\samurai-way-TS\\src\\components\\Users\\Status.tsx":"19","G:\\program\\practica\\react-practica\\it-incubator\\samurai-way-TS\\src\\utils\\hooks\\hooks.ts":"20","G:\\program\\practica\\react-practica\\it-incubator\\samurai-way-TS\\src\\utils\\hoc\\withAuthRedirect.tsx":"21","G:\\program\\practica\\react-practica\\it-incubator\\samurai-way-TS\\src\\pages\\Profile.tsx":"22","G:\\program\\practica\\react-practica\\it-incubator\\samurai-way-TS\\src\\pages\\Dialogs.tsx":"23","G:\\program\\practica\\react-practica\\it-incubator\\samurai-way-TS\\src\\components\\common\\loading\\Loading.tsx":"24","G:\\program\\practica\\react-practica\\it-incubator\\samurai-way-TS\\src\\components\\common\\textarea\\Textarea.tsx":"25","G:\\program\\practica\\react-practica\\it-incubator\\samurai-way-TS\\src\\components\\common\\button\\Button.tsx":"26","G:\\program\\practica\\react-practica\\it-incubator\\samurai-way-TS\\src\\components\\common\\input\\Input.tsx":"27","G:\\program\\practica\\react-practica\\it-incubator\\samurai-way-TS\\src\\components\\common\\pagination\\Pagination.tsx":"28","G:\\program\\practica\\react-practica\\it-incubator\\samurai-way-TS\\src\\components\\users\\Status.tsx":"29","G:\\program\\practica\\react-practica\\it-incubator\\samurai-way-TS\\src\\components\\users\\User.tsx":"30","G:\\program\\practica\\react-practica\\it-incubator\\samurai-way-TS\\src\\utils\\validation\\validation.ts":"31","G:\\program\\practica\\react-practica\\it-incubator\\samurai-way-TS\\src\\components\\common\\ErrorSnackbar\\ErrorSnackbar.tsx":"32","G:\\program\\practica\\react-practica\\it-incubator\\samurai-way-TS\\src\\redux\\appReducer.ts":"33","G:\\program\\practica\\react-practica\\it-incubator\\samurai-way-TS\\src\\utils\\error-utils.ts":"34","G:\\program\\practica\\react-practica\\it-incubator\\samurai-way-TS\\src\\pages\\Users.tsx":"35","G:\\program\\practica\\react-practica\\it-incubator\\samurai-way-TS\\src\\components\\WitchRouting.tsx":"36","G:\\program\\practica\\react-practica\\it-incubator\\samurai-way-TS\\src\\components\\page404\\Page404.tsx":"37","G:\\program\\practica\\react-practica\\it-incubator\\samurai-way-TS\\src\\components\\layout\\Layout.tsx":"38","C:\\program\\samurai-way-TS\\src\\index.tsx":"39","C:\\program\\samurai-way-TS\\src\\redux\\store.ts":"40","C:\\program\\samurai-way-TS\\src\\redux\\appReducer.ts":"41","C:\\program\\samurai-way-TS\\src\\redux\\profileReducer.ts":"42","C:\\program\\samurai-way-TS\\src\\redux\\headerReducer.ts":"43","C:\\program\\samurai-way-TS\\src\\redux\\dialogsReducer.ts":"44","C:\\program\\samurai-way-TS\\src\\redux\\usersReducer.ts":"45","C:\\program\\samurai-way-TS\\src\\components\\WitchRouting.tsx":"46","C:\\program\\samurai-way-TS\\src\\utils\\hooks\\hooks.ts":"47","C:\\program\\samurai-way-TS\\src\\components\\common\\ErrorSnackbar\\ErrorSnackbar.tsx":"48","C:\\program\\samurai-way-TS\\src\\utils\\error-utils.ts":"49","C:\\program\\samurai-way-TS\\src\\api\\api.ts":"50","C:\\program\\samurai-way-TS\\src\\pages\\Profile.tsx":"51","C:\\program\\samurai-way-TS\\src\\pages\\Dialogs.tsx":"52","C:\\program\\samurai-way-TS\\src\\pages\\Users.tsx":"53","C:\\program\\samurai-way-TS\\src\\components\\login\\Login.tsx":"54","C:\\program\\samurai-way-TS\\src\\components\\page404\\Page404.tsx":"55","C:\\program\\samurai-way-TS\\src\\components\\layout\\Layout.tsx":"56","C:\\program\\samurai-way-TS\\src\\components\\Dialogs\\DialogItems.tsx":"57","C:\\program\\samurai-way-TS\\src\\utils\\validation\\validation.ts":"58","C:\\program\\samurai-way-TS\\src\\components\\common\\loading\\Loading.tsx":"59","C:\\program\\samurai-way-TS\\src\\components\\common\\textarea\\Textarea.tsx":"60","C:\\program\\samurai-way-TS\\src\\components\\Dialogs\\Messages\\Message.tsx":"61","C:\\program\\samurai-way-TS\\src\\components\\header\\Header.tsx":"62","C:\\program\\samurai-way-TS\\src\\components\\users\\User.tsx":"63","C:\\program\\samurai-way-TS\\src\\utils\\hoc\\withAuthRedirect.tsx":"64","C:\\program\\samurai-way-TS\\src\\components\\common\\pagination\\Pagination.tsx":"65","C:\\program\\samurai-way-TS\\src\\components\\profile\\userInfo\\UserInfo.tsx":"66","C:\\program\\samurai-way-TS\\src\\components\\profile\\myPosts\\MyPosts.tsx":"67","C:\\program\\samurai-way-TS\\src\\components\\common\\button\\Button.tsx":"68","C:\\program\\samurai-way-TS\\src\\components\\navBar\\NavBar.tsx":"69","C:\\program\\samurai-way-TS\\src\\components\\common\\input\\Input.tsx":"70","C:\\program\\samurai-way-TS\\src\\components\\footer\\Footer.tsx":"71","C:\\program\\samurai-way-TS\\src\\components\\profile\\myPosts\\myPost\\MyPost.tsx":"72","C:\\program\\samurai-way-TS\\src\\app\\App.tsx":"73","C:\\program\\samurai-way-TS\\src\\components\\profile\\userInfo\\Avatar\\AvatarUser.tsx":"74","C:\\program\\samurai-way-TS\\src\\components\\profile\\userInfo\\FormContacts\\FormContacts.tsx":"75","C:\\program\\samurai-way-TS\\src\\components\\EditMode\\EditMode.tsx":"76","C:\\program\\samurai-way-TS\\src\\components\\InDeveloping\\InDeveloping.tsx":"77","C:\\program\\samurai-way-TS\\src\\components\\common\\Loading\\Loading.tsx":"78","C:\\program\\samurai-way-TS\\src\\components\\Login\\Login.tsx":"79","C:\\program\\samurai-way-TS\\src\\components\\Page404\\Page404.tsx":"80","C:\\program\\samurai-way-TS\\src\\components\\Layout\\Layout.tsx":"81","C:\\program\\samurai-way-TS\\src\\components\\common\\Textarea\\Textarea.tsx":"82","C:\\program\\samurai-way-TS\\src\\components\\Users\\User.tsx":"83","C:\\program\\samurai-way-TS\\src\\components\\common\\Pagination\\Pagination.tsx":"84","C:\\program\\samurai-way-TS\\src\\components\\Profile\\MyPosts\\MyPosts.tsx":"85","C:\\program\\samurai-way-TS\\src\\components\\Profile\\UserInfo\\UserInfo.tsx":"86","C:\\program\\samurai-way-TS\\src\\components\\Header\\Header.tsx":"87","C:\\program\\samurai-way-TS\\src\\components\\common\\Button\\Button.tsx":"88","C:\\program\\samurai-way-TS\\src\\components\\NavBar\\NavBar.tsx":"89","C:\\program\\samurai-way-TS\\src\\components\\Footer\\Footer.tsx":"90","C:\\program\\samurai-way-TS\\src\\components\\common\\Input\\Input.tsx":"91","C:\\program\\samurai-way-TS\\src\\components\\Profile\\UserInfo\\Avatar\\AvatarUser.tsx":"92","C:\\program\\samurai-way-TS\\src\\components\\Profile\\UserInfo\\FormContacts\\FormContacts.tsx":"93","C:\\program\\samurai-way-TS\\src\\components\\Profile\\MyPosts\\MyPost\\MyPost.tsx":"94"},{"size":760,"mtime":1660028365044,"results":"95","hashOfConfig":"96"},{"size":663,"mtime":1660387258959,"results":"97","hashOfConfig":"96"},{"size":1306,"mtime":1659866041162,"results":"98","hashOfConfig":"96"},{"size":667,"mtime":1660039177894,"results":"99","hashOfConfig":"96"},{"size":3314,"mtime":1659885371334,"results":"100","hashOfConfig":"96"},{"size":1049,"mtime":1659860843596,"results":"101","hashOfConfig":"96"},{"size":4635,"mtime":1660025356024,"results":"102","hashOfConfig":"96"},{"size":7139,"mtime":1660050045968,"results":"103","hashOfConfig":"96"},{"size":3369,"mtime":1660045950093,"results":"104","hashOfConfig":"96"},{"size":268,"mtime":1658143084143,"results":"105","hashOfConfig":"96"},{"size":2504,"mtime":1659866041171,"results":"106","hashOfConfig":"96"},{"size":2900,"mtime":1659858944371,"results":"107","hashOfConfig":"96"},{"size":493,"mtime":1652261726874,"results":"108","hashOfConfig":"96"},{"size":718,"mtime":1652256090020,"results":"109","hashOfConfig":"96"},{"size":1258,"mtime":1659884442743,"results":"110","hashOfConfig":"96"},{"size":2695,"mtime":1659884442748,"results":"111","hashOfConfig":"96"},{"size":1099,"mtime":1658140598272,"results":"112","hashOfConfig":"96"},{"size":2296,"mtime":1658294522000,"results":"113","hashOfConfig":"96"},{"size":1838,"mtime":1658902699246,"results":"114","hashOfConfig":"96"},{"size":278,"mtime":1658863484845,"results":"115","hashOfConfig":"96"},{"size":810,"mtime":1659866041155,"results":"116","hashOfConfig":"96"},{"size":1943,"mtime":1659977862757,"results":"117","hashOfConfig":"96"},{"size":1771,"mtime":1658907236341,"results":"118","hashOfConfig":"96"},{"size":325,"mtime":1658140598272,"results":"119","hashOfConfig":"96"},{"size":1490,"mtime":1658907505701,"results":"120","hashOfConfig":"96"},{"size":990,"mtime":1658864199567,"results":"121","hashOfConfig":"96"},{"size":1120,"mtime":1658861797986,"results":"122","hashOfConfig":"96"},{"size":2978,"mtime":1659886779668,"results":"123","hashOfConfig":"96"},{"size":1838,"mtime":1658902699246,"results":"124","hashOfConfig":"96"},{"size":2456,"mtime":1659886779681,"results":"125","hashOfConfig":"96"},{"size":518,"mtime":1658907505701,"results":"126","hashOfConfig":"96"},{"size":1055,"mtime":1659883463873,"results":"127","hashOfConfig":"96"},{"size":4362,"mtime":1659883176643,"results":"128","hashOfConfig":"96"},{"size":537,"mtime":1659882631480,"results":"129","hashOfConfig":"96"},{"size":1800,"mtime":1659886679092,"results":"130","hashOfConfig":"96"},{"size":1030,"mtime":1660387032578,"results":"131","hashOfConfig":"96"},{"size":766,"mtime":1660036395253,"results":"132","hashOfConfig":"96"},{"size":1125,"mtime":1660387032594,"results":"133","hashOfConfig":"96"},{"size":757,"mtime":1663148906656,"results":"134","hashOfConfig":"135"},{"size":1306,"mtime":1659866041162,"results":"136","hashOfConfig":"135"},{"size":4785,"mtime":1663087130127,"results":"137","hashOfConfig":"135"},{"size":6036,"mtime":1663147340348,"results":"138","hashOfConfig":"135"},{"size":667,"mtime":1660039177894,"results":"139","hashOfConfig":"135"},{"size":1049,"mtime":1659860843596,"results":"140","hashOfConfig":"135"},{"size":4635,"mtime":1660025356024,"results":"141","hashOfConfig":"135"},{"size":1369,"mtime":1663169125558,"results":"142","hashOfConfig":"135"},{"size":278,"mtime":1658863484845,"results":"143","hashOfConfig":"135"},{"size":1055,"mtime":1659883463873,"results":"144","hashOfConfig":"135"},{"size":537,"mtime":1659882631480,"results":"145","hashOfConfig":"135"},{"size":3783,"mtime":1663140288140,"results":"146","hashOfConfig":"135"},{"size":1947,"mtime":1663169125478,"results":"147","hashOfConfig":"135"},{"size":1771,"mtime":1663169125962,"results":"148","hashOfConfig":"135"},{"size":1763,"mtime":1663169125533,"results":"149","hashOfConfig":"135"},{"size":2329,"mtime":1663094912418,"results":"150","hashOfConfig":"135"},{"size":766,"mtime":1660036395253,"results":"151","hashOfConfig":"135"},{"size":1125,"mtime":1660387032594,"results":"152","hashOfConfig":"135"},{"size":526,"mtime":1663169125958,"results":"153","hashOfConfig":"135"},{"size":518,"mtime":1658907505701,"results":"154","hashOfConfig":"135"},{"size":325,"mtime":1658140598272,"results":"155","hashOfConfig":"135"},{"size":1540,"mtime":1663163578707,"results":"156","hashOfConfig":"135"},{"size":718,"mtime":1663169125486,"results":"157","hashOfConfig":"135"},{"size":6920,"mtime":1663142262775,"results":"158","hashOfConfig":"135"},{"size":2500,"mtime":1663165101315,"results":"159","hashOfConfig":"135"},{"size":810,"mtime":1663169125540,"results":"160","hashOfConfig":"135"},{"size":2978,"mtime":1659886779668,"results":"161","hashOfConfig":"135"},{"size":4245,"mtime":1663164820725,"results":"162","hashOfConfig":"135"},{"size":1258,"mtime":1659884442743,"results":"163","hashOfConfig":"135"},{"size":1025,"mtime":1663160550224,"results":"164","hashOfConfig":"135"},{"size":3387,"mtime":1663165485836,"results":"165","hashOfConfig":"135"},{"size":1120,"mtime":1658861797986,"results":"166","hashOfConfig":"135"},{"size":268,"mtime":1658143084143,"results":"167","hashOfConfig":"135"},{"size":1099,"mtime":1658140598272,"results":"168","hashOfConfig":"135"},{"size":841,"mtime":1663169125515,"results":"169","hashOfConfig":"135"},{"size":1538,"mtime":1663087894114,"results":"170","hashOfConfig":"135"},{"size":4240,"mtime":1663161428609,"results":"171","hashOfConfig":"135"},{"size":3719,"mtime":1663169125519,"results":"172","hashOfConfig":"135"},{"size":246,"mtime":1663165529428,"results":"173","hashOfConfig":"135"},{"size":325,"mtime":1658140598272,"results":"174","hashOfConfig":"135"},{"size":2329,"mtime":1663169125529,"results":"175","hashOfConfig":"135"},{"size":766,"mtime":1663169125482,"results":"176","hashOfConfig":"135"},{"size":1125,"mtime":1663169125473,"results":"177","hashOfConfig":"135"},{"size":1540,"mtime":1663169125505,"results":"178","hashOfConfig":"135"},{"size":2500,"mtime":1663165101315,"results":"179","hashOfConfig":"135"},{"size":2978,"mtime":1659886779668,"results":"180","hashOfConfig":"135"},{"size":1258,"mtime":1663169125500,"results":"181","hashOfConfig":"135"},{"size":4245,"mtime":1663169125545,"results":"182","hashOfConfig":"135"},{"size":6920,"mtime":1663169125524,"results":"183","hashOfConfig":"135"},{"size":1025,"mtime":1663160550224,"results":"184","hashOfConfig":"135"},{"size":3387,"mtime":1663169125495,"results":"185","hashOfConfig":"135"},{"size":268,"mtime":1658143084143,"results":"186","hashOfConfig":"135"},{"size":1120,"mtime":1658861797986,"results":"187","hashOfConfig":"135"},{"size":1538,"mtime":1663087894114,"results":"188","hashOfConfig":"135"},{"size":4240,"mtime":1663169125510,"results":"189","hashOfConfig":"135"},{"size":1099,"mtime":1658140598272,"results":"190","hashOfConfig":"135"},{"filePath":"191","messages":"192","suppressedMessages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"19zykna",{"filePath":"194","messages":"195","suppressedMessages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"197","messages":"198","suppressedMessages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","suppressedMessages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"204","messages":"205","suppressedMessages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","suppressedMessages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","suppressedMessages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","suppressedMessages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"216","messages":"217","suppressedMessages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","suppressedMessages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"223","messages":"224","suppressedMessages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"222"},{"filePath":"227","messages":"228","suppressedMessages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"231"},{"filePath":"232","messages":"233","suppressedMessages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"222"},{"filePath":"236","messages":"237","suppressedMessages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"239","messages":"240","suppressedMessages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"242","messages":"243","suppressedMessages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"245","messages":"246","suppressedMessages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"248","messages":"249","suppressedMessages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"251","messages":"252","suppressedMessages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"254","messages":"255","suppressedMessages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"257","messages":"258","suppressedMessages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"260","messages":"261","suppressedMessages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"263","messages":"264","suppressedMessages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"266","messages":"267","suppressedMessages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"269","messages":"270","suppressedMessages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"272","messages":"273","suppressedMessages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"275","messages":"276","suppressedMessages":"277","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"278","messages":"279","suppressedMessages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"281","messages":"282","suppressedMessages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"284","messages":"285","suppressedMessages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"287","messages":"288","suppressedMessages":"289","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"290","messages":"291","suppressedMessages":"292","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"293","messages":"294","suppressedMessages":"295","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"296","messages":"297","suppressedMessages":"298","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"299","messages":"300","suppressedMessages":"301","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"222"},{"filePath":"303","messages":"304","suppressedMessages":"305","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"306","messages":"307","suppressedMessages":"308","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"309","messages":"310","suppressedMessages":"311","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"312","messages":"313","suppressedMessages":"314","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"xsik3g",{"filePath":"315","messages":"316","suppressedMessages":"317","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"318","messages":"319","suppressedMessages":"320","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321"},{"filePath":"322","messages":"323","suppressedMessages":"324","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325","usedDeprecatedRules":"326"},{"filePath":"327","messages":"328","suppressedMessages":"329","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"330","messages":"331","suppressedMessages":"332","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"333","messages":"334","suppressedMessages":"335","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"336","messages":"337","suppressedMessages":"338","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"339","messages":"340","suppressedMessages":"341","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"342","messages":"343","suppressedMessages":"344","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"345"},{"filePath":"346","messages":"347","suppressedMessages":"348","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"349","messages":"350","suppressedMessages":"351","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"352","messages":"353","suppressedMessages":"354","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355"},{"filePath":"356","messages":"357","suppressedMessages":"358","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"359","messages":"360","suppressedMessages":"361","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"362"},{"filePath":"363","messages":"364","suppressedMessages":"365","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"366","messages":"367","suppressedMessages":"368","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"369","messages":"370","suppressedMessages":"371","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"372","messages":"373","suppressedMessages":"374","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"375"},{"filePath":"376","messages":"377","suppressedMessages":"378","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"379","messages":"380","suppressedMessages":"381","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"382","messages":"383","suppressedMessages":"384","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"326"},{"filePath":"385","messages":"386","suppressedMessages":"387","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"388","messages":"389","suppressedMessages":"390","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"391","messages":"392","suppressedMessages":"393","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"326"},{"filePath":"394","messages":"395","suppressedMessages":"396","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"397","messages":"398","suppressedMessages":"399","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"400","messages":"401","suppressedMessages":"402","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"326"},{"filePath":"403","messages":"404","suppressedMessages":"405","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"406","messages":"407","suppressedMessages":"408","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"326"},{"filePath":"409","messages":"410","suppressedMessages":"411","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"326"},{"filePath":"412","messages":"413","suppressedMessages":"414","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"415","messages":"416","suppressedMessages":"417","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"418","messages":"419","suppressedMessages":"420","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"421","messages":"422","suppressedMessages":"423","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"424"},{"filePath":"425","messages":"426","suppressedMessages":"427","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"428","messages":"429","suppressedMessages":"430","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"431","messages":"432","suppressedMessages":"433","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"434","messages":"435","suppressedMessages":"436","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"437","messages":"438","suppressedMessages":"439","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"440","messages":"441","suppressedMessages":"442","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"443"},{"filePath":"444","messages":"445","suppressedMessages":"446","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"447","messages":"448","suppressedMessages":"449","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"450","messages":"451","suppressedMessages":"452","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"453","messages":"454","suppressedMessages":"455","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"456","messages":"457","suppressedMessages":"458","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"459","messages":"460","suppressedMessages":"461","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"462","messages":"463","suppressedMessages":"464","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"465","messages":"466","suppressedMessages":"467","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"468"},{"filePath":"469","messages":"470","suppressedMessages":"471","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"472","messages":"473","suppressedMessages":"474","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"475","messages":"476","suppressedMessages":"477","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"478","messages":"479","suppressedMessages":"480","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"481","messages":"482","suppressedMessages":"483","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"484","messages":"485","suppressedMessages":"486","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"487","messages":"488","suppressedMessages":"489","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"G:\\program\\practica\\react-practica\\it-incubator\\samurai-way-TS\\src\\index.tsx",[],[],"G:\\program\\practica\\react-practica\\it-incubator\\samurai-way-TS\\src\\App.tsx",["490"],[],"G:\\program\\practica\\react-practica\\it-incubator\\samurai-way-TS\\src\\redux\\store.ts",[],[],"G:\\program\\practica\\react-practica\\it-incubator\\samurai-way-TS\\src\\redux\\headerReducer.ts",[],[],[],"G:\\program\\practica\\react-practica\\it-incubator\\samurai-way-TS\\src\\redux\\profileReducer.ts",[],[],"G:\\program\\practica\\react-practica\\it-incubator\\samurai-way-TS\\src\\redux\\dialogsReducer.ts",[],[],"G:\\program\\practica\\react-practica\\it-incubator\\samurai-way-TS\\src\\redux\\usersReducer.ts",[],[],"G:\\program\\practica\\react-practica\\it-incubator\\samurai-way-TS\\src\\components\\header\\Header.tsx",["491","492","493","494","495","496","497","498","499"],[],"G:\\program\\practica\\react-practica\\it-incubator\\samurai-way-TS\\src\\components\\navBar\\NavBar.tsx",[],[],"G:\\program\\practica\\react-practica\\it-incubator\\samurai-way-TS\\src\\components\\footer\\Footer.tsx",[],[],[],"G:\\program\\practica\\react-practica\\it-incubator\\samurai-way-TS\\src\\components\\login\\Login.tsx",["500"],[],"import React, {useEffect} from 'react';\r\nimport {useFormik} from 'formik';\r\nimport style from './login.module.css'\r\nimport Button from '../common/button/Button';\r\nimport {Input} from '../common/input/Input';\r\nimport {useAppDispatch, useAppSelector} from '../../utils/hooks/hooks';\r\nimport {fetchAuthorization} from '../../redux/appReducer';\r\nimport {useNavigate} from 'react-router-dom';\r\nimport {validationLogin} from '../../utils/validation/validation';\r\n\r\n\r\nexport const Login = () => {\r\n    const dispatch = useAppDispatch()\r\n    const authorizedStatus = useAppSelector(state => state.app.authorizedStatus)\r\n    const navigate = useNavigate()\r\n\r\n    useEffect(() => {\r\n        if (authorizedStatus === 'successfully') navigate('/')\r\n    }, [authorizedStatus])\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n        },\r\n        validationSchema: validationLogin,\r\n        onSubmit: (values, {setStatus}) => {\r\n            dispatch(fetchAuthorization(values.email, values.password, setStatus));\r\n        },\r\n    });\r\n    const disabled = (formik.touched.password && formik.touched.email && !!(formik.errors.email || formik.errors.password))\r\n    return (\r\n        <div className={style.loginBloc}>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <Input id={'email'}\r\n                       name={'email'}\r\n                       label={'Email'}\r\n                       value={formik.values.email}\r\n                       onChange={formik.handleChange}\r\n                       error={formik.errors.email}\r\n                       touched={formik.touched.email}\r\n                       onBlur={() => formik.setFieldTouched('email', true)}\r\n                />\r\n                <Input id=\"password\"\r\n                       name=\"password\"\r\n                       label=\"Password\"\r\n                       type=\"password\"\r\n                       value={formik.values.password}\r\n                       onChange={formik.handleChange}\r\n                       error={formik.errors.password || formik.status}\r\n                       touched={formik.touched.password}\r\n                       onBlur={() => formik.setFieldTouched('password', true)}\r\n                />\r\n                <Button type=\"submit\"\r\n                        className={style.loginBtn}\r\n                        disabled={disabled}\r\n                >\r\n                    Войти\r\n                </Button>\r\n            </form>\r\n        </div>\r\n    );\r\n};","G:\\program\\practica\\react-practica\\it-incubator\\samurai-way-TS\\src\\api\\api.ts",["501"],[],"import axios, {AxiosResponse} from 'axios';\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {\r\n        'API-KEY': 'b68e1396-946f-405d-92ed-906f9f26a9d8'\r\n    }\r\n})\r\n\r\n\r\nexport const api = {\r\n    async getUser(currentPage: number) {\r\n        const response = await instance.get<FetchUserType>(`users?page=${currentPage}`)\r\n        return response.data\r\n    },\r\n    async getUserProfile(paramsURL: number) {\r\n        const response = await instance.get<UserProfileType>(`profile/${paramsURL}`)\r\n        return response.data\r\n    },\r\n    async authorizedMe() {\r\n        const response = await instance.get<ResponseType<AuthorizedUserType>>(`auth/me`)\r\n        return response.data\r\n    },\r\n    async unFollowUser(usersId: number) {\r\n        const response = await instance.delete<ResponseType>(`follow/${usersId}`)\r\n        return response.data\r\n    },\r\n    async followUser(usersId: number) {\r\n        const response = await instance.post<ResponseType>(`follow/${usersId}`)\r\n        return response.data\r\n    },\r\n    async statusUpdates(newStatus: string) {\r\n        const response = await instance.put<ResponseType>(`profile/status`, {status: newStatus})\r\n        return response.data\r\n    },\r\n    async getStatusUser(userId: number) {\r\n        const response = await instance.get<string | null>(`profile/status/${userId}`)\r\n        return response.data\r\n    },\r\n    async authorize(email: string, password: string) {\r\n        const response = await instance.post<ResponseType<{ id: number }>>(`auth/login`, {email, password})\r\n        return response.data\r\n    },\r\n    async logout() {\r\n        const response = await instance.delete<ResponseType>(`auth/login`)\r\n        return response.data\r\n    },\r\n\r\n}\r\n\r\n//type\r\nexport type ResponseType<T = {}> = {\r\n    resultCode: number\r\n    messages: string[]\r\n    data: T\r\n}\r\nexport type AuthorizedUserType = {\r\n    id: null | number\r\n    email: null | string\r\n    login: null | string\r\n\r\n}\r\nexport type UserProfileType = {\r\n    aboutMe: string | null\r\n    contacts: {\r\n        facebook: string | null\r\n        website: string | null\r\n        vk: string | null\r\n        twitter: string | null\r\n        instagram: string | null\r\n        youtube: string | null,\r\n        github: string | null\r\n        mainLink: string | null\r\n    },\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string | null\r\n    fullName: string | null\r\n    userId: number\r\n    photos: {\r\n        small: string | null\r\n        large: string | null\r\n    }\r\n}\r\nexport type UserType = {\r\n    name: string\r\n    id: number\r\n    uniqueUrlName: null\r\n    photos: {\r\n        small: null | string\r\n        large: null | string\r\n    },\r\n    status: null | string\r\n    followed: boolean\r\n}\r\nexport type FetchUserType = {\r\n    items: Array<UserType>\r\n    totalCount: number\r\n    error: null\r\n}",[],"G:\\program\\practica\\react-practica\\it-incubator\\samurai-way-TS\\src\\components\\Dialogs\\DialogItems.tsx",["502"],[],"import React from 'react';\r\nimport {NavLink, To} from \"react-router-dom\";\r\nimport style from \"./Dialogs.module.css\";\r\n\r\ntype DialogItemsPropsType ={\r\n    id: string\r\n    name:string\r\n}\r\n\r\nexport const DialogItems: React.FC<DialogItemsPropsType>= (props) => {\r\n    return (\r\n        <li>\r\n            <NavLink to={props.id} className={(navData=>navData.isActive ? style.active+' '+style.dialog:style.dialog)}>\r\n                {props.name}\r\n            </NavLink>\r\n        </li>\r\n    );\r\n};\r\n\r\n","G:\\program\\practica\\react-practica\\it-incubator\\samurai-way-TS\\src\\components\\Dialogs\\Messages\\Message.tsx",[],[],"G:\\program\\practica\\react-practica\\it-incubator\\samurai-way-TS\\src\\components\\profile\\myPosts\\MyPosts.tsx",[],[],"G:\\program\\practica\\react-practica\\it-incubator\\samurai-way-TS\\src\\components\\profile\\userInfo\\UserInfo.tsx",[],[],"G:\\program\\practica\\react-practica\\it-incubator\\samurai-way-TS\\src\\components\\profile\\myPosts\\myPost\\MyPost.tsx",[],[],"G:\\program\\practica\\react-practica\\it-incubator\\samurai-way-TS\\src\\components\\Users\\User.tsx",[],[],"G:\\program\\practica\\react-practica\\it-incubator\\samurai-way-TS\\src\\components\\Users\\Status.tsx",[],[],"G:\\program\\practica\\react-practica\\it-incubator\\samurai-way-TS\\src\\utils\\hooks\\hooks.ts",[],[],"G:\\program\\practica\\react-practica\\it-incubator\\samurai-way-TS\\src\\utils\\hoc\\withAuthRedirect.tsx",[],[],"G:\\program\\practica\\react-practica\\it-incubator\\samurai-way-TS\\src\\pages\\Profile.tsx",["503"],[],"G:\\program\\practica\\react-practica\\it-incubator\\samurai-way-TS\\src\\pages\\Dialogs.tsx",[],[],"G:\\program\\practica\\react-practica\\it-incubator\\samurai-way-TS\\src\\components\\common\\loading\\Loading.tsx",[],[],"G:\\program\\practica\\react-practica\\it-incubator\\samurai-way-TS\\src\\components\\common\\textarea\\Textarea.tsx",[],[],"G:\\program\\practica\\react-practica\\it-incubator\\samurai-way-TS\\src\\components\\common\\button\\Button.tsx",[],[],"G:\\program\\practica\\react-practica\\it-incubator\\samurai-way-TS\\src\\components\\common\\input\\Input.tsx",[],[],"G:\\program\\practica\\react-practica\\it-incubator\\samurai-way-TS\\src\\components\\common\\pagination\\Pagination.tsx",[],[],"G:\\program\\practica\\react-practica\\it-incubator\\samurai-way-TS\\src\\components\\users\\Status.tsx",[],[],"G:\\program\\practica\\react-practica\\it-incubator\\samurai-way-TS\\src\\components\\users\\User.tsx",[],[],"G:\\program\\practica\\react-practica\\it-incubator\\samurai-way-TS\\src\\utils\\validation\\validation.ts",[],[],"G:\\program\\practica\\react-practica\\it-incubator\\samurai-way-TS\\src\\components\\common\\ErrorSnackbar\\ErrorSnackbar.tsx",["504"],[],"G:\\program\\practica\\react-practica\\it-incubator\\samurai-way-TS\\src\\redux\\appReducer.ts",["505"],[],"G:\\program\\practica\\react-practica\\it-incubator\\samurai-way-TS\\src\\utils\\error-utils.ts",[],[],"G:\\program\\practica\\react-practica\\it-incubator\\samurai-way-TS\\src\\pages\\Users.tsx",["506"],[],"import React, {useEffect} from 'react';\nimport {Pagination} from '../components/common/pagination/Pagination';\nimport {Loading} from '../components/common/loading/Loading';\nimport {fetchUserData,} from '../redux/usersReducer';\nimport {User} from '../components/users/User';\nimport {useAppDispatch, useAppSelector} from '../utils/hooks/hooks';\n\n\nexport const Users = () => {\n    const dispatch = useAppDispatch()\n    const {\n        users,\n        totalCount,\n        pageSize,\n        currentPage,\n        userSubscription,\n        portionsNumber,\n        isLoading,\n        authorizedStatus\n    } = useAppSelector(state =>\n        ({\n            users: state.usersPage.items,\n            totalCount: state.usersPage.totalCount,\n            pageSize: state.usersPage.pageSize,\n            currentPage: state.usersPage.currentPage,\n            userSubscription: state.usersPage.userSubscription,\n            portionsNumber: state.usersPage.portionsNumber,\n            isLoading: state.app.isLoading,\n            authorizedStatus: state.app.authorizedStatus,\n        }))\n\n\n    useEffect(() => {\n        dispatch(fetchUserData(currentPage))\n    }, [currentPage])\n\n    const usersList = users.map(item => <User key={item.id}\n                                              users={item}\n                                              authorizedStatus={authorizedStatus}\n                                              userSubscription={userSubscription}\n    />)\n    if (isLoading) {\n        return <Loading/>\n    }\n\n    return (\n        <div>\n            {usersList}\n            <Pagination currentPage={currentPage}\n                        totalCount={totalCount}\n                        pageSize={pageSize}\n                        portionsNumber={portionsNumber}\n            />\n        </div>\n    );\n};\n\n\n\n\n\n","G:\\program\\practica\\react-practica\\it-incubator\\samurai-way-TS\\src\\components\\WitchRouting.tsx",[],[],"G:\\program\\practica\\react-practica\\it-incubator\\samurai-way-TS\\src\\components\\page404\\Page404.tsx",[],[],"G:\\program\\practica\\react-practica\\it-incubator\\samurai-way-TS\\src\\components\\layout\\Layout.tsx",[],[],"C:\\program\\samurai-way-TS\\src\\index.tsx",[],[],"C:\\program\\samurai-way-TS\\src\\redux\\store.ts",[],[],"C:\\program\\samurai-way-TS\\src\\redux\\appReducer.ts",["507"],[],"import {api, AuthorizedUserType, UserProfileType} from '../api/api';\r\nimport {AppThunk} from './store';\r\nimport axios, {AxiosError} from 'axios';\r\nimport {errorFromStatusCodeOrApplication} from '../utils/error-utils';\r\nimport {updateAvatarSuccess} from './profileReducer';\r\n\r\nlet initialStateApp = {\r\n    isLoading: false,\r\n    authorizedStatus: 'initialization' as StatusAuthorizedType,\r\n    authorizedUser: {\r\n        id: null,\r\n        email: null,\r\n        login: null\r\n    } as AuthorizedUserType,\r\n    authorizedProfileUser: {\r\n        photos: {small: null}\r\n    } as UserProfileType,\r\n    serverError: null as null | string\r\n}\r\n\r\nexport const appReducer = (state = initialStateApp, action: ActionAppReducerType): InitialStateTypeApp => {\r\n    switch (action.type) {\r\n        case 'APP/IS_LOADING':\r\n            return {\r\n                ...state,\r\n                isLoading: action.payload\r\n            }\r\n        case 'APP/SET_AUTHORIZED_USER':\r\n            return {\r\n                ...state,\r\n                authorizedUser: {...action.user},\r\n            }\r\n        case 'APP/SET_AUTHORIZED_PROFILE_USER':\r\n            return {\r\n                ...state,\r\n                authorizedProfileUser: action.payload\r\n            }\r\n        case 'APP/SET_AUTHORIZED_STATUS':\r\n            return {\r\n                ...state,\r\n                authorizedStatus: action.payload\r\n            }\r\n        case 'APP/SET-SERVER-ERROR':\r\n            return {...state, serverError: action.payload}\r\n        case 'PROFILE/UPDATE_AVATAR_SUCCESS': {\r\n            const photos = {...action.payload}\r\n            return {\r\n                ...state,\r\n                authorizedProfileUser: {\r\n                    ...state.authorizedProfileUser,\r\n                    photos: photos\r\n                }\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//action\r\nexport const setIsLoading = (payload: boolean) => ({type: 'APP/IS_LOADING', payload} as const)\r\nexport const setAuthorizedUser = (user: AuthorizedUserType) => ({type: 'APP/SET_AUTHORIZED_USER', user} as const)\r\nexport const setAuthorizedStatus = (payload: StatusAuthorizedType) =>\r\n    ({type: 'APP/SET_AUTHORIZED_STATUS', payload} as const)\r\nexport const setAuthorizedProfileUser = (payload: UserProfileType) =>\r\n    ({type: 'APP/SET_AUTHORIZED_PROFILE_USER', payload} as const)\r\nexport const setServerError = (payload: string | null) => ({type: 'APP/SET-SERVER-ERROR', payload} as const)\r\n\r\n//thunk\r\nexport const fetchAuthorizedData = (): AppThunk => async dispatch => {\r\n    try {\r\n        dispatch(setIsLoading(true))\r\n\r\n        let response = await api.authorizedMe()\r\n        if (response.resultCode === 0) {\r\n            dispatch(setAuthorizedUser(response.data))\r\n            dispatch(setAuthorizedStatus('successfully'))\r\n            if (response.data.id) {\r\n                let responseUser = await api.getUserProfile(response.data.id)\r\n                dispatch(setAuthorizedProfileUser(responseUser))\r\n            }\r\n        } else {\r\n            dispatch(setAuthorizedStatus('fail'))\r\n        }\r\n    } catch (e) {\r\n        const error = e as Error | AxiosError\r\n        errorFromStatusCodeOrApplication(error, dispatch)\r\n    } finally {\r\n        dispatch(setIsLoading(false))\r\n    }\r\n}\r\nexport const fetchAuthorization = (email: string, password: string, setStatus: any): AppThunk => async dispatch => {\r\n    try {\r\n        dispatch(setIsLoading(true))\r\n        let response = await api.authorize(email, password)\r\n        if (response.resultCode === 0) {\r\n            dispatch(fetchAuthorizedData())\r\n        } else if (response.resultCode !== 0) {\r\n            setStatus(response.messages[0])\r\n        }\r\n    } catch (e) {\r\n        const error = e as Error | AxiosError\r\n        errorFromStatusCodeOrApplication(error, dispatch)\r\n    } finally {\r\n        dispatch(setIsLoading(false))\r\n    }\r\n}\r\nexport const fetchLogout = (): AppThunk => async dispatch => {\r\n    try {\r\n        dispatch(setIsLoading(true))\r\n        let response = await api.logout()\r\n        if (response.resultCode === 0) {\r\n            dispatch(fetchAuthorizedData())\r\n        }\r\n    } catch (e) {\r\n        const error = e as Error | AxiosError\r\n        errorFromStatusCodeOrApplication(error, dispatch)\r\n    } finally {\r\n        dispatch(setIsLoading(false))\r\n    }\r\n}\r\n\r\n//type\r\nexport type InitialStateTypeApp = typeof initialStateApp\r\nexport type StatusAuthorizedType = 'successfully' | 'initialization' | 'fail'\r\nexport type ActionAppReducerType =\r\n    ReturnType<typeof setIsLoading>\r\n    | ReturnType<typeof setAuthorizedUser>\r\n    | ReturnType<typeof setAuthorizedStatus>\r\n    | ReturnType<typeof setAuthorizedProfileUser>\r\n    | ReturnType<typeof setServerError>\r\n    | ReturnType<typeof updateAvatarSuccess>\r\n\r\n","C:\\program\\samurai-way-TS\\src\\redux\\profileReducer.ts",["508"],[],"import {api, ContactsType, PhotosType, UpdateDateType, UserProfileType} from '../api/api';\r\nimport {setIsLoading} from './appReducer';\r\nimport {AppThunk} from './store';\r\nimport {AxiosError} from 'axios';\r\nimport {errorFromStatusCodeOrApplication} from '../utils/error-utils';\r\n\r\nconst initialSateProfile = {\r\n    posts: [\r\n        {id: 1, massage: 'Everything is great', likes: 3},\r\n        {id: 2, massage: 'Looking for my dream job', likes: 4},\r\n        {id: 3, massage: 'I develop my skills', likes: 5},\r\n        {id: 4, massage: 'Got a job of your dreams', likes: 12},\r\n    ] as Array<PostsType>,\r\n    userProfile: {} as UserProfileType,\r\n    userStatus: null as null | string\r\n}\r\n\r\nexport const profileReducer = (state = initialSateProfile, action: ActionProfileReducerType): InitialSateProfileType => {\r\n    switch (action.type) {\r\n        case 'PROFILE/ADD_POST' :\r\n            let newPost: PostsType = {\r\n                id: 23,\r\n                massage: action.payload,\r\n                likes: 0\r\n            }\r\n            return {\r\n                ...state,\r\n                posts: [newPost, ...state.posts],\r\n            }\r\n        case 'PROFILE/SET_USER_PROFILE':\r\n            return {\r\n                ...state,\r\n                userProfile: action.payload\r\n            }\r\n        case 'PROFILE/SET_STATUS_UPDATES':\r\n            return {\r\n                ...state,\r\n                userStatus: action.payload\r\n            }\r\n        case 'PROFILE/UPDATE_AVATAR_SUCCESS':\r\n            return {\r\n                ...state,\r\n                userProfile: {...state.userProfile, photos: action.payload}\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\n//action\r\nexport const addPost = (payload: string) =>\r\n    ({type: 'PROFILE/ADD_POST', payload} as const)\r\nexport const setUserProfile = (payload: UserProfileType) =>\r\n    ({type: 'PROFILE/SET_USER_PROFILE', payload} as const)\r\nexport const setStatusUpdates = (payload: string | null) =>\r\n    ({type: 'PROFILE/SET_STATUS_UPDATES', payload} as const)\r\nexport const updateAvatarSuccess = (payload: PhotosType) =>\r\n    ({type: 'PROFILE/UPDATE_AVATAR_SUCCESS', payload} as const)\r\n\r\n//thunk\r\nexport const fetchUserProfileData = (paramsURL: number): AppThunk => async dispatch => {\r\n    try {\r\n        dispatch(setIsLoading(true))\r\n        if (paramsURL) {\r\n            const res = await api.getUserProfile(paramsURL)\r\n            dispatch(setUserProfile(res))\r\n            const responseStatus = await api.getStatusUser(res.userId)\r\n            dispatch(setStatusUpdates(responseStatus))\r\n        }\r\n    } catch (e) {\r\n        const error = e as Error | AxiosError\r\n        errorFromStatusCodeOrApplication(error, dispatch)\r\n    } finally {\r\n        dispatch(setIsLoading(false))\r\n    }\r\n}\r\nexport const fetchStatusUpdates = (newStatus: string, usersId: number): AppThunk => async dispatch => {\r\n    try {\r\n        dispatch(setIsLoading(true))\r\n        const res = await api.statusUpdates(newStatus)\r\n        if (res.resultCode === 0) {\r\n            const responseNewStatus = await api.getStatusUser(usersId)\r\n            dispatch(setStatusUpdates(responseNewStatus))\r\n        }\r\n    } catch (e) {\r\n        const error = e as Error | AxiosError\r\n        errorFromStatusCodeOrApplication(error, dispatch)\r\n    } finally {\r\n        dispatch(setIsLoading(false))\r\n    }\r\n}\r\nexport const updateAvatar = (image: any): AppThunk => async (dispatch, getState) => {\r\n    try {\r\n        dispatch(setIsLoading(true))\r\n        const res = await api.savePhoto(image)\r\n        if (res.resultCode === 0) {\r\n            dispatch(updateAvatarSuccess(res.data.photos))\r\n        }\r\n    } catch (e) {\r\n        const error = e as Error | AxiosError\r\n        errorFromStatusCodeOrApplication(error, dispatch)\r\n    } finally {\r\n        dispatch(setIsLoading(false))\r\n    }\r\n}\r\nexport const updateContacts = (contacts?: ContactsType, fullName?: string): AppThunk => async (dispatch, getState) => {\r\n\r\n\r\n    const data = {\r\n        aboutMe: getState().profilePage.userProfile.aboutMe,\r\n        lookingForAJobDescription: getState().profilePage.userProfile.lookingForAJobDescription,\r\n        fullName: fullName || getState().profilePage.userProfile.fullName,\r\n        contacts: contacts || getState().profilePage.userProfile.contacts\r\n    }\r\n\r\n    try {\r\n        dispatch(setIsLoading(true))\r\n        const res = await api.updateContacts(data)\r\n        if (res.resultCode === 0) {\r\n            const paramsURL = getState().app.authorizedProfileUser.userId\r\n            dispatch(fetchUserProfileData(paramsURL))\r\n        }\r\n    } catch (e) {\r\n        const error = e as Error | AxiosError\r\n        errorFromStatusCodeOrApplication(error, dispatch)\r\n    } finally {\r\n        dispatch(setIsLoading(false))\r\n    }\r\n}\r\n// export const updateName = (fullName: string): AppThunk => async (dispatch, getState) => {\r\n//\r\n//\r\n//     const data = {\r\n//         aboutMe: getState().profilePage.userProfile.aboutMe,\r\n//         lookingForAJobDescription: getState().profilePage.userProfile.lookingForAJobDescription,\r\n//         fullName,\r\n//         contacts:getState().profilePage.userProfile.contacts\r\n//     }\r\n//\r\n//     try {\r\n//         dispatch(setIsLoading(true))\r\n//         const res = await api.updateContacts(data)\r\n//         if (res.resultCode === 0) {\r\n//             const paramsURL = getState().app.authorizedProfileUser.userId\r\n//             dispatch(fetchUserProfileData(paramsURL))\r\n//         }\r\n//     } catch (e) {\r\n//         const error = e as Error | AxiosError\r\n//         errorFromStatusCodeOrApplication(error, dispatch)\r\n//     } finally {\r\n//         dispatch(setIsLoading(false))\r\n//     }\r\n// }\r\n\r\n//type\r\nexport type InitialSateProfileType = typeof initialSateProfile\r\nexport type PostsType = {\r\n    id: number\r\n    massage: string\r\n    likes: number\r\n}\r\nexport type ActionProfileReducerType =\r\n    ReturnType<typeof addPost>\r\n    | ReturnType<typeof setUserProfile>\r\n    | ReturnType<typeof setStatusUpdates>\r\n    | ReturnType<typeof updateAvatarSuccess>\r\n",[],"C:\\program\\samurai-way-TS\\src\\redux\\headerReducer.ts",[],[],"C:\\program\\samurai-way-TS\\src\\redux\\dialogsReducer.ts",[],[],"C:\\program\\samurai-way-TS\\src\\redux\\usersReducer.ts",[],[],"C:\\program\\samurai-way-TS\\src\\components\\WitchRouting.tsx",[],[],"C:\\program\\samurai-way-TS\\src\\utils\\hooks\\hooks.ts",[],[],"C:\\program\\samurai-way-TS\\src\\components\\common\\ErrorSnackbar\\ErrorSnackbar.tsx",["509"],[],"import React, {useState} from 'react'\r\nimport MuiAlert, {AlertProps} from '@material-ui/lab/Alert';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport {useAppDispatch, useAppSelector} from '../../../utils/hooks/hooks';\r\nimport {setServerError} from '../../../redux/appReducer';\r\n\r\n\r\nconst Alert = React.forwardRef<HTMLDivElement, AlertProps>(function Alert(\r\n    props, ref) {\r\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />\r\n})\r\n\r\nexport function ErrorSnackbar() {\r\n    const error = useAppSelector(state => state.app.serverError)\r\n    const dispatch = useAppDispatch()\r\n\r\n    const handleClose = (event?: React.SyntheticEvent | Event, reason?: string) => {\r\n        if (reason === 'clickaway') {\r\n            return\r\n        }\r\n        dispatch(setServerError(null))\r\n    }\r\n    return (\r\n        <Snackbar open={error !== null} autoHideDuration={4000} onClose={handleClose}>\r\n            <Alert onClose={handleClose} severity=\"error\">\r\n                {error}\r\n            </Alert>\r\n        </Snackbar>\r\n    )\r\n}\r\n","C:\\program\\samurai-way-TS\\src\\utils\\error-utils.ts",[],[],"C:\\program\\samurai-way-TS\\src\\api\\api.ts",[],[],"C:\\program\\samurai-way-TS\\src\\pages\\Profile.tsx",["510"],[],"import React, {useEffect} from 'react';\r\nimport {MyPosts} from '../components/Profile/MyPosts/MyPosts';\r\nimport UserInfo from '../components/Profile/UserInfo/UserInfo';\r\nimport {Loading} from '../components/common/Loading/Loading';\r\nimport {useParams} from 'react-router';\r\nimport {useNavigate} from 'react-router-dom';\r\nimport {fetchUserProfileData,} from '../redux/profileReducer';\r\nimport {useAppDispatch, useAppSelector} from '../utils/hooks/hooks';\r\n\r\n\r\nexport const Profile = () => {\r\n    const dispatch = useAppDispatch()\r\n\r\n    const authorizedStatus = useAppSelector(state => state.app.authorizedStatus)\r\n    const authorizedUser = useAppSelector(state => state.app.authorizedUser)\r\n    const isLoading = useAppSelector(state => state.app.isLoading)\r\n    const posts = useAppSelector(state => state.profilePage.posts)\r\n    const userProfile = useAppSelector(state => state.profilePage.userProfile)\r\n    const userStatus = useAppSelector(state => state.profilePage.userStatus)\r\n\r\n    let params = useParams<'id'>()\r\n    let paramsURL = Number(params['id'])\r\n\r\n    const navigate = useNavigate()\r\n\r\n    useEffect(() => {\r\n        if (authorizedStatus === 'successfully' && !params['id']) {\r\n            if (authorizedUser.id) paramsURL = authorizedUser.id\r\n        }\r\n        if (authorizedStatus === 'successfully' || paramsURL) {\r\n            dispatch(fetchUserProfileData(paramsURL))\r\n        } else if (authorizedStatus === 'fail') {\r\n            navigate('/Login')\r\n        }\r\n\r\n    }, [authorizedStatus, paramsURL])\r\n\r\n    if (Object.keys(userProfile).length === 0 || isLoading) {\r\n        return <Loading/>\r\n    }\r\n    return (\r\n        <>\r\n            <UserInfo userProfile={userProfile}\r\n                      authorizedUserId={authorizedUser.id}\r\n                      userStatus={userStatus}/>\r\n            <MyPosts photoUser={userProfile.photos.small}\r\n                     posts={posts}\r\n            />\r\n        </>);\r\n};\r\n\r\n\r\n","C:\\program\\samurai-way-TS\\src\\pages\\Dialogs.tsx",[],[],"C:\\program\\samurai-way-TS\\src\\pages\\Users.tsx",["511"],[],"import React, {useEffect} from 'react';\nimport {Pagination} from '../components/common/Pagination/Pagination';\nimport {Loading} from '../components/common/Loading/Loading';\nimport {fetchUserData,} from '../redux/usersReducer';\nimport {User} from '../components/Users/User';\nimport {useAppDispatch, useAppSelector} from '../utils/hooks/hooks';\n\n\nconst Users = () => {\n    const dispatch = useAppDispatch()\n    const users = useAppSelector(state => state.usersPage.items)\n    const totalCount = useAppSelector(state => state.usersPage.totalCount)\n    const pageSize = useAppSelector(state => state.usersPage.pageSize)\n    const currentPage = useAppSelector(state => state.usersPage.currentPage)\n    const userSubscription = useAppSelector(state => state.usersPage.userSubscription)\n    const portionsNumber = useAppSelector(state => state.usersPage.portionsNumber)\n    const isLoading = useAppSelector(state => state.app.isLoading)\n    const authorizedStatus = useAppSelector(state => state.app.authorizedStatus)\n\n\n    useEffect(() => {\n        dispatch(fetchUserData(currentPage))\n    }, [currentPage])\n\n    const usersList = users.map(item => <User key={item.id}\n                                              users={item}\n                                              authorizedStatus={authorizedStatus}\n                                              userSubscription={userSubscription}\n    />)\n    if (isLoading) {\n        return <Loading/>\n    }\n\n    return (\n        <div>\n            {usersList}\n            <Pagination currentPage={currentPage}\n                        totalCount={totalCount}\n                        pageSize={pageSize}\n                        portionsNumber={portionsNumber}\n            />\n        </div>\n    );\n};\nexport default Users\n\n\n\n\n\n","C:\\program\\samurai-way-TS\\src\\components\\login\\Login.tsx",["512"],[],"C:\\program\\samurai-way-TS\\src\\components\\page404\\Page404.tsx",[],[],"C:\\program\\samurai-way-TS\\src\\components\\layout\\Layout.tsx",[],[],"C:\\program\\samurai-way-TS\\src\\components\\Dialogs\\DialogItems.tsx",["513"],[],"import React from 'react';\r\nimport {NavLink, To} from 'react-router-dom';\r\nimport style from './dialogs.module.css';\r\n\r\ntype DialogItemsPropsType = {\r\n    id: string\r\n    name: string\r\n}\r\n\r\nexport const DialogItems: React.FC<DialogItemsPropsType> = (props) => {\r\n    return (\r\n        <li>\r\n            <NavLink to={props.id}\r\n                     className={(navData => navData.isActive ? style.active + ' ' + style.dialog : style.dialog)}>\r\n                {props.name}\r\n            </NavLink>\r\n        </li>\r\n    );\r\n};\r\n\r\n","C:\\program\\samurai-way-TS\\src\\utils\\validation\\validation.ts",[],[],"C:\\program\\samurai-way-TS\\src\\components\\common\\loading\\Loading.tsx",[],[],"C:\\program\\samurai-way-TS\\src\\components\\common\\textarea\\Textarea.tsx",[],[],"C:\\program\\samurai-way-TS\\src\\components\\Dialogs\\Messages\\Message.tsx",[],[],"C:\\program\\samurai-way-TS\\src\\components\\header\\Header.tsx",["514","515"],[],"C:\\program\\samurai-way-TS\\src\\components\\users\\User.tsx",[],[],"C:\\program\\samurai-way-TS\\src\\utils\\hoc\\withAuthRedirect.tsx",[],[],"C:\\program\\samurai-way-TS\\src\\components\\common\\pagination\\Pagination.tsx",[],[],"C:\\program\\samurai-way-TS\\src\\components\\profile\\userInfo\\UserInfo.tsx",[],[],"C:\\program\\samurai-way-TS\\src\\components\\profile\\myPosts\\MyPosts.tsx",[],[],"C:\\program\\samurai-way-TS\\src\\components\\common\\button\\Button.tsx",[],[],"C:\\program\\samurai-way-TS\\src\\components\\navBar\\NavBar.tsx",[],[],"C:\\program\\samurai-way-TS\\src\\components\\common\\input\\Input.tsx",[],[],"C:\\program\\samurai-way-TS\\src\\components\\footer\\Footer.tsx",[],[],"C:\\program\\samurai-way-TS\\src\\components\\profile\\myPosts\\myPost\\MyPost.tsx",[],[],"C:\\program\\samurai-way-TS\\src\\app\\App.tsx",["516"],[],"import React, {useEffect} from 'react'\r\nimport './App.css';\r\nimport {fetchAuthorizedData} from '../redux/appReducer';\r\nimport {ErrorSnackbar} from '../components/common/ErrorSnackbar/ErrorSnackbar';\r\nimport {WitchRouting} from '../components/WitchRouting';\r\nimport {useAppDispatch, useAppSelector} from '../utils/hooks/hooks';\r\nimport {Loading} from '../components/common/Loading/Loading';\r\n\r\n\r\nconst App = () => {\r\n    const dispatch = useAppDispatch()\r\n    const authorizedStatus = useAppSelector(state => state.app.authorizedStatus)\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchAuthorizedData())\r\n    }, [])\r\n\r\n\r\n    if (authorizedStatus === 'initialization') {\r\n        return <Loading/>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <WitchRouting/>\r\n            <ErrorSnackbar/>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default (App);\r\n\r\n","C:\\program\\samurai-way-TS\\src\\components\\profile\\userInfo\\Avatar\\AvatarUser.tsx",[],[],"C:\\program\\samurai-way-TS\\src\\components\\profile\\userInfo\\FormContacts\\FormContacts.tsx",[],[],"C:\\program\\samurai-way-TS\\src\\components\\EditMode\\EditMode.tsx",[],[],"C:\\program\\samurai-way-TS\\src\\components\\InDeveloping\\InDeveloping.tsx",[],[],"C:\\program\\samurai-way-TS\\src\\components\\common\\Loading\\Loading.tsx",[],[],"C:\\program\\samurai-way-TS\\src\\components\\Login\\Login.tsx",["517"],[],"import React, {useEffect} from 'react';\r\nimport {useFormik} from 'formik';\r\nimport style from './login.module.css'\r\nimport Button from '../common/Button/Button';\r\nimport {Input} from '../common/Input/Input';\r\nimport {useAppDispatch, useAppSelector} from '../../utils/hooks/hooks';\r\nimport {fetchAuthorization} from '../../redux/appReducer';\r\nimport {useNavigate} from 'react-router-dom';\r\nimport {validationLogin} from '../../utils/validation/validation';\r\n\r\n\r\nexport const Login = () => {\r\n    const dispatch = useAppDispatch()\r\n    const authorizedStatus = useAppSelector(state => state.app.authorizedStatus)\r\n    const navigate = useNavigate()\r\n\r\n    useEffect(() => {\r\n        if (authorizedStatus === 'successfully') navigate('/')\r\n    }, [authorizedStatus])\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n        },\r\n        validationSchema: validationLogin,\r\n        onSubmit: (values, {setStatus}) => {\r\n            dispatch(fetchAuthorization(values.email, values.password, setStatus));\r\n        },\r\n    });\r\n    const disabled = (formik.touched.password && formik.touched.email && !!(formik.errors.email || formik.errors.password))\r\n    return (\r\n        <div className={style.loginBloc}>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <Input id={'email'}\r\n                       label={'Email'}\r\n                       {...formik.getFieldProps('email')}\r\n                       error={formik.errors.email}\r\n                       touched={formik.touched.email}\r\n                       onBlur={() => formik.setFieldTouched('email', true)}\r\n                />\r\n                <Input id=\"password\"\r\n                       label=\"Password\"\r\n                       type=\"password\"\r\n                       {...formik.getFieldProps('password')}\r\n                       error={formik.errors.password || formik.status}\r\n                       touched={formik.touched.password}\r\n                       onBlur={() => formik.setFieldTouched('password', true)}\r\n                />\r\n                <Button type=\"submit\"\r\n                        className={style.loginBtn}\r\n                        disabled={disabled}\r\n                >\r\n                    Войти\r\n                </Button>\r\n            </form>\r\n        </div>\r\n    );\r\n};","C:\\program\\samurai-way-TS\\src\\components\\Page404\\Page404.tsx",[],[],"C:\\program\\samurai-way-TS\\src\\components\\Layout\\Layout.tsx",[],[],"C:\\program\\samurai-way-TS\\src\\components\\common\\Textarea\\Textarea.tsx",[],[],"C:\\program\\samurai-way-TS\\src\\components\\Users\\User.tsx",[],[],"C:\\program\\samurai-way-TS\\src\\components\\common\\Pagination\\Pagination.tsx",[],[],"C:\\program\\samurai-way-TS\\src\\components\\Profile\\MyPosts\\MyPosts.tsx",[],[],"C:\\program\\samurai-way-TS\\src\\components\\Profile\\UserInfo\\UserInfo.tsx",[],[],"C:\\program\\samurai-way-TS\\src\\components\\Header\\Header.tsx",["518","519"],[],"import {AppBar, Paper} from '@material-ui/core';\r\nimport React, {useCallback, useEffect, useRef} from 'react';\r\nimport {createStyles, makeStyles, Theme} from '@material-ui/core/styles';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport imgIcon from '../../assest/img/logo.png'\r\nimport {MenuOpen} from '@material-ui/icons';\r\nimport style from './header.module.css'\r\nimport NavBar from '../NavBar/NavBar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport {NavLink, useNavigate} from 'react-router-dom';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport {fetchLogout} from '../../redux/appReducer';\r\nimport {showMenuHandler} from '../../redux/headerReducer';\r\nimport {useAppDispatch, useAppSelector} from '../../utils/hooks/hooks';\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            flexGrow: 1,\r\n            position: 'relative',\r\n        },\r\n        menuButton: {\r\n            marginRight: theme.spacing(2),\r\n        },\r\n        title: {\r\n            flexGrow: 1,\r\n        },\r\n    }),\r\n);\r\n\r\nexport const Header: React.FC = () => {\r\n        const dispatch = useAppDispatch()\r\n        const classes = useStyles();\r\n\r\n        const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n        const open = Boolean(anchorEl);\r\n\r\n        const ref = useRef<HTMLInputElement | null>(null)\r\n\r\n        const authorizedStatus = useAppSelector(state => state.app.authorizedStatus)\r\n        const userFoto = useAppSelector(state => state.app.authorizedProfileUser.photos.small)\r\n        const menuIsShow = useAppSelector(state => state.headerPage.menuIsShow)\r\n\r\n        const navigate = useNavigate()\r\n\r\n        const isShowNavBarMenu = useCallback((isShow: boolean) => {\r\n            dispatch(showMenuHandler(isShow))\r\n        }, [dispatch]);\r\n\r\n        const handleMenu = (event: React.MouseEvent<HTMLElement>) => {\r\n            setAnchorEl(event.currentTarget);\r\n        };\r\n\r\n        const handleClose = () => {\r\n            setAnchorEl(null);\r\n        };\r\n\r\n        function onclickLogoutHandler() {\r\n            handleClose()\r\n            dispatch(fetchLogout())\r\n        }\r\n\r\n\r\n        function navBarMenuClicked(event: any) {\r\n            let path = event.path || (event.composedPath && event.composedPath())\r\n            if (!path.includes(ref.current)) {\r\n                isShowNavBarMenu && isShowNavBarMenu(false)\r\n            }\r\n        }\r\n\r\n        useEffect(() => {\r\n            let navbar = document.getElementById('navBarMenu')\r\n            navbar && navbar.addEventListener('click', navBarMenuClicked)\r\n            console.log('start')\r\n            return () => {\r\n                navbar && navbar.removeEventListener('click', navBarMenuClicked)\r\n                console.log('closed')\r\n\r\n            }\r\n        }, [menuIsShow])\r\n\r\n        useEffect(() => {\r\n            if (authorizedStatus === 'fail') navigate('/')\r\n        }, [authorizedStatus])\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                <AppBar position=\"static\">\r\n                    <Toolbar>\r\n                        <div className={style.menuBlock}>\r\n                            <IconButton edge=\"start\"\r\n                                        className={classes.menuButton}\r\n                                        color=\"inherit\"\r\n                                        onClick={() => isShowNavBarMenu(!menuIsShow)}\r\n                            >\r\n                                <div>\r\n                                    {menuIsShow\r\n                                        ? <MenuOpen/>\r\n                                        : <MenuIcon/>\r\n                                    }\r\n                                </div>\r\n                            </IconButton>\r\n                            {menuIsShow &&\r\n                                <div id={'navBarMenu'} className={style.navBarMenu}>\r\n                                    <Paper ref={ref} className={style.navBar}>\r\n                                        <NavBar isShowNavBarMenu={isShowNavBarMenu}\r\n                                        />\r\n                                    </Paper>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                        <Typography className={classes.title}>\r\n                            <img style={{height: '20px'}} src={imgIcon} alt=\"\"/>\r\n                        </Typography>\r\n                        {authorizedStatus === 'successfully'\r\n                            ? <div>\r\n                                <IconButton color=\"inherit\"\r\n                                            aria-label=\"account of current user\"\r\n                                            aria-controls=\"menu-appbar\"\r\n                                            aria-haspopup=\"true\"\r\n                                            onClick={handleMenu}>\r\n                                    {userFoto && <Avatar alt=\"Cindy Baker\" src={userFoto}/>}\r\n                                </IconButton>\r\n                                <Menu className={style.menu}\r\n                                      id=\"menu-appbar\"\r\n                                      anchorEl={anchorEl}\r\n                                      anchorOrigin={{\r\n                                          vertical: 'bottom',\r\n                                          horizontal: 'left',\r\n                                      }}\r\n                                      keepMounted\r\n                                      transformOrigin={{\r\n                                          vertical: 'bottom',\r\n                                          horizontal: 'center',\r\n                                      }}\r\n                                      open={open}\r\n                                      onClose={handleClose}\r\n                                >\r\n                                    <NavLink to={'/Profile'}>\r\n                                        <MenuItem onClick={handleClose}>Мой рофиль</MenuItem>\r\n                                    </NavLink>\r\n                                    <NavLink to={'/Profile'}>\r\n                                        <MenuItem onClick={onclickLogoutHandler}>Выйти</MenuItem>\r\n                                    </NavLink>\r\n\r\n                                </Menu>\r\n                            </div>\r\n                            : <NavLink to={'/Login'}>\r\n                                <Button color=\"inherit\">Login</Button>\r\n                            </NavLink>\r\n                        }\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </div>\r\n\r\n        )\r\n\r\n    }\r\n;\r\n\r\n\r\n","C:\\program\\samurai-way-TS\\src\\components\\common\\Button\\Button.tsx",[],[],"C:\\program\\samurai-way-TS\\src\\components\\NavBar\\NavBar.tsx",[],[],"C:\\program\\samurai-way-TS\\src\\components\\Footer\\Footer.tsx",[],[],"C:\\program\\samurai-way-TS\\src\\components\\common\\Input\\Input.tsx",[],[],"C:\\program\\samurai-way-TS\\src\\components\\Profile\\UserInfo\\Avatar\\AvatarUser.tsx",[],[],"C:\\program\\samurai-way-TS\\src\\components\\Profile\\UserInfo\\FormContacts\\FormContacts.tsx",[],[],"C:\\program\\samurai-way-TS\\src\\components\\Profile\\MyPosts\\MyPost\\MyPost.tsx",[],[],{"ruleId":"520","severity":1,"message":"521","line":14,"column":8,"nodeType":"522","endLine":14,"endColumn":10,"suggestions":"523"},{"ruleId":"524","severity":1,"message":"525","line":2,"column":16,"nodeType":"526","messageId":"527","endLine":2,"endColumn":25},{"ruleId":"524","severity":1,"message":"528","line":2,"column":27,"nodeType":"526","messageId":"527","endLine":2,"endColumn":37},{"ruleId":"524","severity":1,"message":"529","line":2,"column":39,"nodeType":"526","messageId":"527","endLine":2,"endColumn":48},{"ruleId":"524","severity":1,"message":"530","line":12,"column":9,"nodeType":"526","messageId":"527","endLine":12,"endColumn":16},{"ruleId":"524","severity":1,"message":"531","line":13,"column":9,"nodeType":"526","messageId":"527","endLine":13,"endColumn":21},{"ruleId":"524","severity":1,"message":"532","line":20,"column":22,"nodeType":"526","messageId":"527","endLine":20,"endColumn":42},{"ruleId":"524","severity":1,"message":"533","line":25,"column":6,"nodeType":"526","messageId":"527","endLine":25,"endColumn":16},{"ruleId":"520","severity":1,"message":"534","line":56,"column":12,"nodeType":"522","endLine":56,"endColumn":30,"suggestions":"535"},{"ruleId":"520","severity":1,"message":"536","line":98,"column":12,"nodeType":"522","endLine":98,"endColumn":24,"suggestions":"537"},{"ruleId":"520","severity":1,"message":"534","line":19,"column":8,"nodeType":"522","endLine":19,"endColumn":26,"suggestions":"538"},{"ruleId":"524","severity":1,"message":"539","line":1,"column":16,"nodeType":"526","messageId":"527","endLine":1,"endColumn":29},{"ruleId":"524","severity":1,"message":"540","line":2,"column":18,"nodeType":"526","messageId":"527","endLine":2,"endColumn":20},{"ruleId":"520","severity":1,"message":"541","line":28,"column":48,"nodeType":"542","endLine":28,"endColumn":65},{"ruleId":"524","severity":1,"message":"543","line":1,"column":16,"nodeType":"526","messageId":"527","endLine":1,"endColumn":24},{"ruleId":"524","severity":1,"message":"544","line":3,"column":8,"nodeType":"526","messageId":"527","endLine":3,"endColumn":13},{"ruleId":"520","severity":1,"message":"521","line":35,"column":8,"nodeType":"522","endLine":35,"endColumn":21,"suggestions":"545"},{"ruleId":"524","severity":1,"message":"544","line":3,"column":8,"nodeType":"526","messageId":"527","endLine":3,"endColumn":13},{"ruleId":"524","severity":1,"message":"546","line":1,"column":40,"nodeType":"526","messageId":"527","endLine":1,"endColumn":54},{"ruleId":"524","severity":1,"message":"543","line":1,"column":16,"nodeType":"526","messageId":"527","endLine":1,"endColumn":24},{"ruleId":"520","severity":1,"message":"541","line":28,"column":48,"nodeType":"542","endLine":28,"endColumn":65},{"ruleId":"520","severity":1,"message":"521","line":23,"column":8,"nodeType":"522","endLine":23,"endColumn":21,"suggestions":"547"},{"ruleId":"520","severity":1,"message":"534","line":19,"column":8,"nodeType":"522","endLine":19,"endColumn":26,"suggestions":"548"},{"ruleId":"524","severity":1,"message":"540","line":2,"column":18,"nodeType":"526","messageId":"527","endLine":2,"endColumn":20},{"ruleId":"520","severity":1,"message":"536","line":86,"column":12,"nodeType":"522","endLine":86,"endColumn":24,"suggestions":"549"},{"ruleId":"520","severity":1,"message":"534","line":90,"column":12,"nodeType":"522","endLine":90,"endColumn":30,"suggestions":"550"},{"ruleId":"520","severity":1,"message":"521","line":16,"column":8,"nodeType":"522","endLine":16,"endColumn":10,"suggestions":"551"},{"ruleId":"520","severity":1,"message":"534","line":19,"column":8,"nodeType":"522","endLine":19,"endColumn":26,"suggestions":"552"},{"ruleId":"520","severity":1,"message":"536","line":86,"column":12,"nodeType":"522","endLine":86,"endColumn":24,"suggestions":"553"},{"ruleId":"520","severity":1,"message":"534","line":90,"column":12,"nodeType":"522","endLine":90,"endColumn":30,"suggestions":"554"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["555"],"@typescript-eslint/no-unused-vars","'LegacyRef' is defined but never used.","Identifier","unusedVar","'MouseEvent' is defined but never used.","'RefObject' is defined but never used.","'connect' is defined but never used.","'AppStoreType' is defined but never used.","'StatusAuthorizedType' is defined but never used.","'HeaderType' is defined but never used.","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["556"],"React Hook useEffect has a missing dependency: 'navBarMenuClicked'. Either include it or remove the dependency array.",["557"],["558"],"'AxiosResponse' is defined but never used.","'To' is defined but never used.","Assignments to the 'paramsURL' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","'useState' is defined but never used.","'axios' is defined but never used.",["559"],"'UpdateDateType' is defined but never used.",["560"],["561"],["562"],["563"],["564"],["565"],["566"],["567"],{"desc":"568","fix":"569"},{"desc":"570","fix":"571"},{"desc":"572","fix":"573"},{"desc":"570","fix":"574"},{"desc":"575","fix":"576"},{"desc":"575","fix":"577"},{"desc":"570","fix":"578"},{"desc":"572","fix":"579"},{"desc":"570","fix":"580"},{"desc":"568","fix":"581"},{"desc":"570","fix":"582"},{"desc":"572","fix":"583"},{"desc":"570","fix":"584"},"Update the dependencies array to be: [dispatch]",{"range":"585","text":"586"},"Update the dependencies array to be: [authorizedStatus, navigate]",{"range":"587","text":"588"},"Update the dependencies array to be: [menuIsShow, navBarMenuClicked]",{"range":"589","text":"590"},{"range":"591","text":"588"},"Update the dependencies array to be: [currentPage, dispatch]",{"range":"592","text":"593"},{"range":"594","text":"593"},{"range":"595","text":"588"},{"range":"596","text":"590"},{"range":"597","text":"588"},{"range":"598","text":"586"},{"range":"599","text":"588"},{"range":"600","text":"590"},{"range":"601","text":"588"},[445,447],"[dispatch]",[2066,2084],"[authorizedStatus, navigate]",[3406,3418],"[menuIsShow, navBarMenuClicked]",[744,762],[1145,1158],"[currentPage, dispatch]",[1087,1100],[744,762],[3066,3078],[3181,3199],[610,612],[744,762],[3066,3078],[3181,3199]]
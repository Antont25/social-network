{"ast":null,"code":"var _jsxFileName = \"G:\\\\program\\\\practica\\\\react-practica\\\\it-incubator\\\\samurai-way-TS\\\\src\\\\components\\\\users\\\\Users.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Pagination } from '../common/pagination/Pagination';\nimport { Loading } from '../common/loading/Loading';\nimport { fetchFollowUser, fetchUnFollowUser, fetchUserData, setCurrentPage, setPortionsNumber } from '../../redux/usersReducer';\nimport { User } from './User';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Users = props => {\n  _s();\n\n  useEffect(() => {\n    props.fetchUserData(props.currentPage);\n  }, [props.currentPage]);\n  const usersList = props.users.map(item => /*#__PURE__*/_jsxDEV(User, {\n    users: item,\n    fetchUnFollowUser: props.fetchUnFollowUser,\n    fetchFollowUser: props.fetchFollowUser,\n    authorizedStatus: props.authorizedStatus,\n    userSubscription: props.userSubscription\n  }, item.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 47\n  }, this));\n\n  if (props.isLoading) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [usersList, /*#__PURE__*/_jsxDEV(Pagination, {\n      currentPage: props.currentPage,\n      totalCount: props.totalCount,\n      pageSize: props.pageSize,\n      setCurrentPage: props.setCurrentPage,\n      setPortionsNumber: props.setPortionsNumber,\n      portionsNumber: props.portionsNumber\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Users, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Users;\n\nfunction mapStateToProps(state) {\n  return {\n    users: state.usersPage.items,\n    totalCount: state.usersPage.totalCount,\n    pageSize: state.usersPage.pageSize,\n    currentPage: state.usersPage.currentPage,\n    isLoading: state.authorized.isLoading,\n    portionsNumber: state.usersPage.portionsNumber,\n    authorizedStatus: state.authorized.authorizedStatus,\n    userSubscription: state.usersPage.userSubscription\n  };\n}\n\nexport default connect(mapStateToProps, {\n  fetchUnFollowUser,\n  fetchFollowUser,\n  setCurrentPage,\n  setPortionsNumber,\n  fetchUserData\n})(Users);\n\nvar _c;\n\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"names":["React","useEffect","connect","Pagination","Loading","fetchFollowUser","fetchUnFollowUser","fetchUserData","setCurrentPage","setPortionsNumber","User","Users","props","currentPage","usersList","users","map","item","authorizedStatus","userSubscription","id","isLoading","totalCount","pageSize","portionsNumber","mapStateToProps","state","usersPage","items","authorized"],"sources":["G:/program/practica/react-practica/it-incubator/samurai-way-TS/src/components/users/Users.tsx"],"sourcesContent":["import React, {useEffect} from 'react';\nimport {connect} from 'react-redux';\nimport {AppStoreType} from '../../redux/store';\nimport {Pagination} from '../common/pagination/Pagination';\nimport {Loading} from '../common/loading/Loading';\nimport {\n    fetchFollowUser,\n    fetchUnFollowUser,\n    fetchUserData,\n    setCurrentPage,\n    setPortionsNumber,\n} from '../../redux/usersReducer';\nimport {User} from './User';\nimport {StatusAuthorizedType} from '../../redux/appReducer';\nimport {UserType} from '../../api/api';\n\n\ntype MapStateToProps = {\n    users: Array<UserType>\n    totalCount: number\n    pageSize: number\n    currentPage: number\n    isLoading: boolean\n    authorizedStatus: StatusAuthorizedType\n    portionsNumber: number\n    userSubscription: Array<number>\n\n}\ntype UsersType = MapStateToProps & {\n    fetchUnFollowUser: (usersId: number) => void\n    fetchFollowUser: (usersId: number) => void\n    setCurrentPage: (payload: number) => void\n    fetchUserData: (currentPage: number) => void\n    setPortionsNumber: (payload: number) => void\n}\n\n\nconst Users = (props: UsersType) => {\n    useEffect(() => {\n        props.fetchUserData(props.currentPage)\n    }, [props.currentPage])\n\n    const usersList = props.users.map(item => <User key={item.id}\n                                                    users={item}\n                                                    fetchUnFollowUser={props.fetchUnFollowUser}\n                                                    fetchFollowUser={props.fetchFollowUser}\n                                                    authorizedStatus={props.authorizedStatus}\n                                                    userSubscription={props.userSubscription}\n    />)\n    if (props.isLoading) {\n        return <Loading/>\n    }\n\n    return (\n        <div>\n            {usersList}\n            <Pagination currentPage={props.currentPage}\n                        totalCount={props.totalCount}\n                        pageSize={props.pageSize}\n                        setCurrentPage={props.setCurrentPage}\n                        setPortionsNumber={props.setPortionsNumber}\n                        portionsNumber={props.portionsNumber}\n            />\n        </div>\n    );\n};\n\n\nfunction mapStateToProps(state: AppStoreType): MapStateToProps {\n    return {\n        users: state.usersPage.items,\n        totalCount: state.usersPage.totalCount,\n        pageSize: state.usersPage.pageSize,\n        currentPage: state.usersPage.currentPage,\n        isLoading: state.authorized.isLoading,\n        portionsNumber: state.usersPage.portionsNumber,\n        authorizedStatus: state.authorized.authorizedStatus,\n        userSubscription: state.usersPage.userSubscription,\n    }\n}\n\n\nexport default connect(mapStateToProps, {\n    fetchUnFollowUser,\n    fetchFollowUser,\n    setCurrentPage,\n    setPortionsNumber,\n    fetchUserData\n})(Users);"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,SAAQC,UAAR,QAAyB,iCAAzB;AACA,SAAQC,OAAR,QAAsB,2BAAtB;AACA,SACIC,eADJ,EAEIC,iBAFJ,EAGIC,aAHJ,EAIIC,cAJJ,EAKIC,iBALJ,QAMO,0BANP;AAOA,SAAQC,IAAR,QAAmB,QAAnB;;;AAyBA,MAAMC,KAAK,GAAIC,KAAD,IAAsB;EAAA;;EAChCX,SAAS,CAAC,MAAM;IACZW,KAAK,CAACL,aAAN,CAAoBK,KAAK,CAACC,WAA1B;EACH,CAFQ,EAEN,CAACD,KAAK,CAACC,WAAP,CAFM,CAAT;EAIA,MAAMC,SAAS,GAAGF,KAAK,CAACG,KAAN,CAAYC,GAAZ,CAAgBC,IAAI,iBAAI,QAAC,IAAD;IACM,KAAK,EAAEA,IADb;IAEM,iBAAiB,EAAEL,KAAK,CAACN,iBAF/B;IAGM,eAAe,EAAEM,KAAK,CAACP,eAH7B;IAIM,gBAAgB,EAAEO,KAAK,CAACM,gBAJ9B;IAKM,gBAAgB,EAAEN,KAAK,CAACO;EAL9B,GAAWF,IAAI,CAACG,EAAhB;IAAA;IAAA;IAAA;EAAA,QAAxB,CAAlB;;EAOA,IAAIR,KAAK,CAACS,SAAV,EAAqB;IACjB,oBAAO,QAAC,OAAD;MAAA;MAAA;MAAA;IAAA,QAAP;EACH;;EAED,oBACI;IAAA,WACKP,SADL,eAEI,QAAC,UAAD;MAAY,WAAW,EAAEF,KAAK,CAACC,WAA/B;MACY,UAAU,EAAED,KAAK,CAACU,UAD9B;MAEY,QAAQ,EAAEV,KAAK,CAACW,QAF5B;MAGY,cAAc,EAAEX,KAAK,CAACJ,cAHlC;MAIY,iBAAiB,EAAEI,KAAK,CAACH,iBAJrC;MAKY,cAAc,EAAEG,KAAK,CAACY;IALlC;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAYH,CA5BD;;GAAMb,K;;KAAAA,K;;AA+BN,SAASc,eAAT,CAAyBC,KAAzB,EAA+D;EAC3D,OAAO;IACHX,KAAK,EAAEW,KAAK,CAACC,SAAN,CAAgBC,KADpB;IAEHN,UAAU,EAAEI,KAAK,CAACC,SAAN,CAAgBL,UAFzB;IAGHC,QAAQ,EAAEG,KAAK,CAACC,SAAN,CAAgBJ,QAHvB;IAIHV,WAAW,EAAEa,KAAK,CAACC,SAAN,CAAgBd,WAJ1B;IAKHQ,SAAS,EAAEK,KAAK,CAACG,UAAN,CAAiBR,SALzB;IAMHG,cAAc,EAAEE,KAAK,CAACC,SAAN,CAAgBH,cAN7B;IAOHN,gBAAgB,EAAEQ,KAAK,CAACG,UAAN,CAAiBX,gBAPhC;IAQHC,gBAAgB,EAAEO,KAAK,CAACC,SAAN,CAAgBR;EAR/B,CAAP;AAUH;;AAGD,eAAejB,OAAO,CAACuB,eAAD,EAAkB;EACpCnB,iBADoC;EAEpCD,eAFoC;EAGpCG,cAHoC;EAIpCC,iBAJoC;EAKpCF;AALoC,CAAlB,CAAP,CAMZI,KANY,CAAf"},"metadata":{},"sourceType":"module"}
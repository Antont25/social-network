{"ast":null,"code":"var _jsxFileName = \"C:\\\\program\\\\samurai-way-TS\\\\src\\\\components\\\\users\\\\Status.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport style from './users.module.css';\nimport CreateIcon from '@material-ui/icons/Create';\nimport TextField from '@material-ui/core/TextField/TextField';\nimport { useAppSelector } from '../../utils/hooks/hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Status = props => {\n  _s();\n\n  debugger;\n  const status = useAppSelector(state => state.profilePage.userStatus);\n  const [valueStatus, setValueStatus] = useState(status);\n  const [editMode, setEditMode] = useState(false);\n\n  function onDoubleClickHandler() {\n    setEditMode(true);\n  }\n\n  function onBlurHandler() {\n    if (valueStatus !== props.valueStatus) {\n      valueStatus && props.callback(valueStatus);\n    }\n\n    setEditMode(false);\n  }\n\n  debugger;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.statusBloc,\n    children: [\"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441:\", props.isOwner ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CreateIcon, {\n        className: style.icon,\n        onClick: onDoubleClickHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this), editMode ? /*#__PURE__*/_jsxDEV(TextField, {\n        id: 'status',\n        label: \"status\",\n        multiline: true,\n        autoFocus: true,\n        maxRows: 4,\n        inputProps: {\n          maxLength: 100\n        },\n        value: valueStatus,\n        onBlur: onBlurHandler,\n        className: style.statusInput,\n        onChange: e => setValueStatus(e.currentTarget.value),\n        variant: \"filled\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 27\n      }, this) : /*#__PURE__*/_jsxDEV(SpanStatus, {\n        valueStatus: props.valueStatus,\n        className: style.textStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(SpanStatus, {\n      valueStatus: props.valueStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Status, \"wE+sOgZ/diZruaAGP4PJOI/3nlU=\", false, function () {\n  return [useAppSelector];\n});\n\n_c = Status;\n\nconst SpanStatus = props => {\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: props.className,\n    onDoubleClick: props.callback,\n    children: props.valueStatus || 'нету даных'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 12\n  }, this);\n};\n\n_c2 = SpanStatus;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Status\");\n$RefreshReg$(_c2, \"SpanStatus\");","map":{"version":3,"names":["React","useState","style","CreateIcon","TextField","useAppSelector","Status","props","status","state","profilePage","userStatus","valueStatus","setValueStatus","editMode","setEditMode","onDoubleClickHandler","onBlurHandler","callback","statusBloc","isOwner","icon","maxLength","statusInput","e","currentTarget","value","textStatus","SpanStatus","className"],"sources":["C:/program/samurai-way-TS/src/components/users/Status.tsx"],"sourcesContent":["import React, {FC, useState} from 'react';\nimport style from './users.module.css'\nimport CreateIcon from '@material-ui/icons/Create';\nimport TextField from '@material-ui/core/TextField/TextField';\nimport {useAppSelector} from '../../utils/hooks/hooks';\n\ntype StatusType = {\n    valueStatus: string | null\n    isOwner: boolean\n    callback: (value: string) => void\n}\n\nexport const Status: FC<StatusType> = (props) => {\n    debugger\n    const status = useAppSelector(state => state.profilePage.userStatus)\n    const [valueStatus, setValueStatus] = useState(status)\n    const [editMode, setEditMode] = useState(false)\n\n    function onDoubleClickHandler() {\n        setEditMode(true)\n    }\n\n    function onBlurHandler() {\n        if (valueStatus !== props.valueStatus) {\n            valueStatus && props.callback(valueStatus)\n        }\n        setEditMode(false)\n    }\n\n    debugger\n    return (\n        <div className={style.statusBloc}>\n            Статус:\n            {props.isOwner\n                ? <>\n                    <CreateIcon className={style.icon} onClick={onDoubleClickHandler}/>\n                    {editMode\n                        ? <TextField\n                            id={'status'}\n                            label=\"status\"\n                            multiline\n                            autoFocus={true}\n                            maxRows={4}\n                            inputProps={{maxLength: 100}}\n                            value={valueStatus}\n                            onBlur={onBlurHandler}\n                            className={style.statusInput}\n                            onChange={e => setValueStatus(e.currentTarget.value)}\n                            variant=\"filled\"/>\n\n                        : <SpanStatus valueStatus={props.valueStatus}\n                                      className={style.textStatus}/>\n                    }\n                </>\n                : <SpanStatus valueStatus={props.valueStatus}/>\n            }\n\n        </div>\n\n    );\n};\n\ntype SpanStatusType = {\n    valueStatus: string | null\n    className?: string\n    callback?: () => void\n}\nconst SpanStatus = (props: SpanStatusType) => {\n    return <span className={props.className}\n                 onDoubleClick={props.callback}>\n            {props.valueStatus || 'нету даных'}\n        </span>\n}\n\n\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAmBC,QAAnB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,SAAP,MAAsB,uCAAtB;AACA,SAAQC,cAAR,QAA6B,yBAA7B;;;AAQA,OAAO,MAAMC,MAAsB,GAAIC,KAAD,IAAW;EAAA;;EAC7C;EACA,MAAMC,MAAM,GAAGH,cAAc,CAACI,KAAK,IAAIA,KAAK,CAACC,WAAN,CAAkBC,UAA5B,CAA7B;EACA,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAACO,MAAD,CAA9C;EACA,MAAM,CAACM,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,KAAD,CAAxC;;EAEA,SAASe,oBAAT,GAAgC;IAC5BD,WAAW,CAAC,IAAD,CAAX;EACH;;EAED,SAASE,aAAT,GAAyB;IACrB,IAAIL,WAAW,KAAKL,KAAK,CAACK,WAA1B,EAAuC;MACnCA,WAAW,IAAIL,KAAK,CAACW,QAAN,CAAeN,WAAf,CAAf;IACH;;IACDG,WAAW,CAAC,KAAD,CAAX;EACH;;EAED;EACA,oBACI;IAAK,SAAS,EAAEb,KAAK,CAACiB,UAAtB;IAAA,oDAEKZ,KAAK,CAACa,OAAN,gBACK;MAAA,wBACE,QAAC,UAAD;QAAY,SAAS,EAAElB,KAAK,CAACmB,IAA7B;QAAmC,OAAO,EAAEL;MAA5C;QAAA;QAAA;QAAA;MAAA,QADF,EAEGF,QAAQ,gBACH,QAAC,SAAD;QACE,EAAE,EAAE,QADN;QAEE,KAAK,EAAC,QAFR;QAGE,SAAS,MAHX;QAIE,SAAS,EAAE,IAJb;QAKE,OAAO,EAAE,CALX;QAME,UAAU,EAAE;UAACQ,SAAS,EAAE;QAAZ,CANd;QAOE,KAAK,EAAEV,WAPT;QAQE,MAAM,EAAEK,aARV;QASE,SAAS,EAAEf,KAAK,CAACqB,WATnB;QAUE,QAAQ,EAAEC,CAAC,IAAIX,cAAc,CAACW,CAAC,CAACC,aAAF,CAAgBC,KAAjB,CAV/B;QAWE,OAAO,EAAC;MAXV;QAAA;QAAA;QAAA;MAAA,QADG,gBAcH,QAAC,UAAD;QAAY,WAAW,EAAEnB,KAAK,CAACK,WAA/B;QACY,SAAS,EAAEV,KAAK,CAACyB;MAD7B;QAAA;QAAA;QAAA;MAAA,QAhBR;IAAA,gBADL,gBAqBK,QAAC,UAAD;MAAY,WAAW,EAAEpB,KAAK,CAACK;IAA/B;MAAA;MAAA;MAAA;IAAA,QAvBV;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AA8BH,CAhDM;;GAAMN,M;UAEMD,c;;;KAFNC,M;;AAuDb,MAAMsB,UAAU,GAAIrB,KAAD,IAA2B;EAC1C,oBAAO;IAAM,SAAS,EAAEA,KAAK,CAACsB,SAAvB;IACM,aAAa,EAAEtB,KAAK,CAACW,QAD3B;IAAA,UAEEX,KAAK,CAACK,WAAN,IAAqB;EAFvB;IAAA;IAAA;IAAA;EAAA,QAAP;AAIH,CALD;;MAAMgB,U"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from\"C:/program/samurai-way-TS/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/program/samurai-way-TS/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _toConsumableArray from\"C:/program/samurai-way-TS/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _objectSpread from\"C:/program/samurai-way-TS/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{api}from'../api/api';import{setIsLoading}from'./appReducer';import{errorFromStatusCodeOrApplication}from'../utils/error-utils';var initialSateProfile={posts:[{id:1,massage:'Everything is great',likes:3},{id:2,massage:'Looking for my dream job',likes:4},{id:3,massage:'I develop my skills',likes:5},{id:4,massage:'Got a job of your dreams',likes:12}],userProfile:{},userStatus:null};export var profileReducer=function profileReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialSateProfile;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case'PROFILE/ADD_POST':var newPost={id:23,massage:action.payload,likes:0};return _objectSpread(_objectSpread({},state),{},{posts:[newPost].concat(_toConsumableArray(state.posts))});case'PROFILE/SET_USER_PROFILE':return _objectSpread(_objectSpread({},state),{},{userProfile:action.payload});case'PROFILE/SET_STATUS_UPDATES':return _objectSpread(_objectSpread({},state),{},{userStatus:action.payload});case'PROFILE/UPDATE_AVATAR_SUCCESS':return _objectSpread(_objectSpread({},state),{},{userProfile:_objectSpread(_objectSpread({},state.userProfile),{},{photos:action.payload})});default:return state;}};//action\nexport var addPost=function addPost(payload){return{type:'PROFILE/ADD_POST',payload:payload};};export var setUserProfile=function setUserProfile(payload){return{type:'PROFILE/SET_USER_PROFILE',payload:payload};};export var setStatusUpdates=function setStatusUpdates(payload){return{type:'PROFILE/SET_STATUS_UPDATES',payload:payload};};export var updateAvatarSuccess=function updateAvatarSuccess(payload){return{type:'PROFILE/UPDATE_AVATAR_SUCCESS',payload:payload};};//thunk\nexport var fetchUserProfileData=function fetchUserProfileData(paramsURL){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(dispatch){var res,responseStatus,error;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;dispatch(setIsLoading(true));if(!paramsURL){_context.next=11;break;}_context.next=5;return api.getUserProfile(paramsURL);case 5:res=_context.sent;dispatch(setUserProfile(res));_context.next=9;return api.getStatusUser(res.userId);case 9:responseStatus=_context.sent;dispatch(setStatusUpdates(responseStatus));case 11:_context.next=17;break;case 13:_context.prev=13;_context.t0=_context[\"catch\"](0);error=_context.t0;errorFromStatusCodeOrApplication(error,dispatch);case 17:_context.prev=17;dispatch(setIsLoading(false));return _context.finish(17);case 20:case\"end\":return _context.stop();}}},_callee,null,[[0,13,17,20]]);}));return function(_x){return _ref.apply(this,arguments);};}();};export var fetchStatusUpdates=function fetchStatusUpdates(newStatus,usersId){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(dispatch){var res,responseNewStatus,error;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;dispatch(setIsLoading(true));_context2.next=4;return api.statusUpdates(newStatus);case 4:res=_context2.sent;if(!(res.resultCode===0)){_context2.next=10;break;}_context2.next=8;return api.getStatusUser(usersId);case 8:responseNewStatus=_context2.sent;dispatch(setStatusUpdates(responseNewStatus));case 10:_context2.next=16;break;case 12:_context2.prev=12;_context2.t0=_context2[\"catch\"](0);error=_context2.t0;errorFromStatusCodeOrApplication(error,dispatch);case 16:_context2.prev=16;dispatch(setIsLoading(false));return _context2.finish(16);case 19:case\"end\":return _context2.stop();}}},_callee2,null,[[0,12,16,19]]);}));return function(_x2){return _ref2.apply(this,arguments);};}();};export var updateAvatar=function updateAvatar(image){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(dispatch,getState){var res,error;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;dispatch(setIsLoading(true));_context3.next=4;return api.savePhoto(image);case 4:res=_context3.sent;if(res.resultCode===0){dispatch(updateAvatarSuccess(res.data.photos));}_context3.next=12;break;case 8:_context3.prev=8;_context3.t0=_context3[\"catch\"](0);error=_context3.t0;errorFromStatusCodeOrApplication(error,dispatch);case 12:_context3.prev=12;dispatch(setIsLoading(false));return _context3.finish(12);case 15:case\"end\":return _context3.stop();}}},_callee3,null,[[0,8,12,15]]);}));return function(_x3,_x4){return _ref3.apply(this,arguments);};}();};export var updateContacts=function updateContacts(contacts,fullName){return/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(dispatch,getState){var data,res,paramsURL,error;return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:data={aboutMe:getState().profilePage.userProfile.aboutMe,lookingForAJobDescription:getState().profilePage.userProfile.lookingForAJobDescription,fullName:fullName||getState().profilePage.userProfile.fullName,contacts:contacts||getState().profilePage.userProfile.contacts};_context4.prev=1;dispatch(setIsLoading(true));_context4.next=5;return api.updateContacts(data);case 5:res=_context4.sent;if(res.resultCode===0){paramsURL=getState().app.authorizedProfileUser.userId;dispatch(fetchUserProfileData(paramsURL));}_context4.next=13;break;case 9:_context4.prev=9;_context4.t0=_context4[\"catch\"](1);error=_context4.t0;errorFromStatusCodeOrApplication(error,dispatch);case 13:_context4.prev=13;dispatch(setIsLoading(false));return _context4.finish(13);case 16:case\"end\":return _context4.stop();}}},_callee4,null,[[1,9,13,16]]);}));return function(_x5,_x6){return _ref4.apply(this,arguments);};}();};// export const updateName = (fullName: string): AppThunk => async (dispatch, getState) => {\n//\n//\n//     const data = {\n//         aboutMe: getState().profilePage.userProfile.aboutMe,\n//         lookingForAJobDescription: getState().profilePage.userProfile.lookingForAJobDescription,\n//         fullName,\n//         contacts:getState().profilePage.userProfile.contacts\n//     }\n//\n//     try {\n//         dispatch(setIsLoading(true))\n//         const res = await api.updateContacts(data)\n//         if (res.resultCode === 0) {\n//             const paramsURL = getState().app.authorizedProfileUser.userId\n//             dispatch(fetchUserProfileData(paramsURL))\n//         }\n//     } catch (e) {\n//         const error = e as Error | AxiosError\n//         errorFromStatusCodeOrApplication(error, dispatch)\n//     } finally {\n//         dispatch(setIsLoading(false))\n//     }\n// }\n//type","map":{"version":3,"names":["api","setIsLoading","errorFromStatusCodeOrApplication","initialSateProfile","posts","id","massage","likes","userProfile","userStatus","profileReducer","state","action","type","newPost","payload","photos","addPost","setUserProfile","setStatusUpdates","updateAvatarSuccess","fetchUserProfileData","paramsURL","dispatch","getUserProfile","res","getStatusUser","userId","responseStatus","error","fetchStatusUpdates","newStatus","usersId","statusUpdates","resultCode","responseNewStatus","updateAvatar","image","getState","savePhoto","data","updateContacts","contacts","fullName","aboutMe","profilePage","lookingForAJobDescription","app","authorizedProfileUser"],"sources":["C:/program/samurai-way-TS/src/redux/profileReducer.ts"],"sourcesContent":["import {api, ContactsType, PhotosType, UpdateDateType, UserProfileType} from '../api/api';\r\nimport {setIsLoading} from './appReducer';\r\nimport {AppThunk} from './store';\r\nimport {AxiosError} from 'axios';\r\nimport {errorFromStatusCodeOrApplication} from '../utils/error-utils';\r\n\r\nconst initialSateProfile = {\r\n    posts: [\r\n        {id: 1, massage: 'Everything is great', likes: 3},\r\n        {id: 2, massage: 'Looking for my dream job', likes: 4},\r\n        {id: 3, massage: 'I develop my skills', likes: 5},\r\n        {id: 4, massage: 'Got a job of your dreams', likes: 12},\r\n    ] as Array<PostsType>,\r\n    userProfile: {} as UserProfileType,\r\n    userStatus: null as null | string\r\n}\r\n\r\nexport const profileReducer = (state = initialSateProfile, action: ActionProfileReducerType): InitialSateProfileType => {\r\n    switch (action.type) {\r\n        case 'PROFILE/ADD_POST' :\r\n            let newPost: PostsType = {\r\n                id: 23,\r\n                massage: action.payload,\r\n                likes: 0\r\n            }\r\n            return {\r\n                ...state,\r\n                posts: [newPost, ...state.posts],\r\n            }\r\n        case 'PROFILE/SET_USER_PROFILE':\r\n            return {\r\n                ...state,\r\n                userProfile: action.payload\r\n            }\r\n        case 'PROFILE/SET_STATUS_UPDATES':\r\n            return {\r\n                ...state,\r\n                userStatus: action.payload\r\n            }\r\n        case 'PROFILE/UPDATE_AVATAR_SUCCESS':\r\n            return {\r\n                ...state,\r\n                userProfile: {...state.userProfile, photos: action.payload}\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\n//action\r\nexport const addPost = (payload: string) =>\r\n    ({type: 'PROFILE/ADD_POST', payload} as const)\r\nexport const setUserProfile = (payload: UserProfileType) =>\r\n    ({type: 'PROFILE/SET_USER_PROFILE', payload} as const)\r\nexport const setStatusUpdates = (payload: string | null) =>\r\n    ({type: 'PROFILE/SET_STATUS_UPDATES', payload} as const)\r\nexport const updateAvatarSuccess = (payload: PhotosType) =>\r\n    ({type: 'PROFILE/UPDATE_AVATAR_SUCCESS', payload} as const)\r\n\r\n//thunk\r\nexport const fetchUserProfileData = (paramsURL: number): AppThunk => async dispatch => {\r\n    try {\r\n        dispatch(setIsLoading(true))\r\n        if (paramsURL) {\r\n            const res = await api.getUserProfile(paramsURL)\r\n            dispatch(setUserProfile(res))\r\n            const responseStatus = await api.getStatusUser(res.userId)\r\n            dispatch(setStatusUpdates(responseStatus))\r\n        }\r\n    } catch (e) {\r\n        const error = e as Error | AxiosError\r\n        errorFromStatusCodeOrApplication(error, dispatch)\r\n    } finally {\r\n        dispatch(setIsLoading(false))\r\n    }\r\n}\r\nexport const fetchStatusUpdates = (newStatus: string, usersId: number): AppThunk => async dispatch => {\r\n    try {\r\n        dispatch(setIsLoading(true))\r\n        const res = await api.statusUpdates(newStatus)\r\n        if (res.resultCode === 0) {\r\n            const responseNewStatus = await api.getStatusUser(usersId)\r\n            dispatch(setStatusUpdates(responseNewStatus))\r\n        }\r\n    } catch (e) {\r\n        const error = e as Error | AxiosError\r\n        errorFromStatusCodeOrApplication(error, dispatch)\r\n    } finally {\r\n        dispatch(setIsLoading(false))\r\n    }\r\n}\r\nexport const updateAvatar = (image: any): AppThunk => async (dispatch, getState) => {\r\n    try {\r\n        dispatch(setIsLoading(true))\r\n        const res = await api.savePhoto(image)\r\n        if (res.resultCode === 0) {\r\n            dispatch(updateAvatarSuccess(res.data.photos))\r\n        }\r\n    } catch (e) {\r\n        const error = e as Error | AxiosError\r\n        errorFromStatusCodeOrApplication(error, dispatch)\r\n    } finally {\r\n        dispatch(setIsLoading(false))\r\n    }\r\n}\r\nexport const updateContacts = (contacts?: ContactsType, fullName?: string): AppThunk => async (dispatch, getState) => {\r\n\r\n\r\n    const data = {\r\n        aboutMe: getState().profilePage.userProfile.aboutMe,\r\n        lookingForAJobDescription: getState().profilePage.userProfile.lookingForAJobDescription,\r\n        fullName: fullName || getState().profilePage.userProfile.fullName,\r\n        contacts: contacts || getState().profilePage.userProfile.contacts\r\n    }\r\n\r\n    try {\r\n        dispatch(setIsLoading(true))\r\n        const res = await api.updateContacts(data)\r\n        if (res.resultCode === 0) {\r\n            const paramsURL = getState().app.authorizedProfileUser.userId\r\n            dispatch(fetchUserProfileData(paramsURL))\r\n        }\r\n    } catch (e) {\r\n        const error = e as Error | AxiosError\r\n        errorFromStatusCodeOrApplication(error, dispatch)\r\n    } finally {\r\n        dispatch(setIsLoading(false))\r\n    }\r\n}\r\n// export const updateName = (fullName: string): AppThunk => async (dispatch, getState) => {\r\n//\r\n//\r\n//     const data = {\r\n//         aboutMe: getState().profilePage.userProfile.aboutMe,\r\n//         lookingForAJobDescription: getState().profilePage.userProfile.lookingForAJobDescription,\r\n//         fullName,\r\n//         contacts:getState().profilePage.userProfile.contacts\r\n//     }\r\n//\r\n//     try {\r\n//         dispatch(setIsLoading(true))\r\n//         const res = await api.updateContacts(data)\r\n//         if (res.resultCode === 0) {\r\n//             const paramsURL = getState().app.authorizedProfileUser.userId\r\n//             dispatch(fetchUserProfileData(paramsURL))\r\n//         }\r\n//     } catch (e) {\r\n//         const error = e as Error | AxiosError\r\n//         errorFromStatusCodeOrApplication(error, dispatch)\r\n//     } finally {\r\n//         dispatch(setIsLoading(false))\r\n//     }\r\n// }\r\n\r\n//type\r\nexport type InitialSateProfileType = typeof initialSateProfile\r\nexport type PostsType = {\r\n    id: number\r\n    massage: string\r\n    likes: number\r\n}\r\nexport type ActionProfileReducerType =\r\n    ReturnType<typeof addPost>\r\n    | ReturnType<typeof setUserProfile>\r\n    | ReturnType<typeof setStatusUpdates>\r\n    | ReturnType<typeof updateAvatarSuccess>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
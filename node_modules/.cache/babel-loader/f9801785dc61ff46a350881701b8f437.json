{"ast":null,"code":"var _jsxFileName = \"G:\\\\program\\\\practica\\\\react-practica\\\\it-incubator\\\\samurai-way-TS\\\\src\\\\pages\\\\Profile.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { MyPosts } from \"../components/profile/myPosts/MyPosts\";\nimport { connect } from \"react-redux\";\nimport UserInfo from \"../components/profile/userInfo/UserInfo\";\nimport { Loading } from \"../components/common/loading/Loading\";\nimport { useParams } from \"react-router\";\nimport { useNavigate } from \"react-router-dom\";\nimport { addPost, fetchStatusUpdates, fetchUserProfileData } from \"../redux/profileReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Profile = props => {\n  _s();\n\n  let params = useParams();\n  let paramsURL = Number(params['*']);\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (props.authorizedCode === 0 && !params['*']) {\n      if (props.authorizedUser.id) paramsURL = props.authorizedUser.id;\n    }\n\n    if (props.authorizedCode === 0 || paramsURL) {\n      props.fetchUserProfileData(paramsURL);\n    } else if (props.authorizedCode === 1) {\n      navigate('/login');\n    }\n  }, [props.authorizedCode, paramsURL]);\n\n  if (Object.keys(props.userProfile).length === 0) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(UserInfo, {\n      userProfile: props.userProfile,\n      authorizedUserId: props.authorizedUser.id,\n      fetchStatusUpdates: props.fetchStatusUpdates,\n      userStatus: props.userStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MyPosts, {\n      photoUser: props.userProfile.photos.small,\n      posts: props.posts,\n      addPost: props.addPost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Profile, \"lU33SavkE7XtWIajmVWG36Y08Yw=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = Profile;\n\nconst mapStateToProps = state => {\n  return {\n    posts: state.profilePage.posts,\n    newPostText: state.profilePage.newPostText,\n    userProfile: state.profilePage.userProfile,\n    authorizedCode: state.authorized.authorizedCode,\n    authorizedUser: state.authorized.authorizedUser,\n    isLoading: state.authorized.isLoading,\n    userStatus: state.profilePage.userStatus\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addPost,\n  fetchUserProfileData,\n  fetchStatusUpdates\n})(Profile);\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useEffect","MyPosts","connect","UserInfo","Loading","useParams","useNavigate","addPost","fetchStatusUpdates","fetchUserProfileData","Profile","props","params","paramsURL","Number","navigate","authorizedCode","authorizedUser","id","Object","keys","userProfile","length","userStatus","photos","small","posts","mapStateToProps","state","profilePage","newPostText","authorized","isLoading"],"sources":["G:/program/practica/react-practica/it-incubator/samurai-way-TS/src/pages/Profile.tsx"],"sourcesContent":["import React, {useEffect} from 'react';\r\nimport {MyPosts} from \"../components/profile/myPosts/MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStoreType,} from \"../redux/store\";\r\nimport UserInfo from \"../components/profile/userInfo/UserInfo\";\r\nimport {Loading} from \"../components/common/loading/Loading\";\r\nimport {useParams} from \"react-router\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {\r\n    addPost,\r\n    fetchStatusUpdates,\r\n    fetchUserProfileData,\r\n    newTextPost,\r\n    PostsType,\r\n    UserProfileType\r\n} from \"../redux/profileReducer\";\r\nimport {AuthorizedUserType} from \"../redux/authorizedReducer\";\r\n\r\ntype MapStateToPropsType = {\r\n    posts: Array<PostsType>\r\n    newPostText: string\r\n    userProfile: UserProfileType\r\n    authorizedCode: null | number\r\n    authorizedUser: AuthorizedUserType\r\n    isLoading: boolean\r\n    userStatus: null | string\r\n}\r\ntype MapDispatchToPropsType = {\r\n    addPost: (value: string) => void\r\n    newTextPost: (newText: string) => void\r\n    fetchUserProfileData: (paramsURL: number) => void\r\n    fetchStatusUpdates: (newStatus: string, userId: number) => void\r\n}\r\n\r\ntype ProfileType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\nconst Profile = (props: ProfileType) => {\r\n\r\n    let params = useParams<'*'>()\r\n    let paramsURL = Number(params['*'])\r\n    const navigate = useNavigate()\r\n    useEffect(() => {\r\n        if (props.authorizedCode === 0 && !params['*']) {\r\n            if (props.authorizedUser.id) paramsURL = props.authorizedUser.id\r\n        }\r\n        if (props.authorizedCode === 0 || paramsURL) {\r\n            props.fetchUserProfileData(paramsURL)\r\n        } else if (props.authorizedCode === 1) {\r\n            navigate('/login')\r\n        }\r\n\r\n    }, [props.authorizedCode, paramsURL])\r\n\r\n    if (Object.keys(props.userProfile).length === 0) {\r\n        return <Loading/>\r\n    }\r\n    return (\r\n        <>\r\n            <UserInfo userProfile={props.userProfile}\r\n                      authorizedUserId={props.authorizedUser.id}\r\n                      fetchStatusUpdates={props.fetchStatusUpdates}\r\n                      userStatus={props.userStatus}/>\r\n            <MyPosts photoUser={props.userProfile.photos.small}\r\n                     posts={props.posts}\r\n                     addPost={props.addPost}\r\n            />\r\n        </>);\r\n};\r\n\r\nconst mapStateToProps = (state: AppStoreType): MapStateToPropsType => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText,\r\n        userProfile: state.profilePage.userProfile,\r\n        authorizedCode: state.authorized.authorizedCode,\r\n        authorizedUser: state.authorized.authorizedUser,\r\n        isLoading: state.authorized.isLoading,\r\n        userStatus: state.profilePage.userStatus,\r\n    }\r\n}\r\n\r\n\r\nexport default connect<MapStateToPropsType, MapDispatchToPropsType, {}, AppStoreType>(mapStateToProps, {\r\n    addPost,\r\n    fetchUserProfileData,\r\n    fetchStatusUpdates\r\n})(Profile);"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,uCAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,OAAOC,QAAP,MAAqB,yCAArB;AACA,SAAQC,OAAR,QAAsB,sCAAtB;AACA,SAAQC,SAAR,QAAwB,cAAxB;AACA,SAAQC,WAAR,QAA0B,kBAA1B;AACA,SACIC,OADJ,EAEIC,kBAFJ,EAGIC,oBAHJ,QAOO,yBAPP;;;;AA4BA,MAAMC,OAAO,GAAIC,KAAD,IAAwB;EAAA;;EAEpC,IAAIC,MAAM,GAAGP,SAAS,EAAtB;EACA,IAAIQ,SAAS,GAAGC,MAAM,CAACF,MAAM,CAAC,GAAD,CAAP,CAAtB;EACA,MAAMG,QAAQ,GAAGT,WAAW,EAA5B;EACAN,SAAS,CAAC,MAAM;IACZ,IAAIW,KAAK,CAACK,cAAN,KAAyB,CAAzB,IAA8B,CAACJ,MAAM,CAAC,GAAD,CAAzC,EAAgD;MAC5C,IAAID,KAAK,CAACM,cAAN,CAAqBC,EAAzB,EAA6BL,SAAS,GAAGF,KAAK,CAACM,cAAN,CAAqBC,EAAjC;IAChC;;IACD,IAAIP,KAAK,CAACK,cAAN,KAAyB,CAAzB,IAA8BH,SAAlC,EAA6C;MACzCF,KAAK,CAACF,oBAAN,CAA2BI,SAA3B;IACH,CAFD,MAEO,IAAIF,KAAK,CAACK,cAAN,KAAyB,CAA7B,EAAgC;MACnCD,QAAQ,CAAC,QAAD,CAAR;IACH;EAEJ,CAVQ,EAUN,CAACJ,KAAK,CAACK,cAAP,EAAuBH,SAAvB,CAVM,CAAT;;EAYA,IAAIM,MAAM,CAACC,IAAP,CAAYT,KAAK,CAACU,WAAlB,EAA+BC,MAA/B,KAA0C,CAA9C,EAAiD;IAC7C,oBAAO,QAAC,OAAD;MAAA;MAAA;MAAA;IAAA,QAAP;EACH;;EACD,oBACI;IAAA,wBACI,QAAC,QAAD;MAAU,WAAW,EAAEX,KAAK,CAACU,WAA7B;MACU,gBAAgB,EAAEV,KAAK,CAACM,cAAN,CAAqBC,EADjD;MAEU,kBAAkB,EAAEP,KAAK,CAACH,kBAFpC;MAGU,UAAU,EAAEG,KAAK,CAACY;IAH5B;MAAA;MAAA;MAAA;IAAA,QADJ,eAKI,QAAC,OAAD;MAAS,SAAS,EAAEZ,KAAK,CAACU,WAAN,CAAkBG,MAAlB,CAAyBC,KAA7C;MACS,KAAK,EAAEd,KAAK,CAACe,KADtB;MAES,OAAO,EAAEf,KAAK,CAACJ;IAFxB;MAAA;MAAA;MAAA;IAAA,QALJ;EAAA,gBADJ;AAWH,CA/BD;;GAAMG,O;UAEWL,S,EAEIC,W;;;KAJfI,O;;AAiCN,MAAMiB,eAAe,GAAIC,KAAD,IAA8C;EAClE,OAAO;IACHF,KAAK,EAAEE,KAAK,CAACC,WAAN,CAAkBH,KADtB;IAEHI,WAAW,EAAEF,KAAK,CAACC,WAAN,CAAkBC,WAF5B;IAGHT,WAAW,EAAEO,KAAK,CAACC,WAAN,CAAkBR,WAH5B;IAIHL,cAAc,EAAEY,KAAK,CAACG,UAAN,CAAiBf,cAJ9B;IAKHC,cAAc,EAAEW,KAAK,CAACG,UAAN,CAAiBd,cAL9B;IAMHe,SAAS,EAAEJ,KAAK,CAACG,UAAN,CAAiBC,SANzB;IAOHT,UAAU,EAAEK,KAAK,CAACC,WAAN,CAAkBN;EAP3B,CAAP;AASH,CAVD;;AAaA,eAAerB,OAAO,CAAgEyB,eAAhE,EAAiF;EACnGpB,OADmG;EAEnGE,oBAFmG;EAGnGD;AAHmG,CAAjF,CAAP,CAIZE,OAJY,CAAf"},"metadata":{},"sourceType":"module"}
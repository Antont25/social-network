{"ast":null,"code":"import { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { profileReducer } from \"./profileReducer\";\nimport { headerReducer } from \"./headerReducer\";\nimport { authorizedReducer } from \"./authorizedReducer\";\nimport { dialogsReducer } from \"./dialogsReducer\";\nimport { usersReducer } from \"./usersReducer\";\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nlet rootReducer = combineReducers({\n  profilePage: profileReducer,\n  dialogsPage: dialogsReducer,\n  usersPage: usersReducer,\n  headerPage: headerReducer,\n  authorized: authorizedReducer\n});\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));","map":{"version":3,"names":["applyMiddleware","combineReducers","compose","createStore","thunk","profileReducer","headerReducer","authorizedReducer","dialogsReducer","usersReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","rootReducer","profilePage","dialogsPage","usersPage","headerPage","authorized","store"],"sources":["G:/program/practica/react-practica/it-incubator/samurai-way-TS/src/redux/store.ts"],"sourcesContent":["import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport thunk, {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {ActionProfileReducerType, profileReducer} from \"./profileReducer\";\r\nimport {ActionHeaderReducerType, headerReducer} from \"./headerReducer\";\r\nimport {ActionAuthorizedReducerType, authorizedReducer} from \"./authorizedReducer\";\r\nimport {ActionDialogsReducerType, dialogsReducer} from \"./dialogsReducer\";\r\nimport {ActionUserReducerType, usersReducer} from \"./usersReducer\";\r\n\r\n\r\nconst composeEnhancers = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n\r\nlet rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    headerPage: headerReducer,\r\n    authorized: authorizedReducer,\r\n});\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))\r\n\r\nexport type ActionType =\r\n    ActionProfileReducerType\r\n    | ActionHeaderReducerType\r\n    | ActionAuthorizedReducerType\r\n    | ActionDialogsReducerType\r\n    | ActionUserReducerType\r\n\r\n\r\nexport type AppStoreType = ReturnType<typeof rootReducer>\r\n\r\nexport type AppDispatch = ThunkDispatch<AppStoreType, unknown, ActionType>\r\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, AppStoreType, unknown, ActionType>\r\n"],"mappings":"AAAA,SAAQA,eAAR,EAAyBC,eAAzB,EAA0CC,OAA1C,EAAmDC,WAAnD,QAAqE,OAArE;AACA,OAAOC,KAAP,MAAgD,aAAhD;AACA,SAAkCC,cAAlC,QAAuD,kBAAvD;AACA,SAAiCC,aAAjC,QAAqD,iBAArD;AACA,SAAqCC,iBAArC,QAA6D,qBAA7D;AACA,SAAkCC,cAAlC,QAAuD,kBAAvD;AACA,SAA+BC,YAA/B,QAAkD,gBAAlD;AAGA,MAAMC,gBAAgB,GAAIC,MAAD,CAAgBC,oCAAhB,IAAwDV,OAAjF;AAGA,IAAIW,WAAW,GAAGZ,eAAe,CAAC;EAC9Ba,WAAW,EAAET,cADiB;EAE9BU,WAAW,EAAEP,cAFiB;EAG9BQ,SAAS,EAAEP,YAHmB;EAI9BQ,UAAU,EAAEX,aAJkB;EAK9BY,UAAU,EAAEX;AALkB,CAAD,CAAjC;AAOA,OAAO,MAAMY,KAAK,GAAGhB,WAAW,CAACU,WAAD,EAAcH,gBAAgB,CAACV,eAAe,CAACI,KAAD,CAAhB,CAA9B,CAAzB"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"G:\\\\program\\\\practica\\\\react-practica\\\\it-incubator\\\\samurai-way-TS\\\\src\\\\components\\\\textarea\\\\Textarea.tsx\";\nimport React from 'react';\nimport SuperButton from \"../SuperButton/SuperButton\";\nimport style from './textarea.module.css';\nimport TextField from '@material-ui/core/TextField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Textarea = props => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      label: \"\\u043D\\u043E\\u0432\\u044B\\u0439 \\u043F\\u043E\\u0441\\u0442\",\n      placeholder: \"\\u043D\\u043E\\u0432\\u044B\\u0439 \\u043F\\u043E\\u0441\\u0442\",\n      multiline: true,\n      variant: \"outlined\",\n      value: props.text,\n      className: style.textareaBloc,\n      onChange: e => props.onChangeHandler(e.currentTarget.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SuperButton, {\n      onClick: props.add,\n      children: \"ADD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_c = Textarea;\n\nvar _c;\n\n$RefreshReg$(_c, \"Textarea\");","map":{"version":3,"names":["React","SuperButton","style","TextField","Textarea","props","text","textareaBloc","e","onChangeHandler","currentTarget","value","add"],"sources":["G:/program/practica/react-practica/it-incubator/samurai-way-TS/src/components/textarea/Textarea.tsx"],"sourcesContent":["import React, {useState} from 'react';\r\nimport SuperButton from \"../SuperButton/SuperButton\";\r\nimport style from './textarea.module.css'\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\ntype TextareaPropsType = {\r\n    text: string\r\n    onChangeHandler: (newtext: string) => void\r\n    add: () => void\r\n}\r\n\r\nexport const Textarea: React.FC<TextareaPropsType> = (props) => {\r\n    return (\r\n        < >\r\n\r\n            <TextField\r\n                label=\"новый пост\"\r\n                placeholder=\"новый пост\"\r\n                multiline\r\n                variant=\"outlined\"\r\n                value={props.text}\r\n                className={style.textareaBloc}\r\n                onChange={(e) => props.onChangeHandler(e.currentTarget.value)}\r\n            />\r\n            <SuperButton onClick={props.add}>\r\n                ADD\r\n            </SuperButton>\r\n        </ >\r\n    );\r\n};\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAA8B,OAA9B;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;;;AASA,OAAO,MAAMC,QAAqC,GAAIC,KAAD,IAAW;EAC5D,oBACI;IAAA,wBAEI,QAAC,SAAD;MACI,KAAK,EAAC,yDADV;MAEI,WAAW,EAAC,yDAFhB;MAGI,SAAS,MAHb;MAII,OAAO,EAAC,UAJZ;MAKI,KAAK,EAAEA,KAAK,CAACC,IALjB;MAMI,SAAS,EAAEJ,KAAK,CAACK,YANrB;MAOI,QAAQ,EAAGC,CAAD,IAAOH,KAAK,CAACI,eAAN,CAAsBD,CAAC,CAACE,aAAF,CAAgBC,KAAtC;IAPrB;MAAA;MAAA;MAAA;IAAA,QAFJ,eAWI,QAAC,WAAD;MAAa,OAAO,EAAEN,KAAK,CAACO,GAA5B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAXJ;EAAA,gBADJ;AAiBH,CAlBM;KAAMR,Q"},"metadata":{},"sourceType":"module"}
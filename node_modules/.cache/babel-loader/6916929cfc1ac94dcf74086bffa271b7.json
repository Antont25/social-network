{"ast":null,"code":"import { api } from '../api/api';\nimport { setIsLoading } from './appReducer';\nimport { errorFromStatusCodeOrApplication } from '../utils/error-utils';\nconst initialSateProfile = {\n  posts: [{\n    id: 1,\n    massage: 'Everything is great',\n    likes: 3\n  }, {\n    id: 2,\n    massage: 'Looking for my dream job',\n    likes: 4\n  }, {\n    id: 3,\n    massage: 'I develop my skills',\n    likes: 5\n  }, {\n    id: 4,\n    massage: 'Got a job of your dreams',\n    likes: 12\n  }],\n  userProfile: {},\n  userStatus: null\n};\nexport const profileReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialSateProfile;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'PROFILE/ADD_POST':\n      let newPost = {\n        id: 23,\n        massage: action.payload,\n        likes: 0\n      };\n      return { ...state,\n        posts: [newPost, ...state.posts]\n      };\n\n    case 'PROFILE/SET_USER_PROFILE':\n      return { ...state,\n        userProfile: action.payload\n      };\n\n    case 'PROFILE/SET_STATUS_UPDATES':\n      return { ...state,\n        userStatus: action.payload\n      };\n\n    default:\n      return state;\n  }\n}; //action\n\nexport const addPost = payload => ({\n  type: 'PROFILE/ADD_POST',\n  payload\n});\nexport const setUserProfile = payload => ({\n  type: 'PROFILE/SET_USER_PROFILE',\n  payload\n});\nexport const setStatusUpdates = payload => ({\n  type: 'PROFILE/SET_STATUS_UPDATES',\n  payload\n}); //thunk\n\nexport const fetchUserProfileData = paramsURL => async dispatch => {\n  try {\n    debugger;\n    dispatch(setIsLoading(true));\n\n    if (paramsURL) {\n      debugger;\n      let response = await api.getUserProfile(paramsURL);\n      dispatch(setUserProfile(response));\n      let responseStatus = await api.getStatusUser(response.userId);\n      dispatch(setStatusUpdates(responseStatus));\n    }\n  } catch (e) {\n    const error = e;\n    errorFromStatusCodeOrApplication(error, dispatch);\n  } finally {\n    dispatch(setIsLoading(false));\n  }\n};\nexport const fetchStatusUpdates = (newStatus, usersId) => async dispatch => {\n  try {\n    dispatch(setIsLoading(true));\n    let response = await api.statusUpdates(newStatus);\n\n    if (response.resultCode === 0) {\n      let responseNewStatus = await api.getStatusUser(usersId);\n      dispatch(setStatusUpdates(responseNewStatus));\n    }\n  } catch (e) {\n    const error = e;\n    errorFromStatusCodeOrApplication(error, dispatch);\n  } finally {\n    dispatch(setIsLoading(false));\n  }\n}; //type","map":{"version":3,"names":["api","setIsLoading","errorFromStatusCodeOrApplication","initialSateProfile","posts","id","massage","likes","userProfile","userStatus","profileReducer","state","action","type","newPost","payload","addPost","setUserProfile","setStatusUpdates","fetchUserProfileData","paramsURL","dispatch","response","getUserProfile","responseStatus","getStatusUser","userId","e","error","fetchStatusUpdates","newStatus","usersId","statusUpdates","resultCode","responseNewStatus"],"sources":["G:/program/practica/react-practica/it-incubator/samurai-way-TS/src/redux/profileReducer.ts"],"sourcesContent":["import {api, UserProfileType} from '../api/api';\r\nimport {setIsLoading} from './appReducer';\r\nimport {AppThunk} from './store';\r\nimport {AxiosError} from 'axios';\r\nimport {errorFromStatusCodeOrApplication} from '../utils/error-utils';\r\n\r\nconst initialSateProfile = {\r\n    posts: [\r\n        {id: 1, massage: 'Everything is great', likes: 3},\r\n        {id: 2, massage: 'Looking for my dream job', likes: 4},\r\n        {id: 3, massage: 'I develop my skills', likes: 5},\r\n        {id: 4, massage: 'Got a job of your dreams', likes: 12},\r\n    ] as Array<PostsType>,\r\n    userProfile: {} as UserProfileType,\r\n    userStatus: null as null | string\r\n}\r\n\r\nexport const profileReducer = (state = initialSateProfile, action: ActionProfileReducerType): InitialSateProfileType => {\r\n    switch (action.type) {\r\n        case 'PROFILE/ADD_POST' :\r\n            let newPost: PostsType = {\r\n                id: 23,\r\n                massage: action.payload,\r\n                likes: 0\r\n            }\r\n            return {\r\n                ...state,\r\n                posts: [newPost, ...state.posts],\r\n            }\r\n        case 'PROFILE/SET_USER_PROFILE':\r\n            return {\r\n                ...state,\r\n                userProfile: action.payload\r\n            }\r\n        case 'PROFILE/SET_STATUS_UPDATES':\r\n            return {\r\n                ...state,\r\n                userStatus: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\n//action\r\nexport const addPost = (payload: string) => ({type: 'PROFILE/ADD_POST', payload} as const)\r\nexport const setUserProfile = (payload: UserProfileType) => ({type: 'PROFILE/SET_USER_PROFILE', payload} as const)\r\nexport const setStatusUpdates = (payload: string | null) => ({type: 'PROFILE/SET_STATUS_UPDATES', payload} as const)\r\n\r\n//thunk\r\nexport const fetchUserProfileData = (paramsURL: number): AppThunk => async dispatch => {\r\n    try {\r\n        debugger\r\n        dispatch(setIsLoading(true))\r\n        if (paramsURL) {\r\n            debugger\r\n            let response = await api.getUserProfile(paramsURL)\r\n            dispatch(setUserProfile(response))\r\n            let responseStatus = await api.getStatusUser(response.userId)\r\n            dispatch(setStatusUpdates(responseStatus))\r\n        }\r\n    } catch (e) {\r\n        const error = e as Error | AxiosError\r\n        errorFromStatusCodeOrApplication(error, dispatch)\r\n    } finally {\r\n        dispatch(setIsLoading(false))\r\n    }\r\n}\r\nexport const fetchStatusUpdates = (newStatus: string, usersId: number): AppThunk => async dispatch => {\r\n    try {\r\n        dispatch(setIsLoading(true))\r\n        let response = await api.statusUpdates(newStatus)\r\n        if (response.resultCode === 0) {\r\n            let responseNewStatus = await api.getStatusUser(usersId)\r\n            dispatch(setStatusUpdates(responseNewStatus))\r\n        }\r\n    } catch (e) {\r\n        const error = e as Error | AxiosError\r\n        errorFromStatusCodeOrApplication(error, dispatch)\r\n    } finally {\r\n        dispatch(setIsLoading(false))\r\n    }\r\n}\r\n\r\n//type\r\nexport type InitialSateProfileType = typeof initialSateProfile\r\nexport type PostsType = {\r\n    id: number\r\n    massage: string\r\n    likes: number\r\n}\r\nexport type ActionProfileReducerType =\r\n    ReturnType<typeof addPost>\r\n    | ReturnType<typeof setUserProfile>\r\n    | ReturnType<typeof setStatusUpdates>\r\n"],"mappings":"AAAA,SAAQA,GAAR,QAAmC,YAAnC;AACA,SAAQC,YAAR,QAA2B,cAA3B;AAGA,SAAQC,gCAAR,QAA+C,sBAA/C;AAEA,MAAMC,kBAAkB,GAAG;EACvBC,KAAK,EAAE,CACH;IAACC,EAAE,EAAE,CAAL;IAAQC,OAAO,EAAE,qBAAjB;IAAwCC,KAAK,EAAE;EAA/C,CADG,EAEH;IAACF,EAAE,EAAE,CAAL;IAAQC,OAAO,EAAE,0BAAjB;IAA6CC,KAAK,EAAE;EAApD,CAFG,EAGH;IAACF,EAAE,EAAE,CAAL;IAAQC,OAAO,EAAE,qBAAjB;IAAwCC,KAAK,EAAE;EAA/C,CAHG,EAIH;IAACF,EAAE,EAAE,CAAL;IAAQC,OAAO,EAAE,0BAAjB;IAA6CC,KAAK,EAAE;EAApD,CAJG,CADgB;EAOvBC,WAAW,EAAE,EAPU;EAQvBC,UAAU,EAAE;AARW,CAA3B;AAWA,OAAO,MAAMC,cAAc,GAAG,YAA0F;EAAA,IAAzFC,KAAyF,uEAAjFR,kBAAiF;EAAA,IAA7DS,MAA6D;;EACpH,QAAQA,MAAM,CAACC,IAAf;IACI,KAAK,kBAAL;MACI,IAAIC,OAAkB,GAAG;QACrBT,EAAE,EAAE,EADiB;QAErBC,OAAO,EAAEM,MAAM,CAACG,OAFK;QAGrBR,KAAK,EAAE;MAHc,CAAzB;MAKA,OAAO,EACH,GAAGI,KADA;QAEHP,KAAK,EAAE,CAACU,OAAD,EAAU,GAAGH,KAAK,CAACP,KAAnB;MAFJ,CAAP;;IAIJ,KAAK,0BAAL;MACI,OAAO,EACH,GAAGO,KADA;QAEHH,WAAW,EAAEI,MAAM,CAACG;MAFjB,CAAP;;IAIJ,KAAK,4BAAL;MACI,OAAO,EACH,GAAGJ,KADA;QAEHF,UAAU,EAAEG,MAAM,CAACG;MAFhB,CAAP;;IAIJ;MACI,OAAOJ,KAAP;EAtBR;AAwBH,CAzBM,C,CA2BP;;AACA,OAAO,MAAMK,OAAO,GAAID,OAAD,KAAsB;EAACF,IAAI,EAAE,kBAAP;EAA2BE;AAA3B,CAAtB,CAAhB;AACP,OAAO,MAAME,cAAc,GAAIF,OAAD,KAA+B;EAACF,IAAI,EAAE,0BAAP;EAAmCE;AAAnC,CAA/B,CAAvB;AACP,OAAO,MAAMG,gBAAgB,GAAIH,OAAD,KAA6B;EAACF,IAAI,EAAE,4BAAP;EAAqCE;AAArC,CAA7B,CAAzB,C,CAEP;;AACA,OAAO,MAAMI,oBAAoB,GAAIC,SAAD,IAAiC,MAAMC,QAAN,IAAkB;EACnF,IAAI;IACA;IACAA,QAAQ,CAACpB,YAAY,CAAC,IAAD,CAAb,CAAR;;IACA,IAAImB,SAAJ,EAAe;MACX;MACA,IAAIE,QAAQ,GAAG,MAAMtB,GAAG,CAACuB,cAAJ,CAAmBH,SAAnB,CAArB;MACAC,QAAQ,CAACJ,cAAc,CAACK,QAAD,CAAf,CAAR;MACA,IAAIE,cAAc,GAAG,MAAMxB,GAAG,CAACyB,aAAJ,CAAkBH,QAAQ,CAACI,MAA3B,CAA3B;MACAL,QAAQ,CAACH,gBAAgB,CAACM,cAAD,CAAjB,CAAR;IACH;EACJ,CAVD,CAUE,OAAOG,CAAP,EAAU;IACR,MAAMC,KAAK,GAAGD,CAAd;IACAzB,gCAAgC,CAAC0B,KAAD,EAAQP,QAAR,CAAhC;EACH,CAbD,SAaU;IACNA,QAAQ,CAACpB,YAAY,CAAC,KAAD,CAAb,CAAR;EACH;AACJ,CAjBM;AAkBP,OAAO,MAAM4B,kBAAkB,GAAG,CAACC,SAAD,EAAoBC,OAApB,KAAkD,MAAMV,QAAN,IAAkB;EAClG,IAAI;IACAA,QAAQ,CAACpB,YAAY,CAAC,IAAD,CAAb,CAAR;IACA,IAAIqB,QAAQ,GAAG,MAAMtB,GAAG,CAACgC,aAAJ,CAAkBF,SAAlB,CAArB;;IACA,IAAIR,QAAQ,CAACW,UAAT,KAAwB,CAA5B,EAA+B;MAC3B,IAAIC,iBAAiB,GAAG,MAAMlC,GAAG,CAACyB,aAAJ,CAAkBM,OAAlB,CAA9B;MACAV,QAAQ,CAACH,gBAAgB,CAACgB,iBAAD,CAAjB,CAAR;IACH;EACJ,CAPD,CAOE,OAAOP,CAAP,EAAU;IACR,MAAMC,KAAK,GAAGD,CAAd;IACAzB,gCAAgC,CAAC0B,KAAD,EAAQP,QAAR,CAAhC;EACH,CAVD,SAUU;IACNA,QAAQ,CAACpB,YAAY,CAAC,KAAD,CAAb,CAAR;EACH;AACJ,CAdM,C,CAgBP"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import React,{useEffect}from'react';import{MyPosts}from'../components/Profile/MyPosts/MyPosts';import UserInfo from'../components/Profile/UserInfo/UserInfo';import{Loading}from'../components/common/Loading/Loading';import{useParams}from'react-router';import{useNavigate}from'react-router-dom';import{fetchUserProfileData}from'../redux/profileReducer';import{useAppDispatch,useAppSelector}from'../utils/hooks/hooks';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var Profile=function Profile(){var dispatch=useAppDispatch();var authorizedStatus=useAppSelector(function(state){return state.app.authorizedStatus;});var authorizedUser=useAppSelector(function(state){return state.app.authorizedUser;});var isLoading=useAppSelector(function(state){return state.app.isLoading;});var posts=useAppSelector(function(state){return state.profilePage.posts;});var userProfile=useAppSelector(function(state){return state.profilePage.userProfile;});var userStatus=useAppSelector(function(state){return state.profilePage.userStatus;});var params=useParams();var paramsURL=Number(params['id']);var navigate=useNavigate();useEffect(function(){if(authorizedStatus==='successfully'&&!params['id']){if(authorizedUser.id)paramsURL=authorizedUser.id;}if(authorizedStatus==='successfully'||paramsURL){dispatch(fetchUserProfileData(paramsURL));}else if(authorizedStatus==='fail'){navigate('/Login');}},[authorizedStatus,paramsURL]);if(Object.keys(userProfile).length===0||isLoading){return/*#__PURE__*/_jsx(Loading,{});}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(UserInfo,{userProfile:userProfile,authorizedUserId:authorizedUser.id,userStatus:userStatus}),/*#__PURE__*/_jsx(MyPosts,{photoUser:userProfile.photos.small,posts:posts})]});};","map":{"version":3,"names":["React","useEffect","MyPosts","UserInfo","Loading","useParams","useNavigate","fetchUserProfileData","useAppDispatch","useAppSelector","Profile","dispatch","authorizedStatus","state","app","authorizedUser","isLoading","posts","profilePage","userProfile","userStatus","params","paramsURL","Number","navigate","id","Object","keys","length","photos","small"],"sources":["C:/program/samurai-way-TS/src/pages/Profile.tsx"],"sourcesContent":["import React, {useEffect} from 'react';\r\nimport {MyPosts} from '../components/Profile/MyPosts/MyPosts';\r\nimport UserInfo from '../components/Profile/UserInfo/UserInfo';\r\nimport {Loading} from '../components/common/Loading/Loading';\r\nimport {useParams} from 'react-router';\r\nimport {useNavigate} from 'react-router-dom';\r\nimport {fetchUserProfileData,} from '../redux/profileReducer';\r\nimport {useAppDispatch, useAppSelector} from '../utils/hooks/hooks';\r\n\r\n\r\nexport const Profile = () => {\r\n    const dispatch = useAppDispatch()\r\n\r\n    const authorizedStatus = useAppSelector(state => state.app.authorizedStatus)\r\n    const authorizedUser = useAppSelector(state => state.app.authorizedUser)\r\n    const isLoading = useAppSelector(state => state.app.isLoading)\r\n    const posts = useAppSelector(state => state.profilePage.posts)\r\n    const userProfile = useAppSelector(state => state.profilePage.userProfile)\r\n    const userStatus = useAppSelector(state => state.profilePage.userStatus)\r\n\r\n    let params = useParams<'id'>()\r\n    let paramsURL = Number(params['id'])\r\n\r\n    const navigate = useNavigate()\r\n\r\n    useEffect(() => {\r\n        if (authorizedStatus === 'successfully' && !params['id']) {\r\n            if (authorizedUser.id) paramsURL = authorizedUser.id\r\n        }\r\n        if (authorizedStatus === 'successfully' || paramsURL) {\r\n            dispatch(fetchUserProfileData(paramsURL))\r\n        } else if (authorizedStatus === 'fail') {\r\n            navigate('/Login')\r\n        }\r\n\r\n    }, [authorizedStatus, paramsURL])\r\n\r\n    if (Object.keys(userProfile).length === 0 || isLoading) {\r\n        return <Loading/>\r\n    }\r\n    return (\r\n        <>\r\n            <UserInfo userProfile={userProfile}\r\n                      authorizedUserId={authorizedUser.id}\r\n                      userStatus={userStatus}/>\r\n            <MyPosts photoUser={userProfile.photos.small}\r\n                     posts={posts}\r\n            />\r\n        </>);\r\n};\r\n\r\n\r\n"],"mappings":"AAAA,MAAOA,MAAP,EAAeC,SAAf,KAA+B,OAA/B,CACA,OAAQC,OAAR,KAAsB,uCAAtB,CACA,MAAOC,SAAP,KAAqB,yCAArB,CACA,OAAQC,OAAR,KAAsB,sCAAtB,CACA,OAAQC,SAAR,KAAwB,cAAxB,CACA,OAAQC,WAAR,KAA0B,kBAA1B,CACA,OAAQC,oBAAR,KAAoC,yBAApC,CACA,OAAQC,cAAR,CAAwBC,cAAxB,KAA6C,sBAA7C,C,6IAGA,MAAO,IAAMC,QAAO,CAAG,QAAVA,QAAU,EAAM,CACzB,GAAMC,SAAQ,CAAGH,cAAc,EAA/B,CAEA,GAAMI,iBAAgB,CAAGH,cAAc,CAAC,SAAAI,KAAK,QAAIA,MAAK,CAACC,GAAN,CAAUF,gBAAd,EAAN,CAAvC,CACA,GAAMG,eAAc,CAAGN,cAAc,CAAC,SAAAI,KAAK,QAAIA,MAAK,CAACC,GAAN,CAAUC,cAAd,EAAN,CAArC,CACA,GAAMC,UAAS,CAAGP,cAAc,CAAC,SAAAI,KAAK,QAAIA,MAAK,CAACC,GAAN,CAAUE,SAAd,EAAN,CAAhC,CACA,GAAMC,MAAK,CAAGR,cAAc,CAAC,SAAAI,KAAK,QAAIA,MAAK,CAACK,WAAN,CAAkBD,KAAtB,EAAN,CAA5B,CACA,GAAME,YAAW,CAAGV,cAAc,CAAC,SAAAI,KAAK,QAAIA,MAAK,CAACK,WAAN,CAAkBC,WAAtB,EAAN,CAAlC,CACA,GAAMC,WAAU,CAAGX,cAAc,CAAC,SAAAI,KAAK,QAAIA,MAAK,CAACK,WAAN,CAAkBE,UAAtB,EAAN,CAAjC,CAEA,GAAIC,OAAM,CAAGhB,SAAS,EAAtB,CACA,GAAIiB,UAAS,CAAGC,MAAM,CAACF,MAAM,CAAC,IAAD,CAAP,CAAtB,CAEA,GAAMG,SAAQ,CAAGlB,WAAW,EAA5B,CAEAL,SAAS,CAAC,UAAM,CACZ,GAAIW,gBAAgB,GAAK,cAArB,EAAuC,CAACS,MAAM,CAAC,IAAD,CAAlD,CAA0D,CACtD,GAAIN,cAAc,CAACU,EAAnB,CAAuBH,SAAS,CAAGP,cAAc,CAACU,EAA3B,CAC1B,CACD,GAAIb,gBAAgB,GAAK,cAArB,EAAuCU,SAA3C,CAAsD,CAClDX,QAAQ,CAACJ,oBAAoB,CAACe,SAAD,CAArB,CAAR,CACH,CAFD,IAEO,IAAIV,gBAAgB,GAAK,MAAzB,CAAiC,CACpCY,QAAQ,CAAC,QAAD,CAAR,CACH,CAEJ,CAVQ,CAUN,CAACZ,gBAAD,CAAmBU,SAAnB,CAVM,CAAT,CAYA,GAAII,MAAM,CAACC,IAAP,CAAYR,WAAZ,EAAyBS,MAAzB,GAAoC,CAApC,EAAyCZ,SAA7C,CAAwD,CACpD,mBAAO,KAAC,OAAD,IAAP,CACH,CACD,mBACI,wCACI,KAAC,QAAD,EAAU,WAAW,CAAEG,WAAvB,CACU,gBAAgB,CAAEJ,cAAc,CAACU,EAD3C,CAEU,UAAU,CAAEL,UAFtB,EADJ,cAII,KAAC,OAAD,EAAS,SAAS,CAAED,WAAW,CAACU,MAAZ,CAAmBC,KAAvC,CACS,KAAK,CAAEb,KADhB,EAJJ,GADJ,CASH,CAvCM"},"metadata":{},"sourceType":"module"}
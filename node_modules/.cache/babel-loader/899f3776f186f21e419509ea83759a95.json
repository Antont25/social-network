{"ast":null,"code":"var _jsxFileName = \"G:\\\\program\\\\practica\\\\react-practica\\\\it-incubator\\\\samurai-way-TS\\\\src\\\\components\\\\common\\\\ErrorSnackbar\\\\ErrorSnackbar.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { useDispatch } from 'react-redux';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Alert = /*#__PURE__*/React.forwardRef(_c = function Alert(props, ref) {\n  return /*#__PURE__*/_jsxDEV(MuiAlert, {\n    elevation: 6,\n    ref: ref,\n    variant: \"filled\",\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 12\n  }, this);\n});\n_c2 = Alert;\nexport function ErrorSnackbar() {\n  _s();\n\n  const error = 'useAppSelector(state => state.app.error)';\n  const dispatch = useDispatch();\n  const [open, setOpen] = useState(true);\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    } // dispatch(setError(null))\n\n  };\n\n  return /*#__PURE__*/_jsxDEV(Snackbar, {\n    open: error !== null,\n    autoHideDuration: 6000,\n    onClose: handleClose,\n    children: /*#__PURE__*/_jsxDEV(Alert, {\n      onClose: handleClose,\n      severity: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ErrorSnackbar, \"5zxPPp84C9GLBpz11PI2/cppUxU=\", false, function () {\n  return [useDispatch];\n});\n\n_c3 = ErrorSnackbar;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Alert$React.forwardRef\");\n$RefreshReg$(_c2, \"Alert\");\n$RefreshReg$(_c3, \"ErrorSnackbar\");","map":{"version":3,"names":["React","useState","MuiAlert","useDispatch","Snackbar","Alert","forwardRef","props","ref","ErrorSnackbar","error","dispatch","open","setOpen","handleClose","event","reason"],"sources":["G:/program/practica/react-practica/it-incubator/samurai-way-TS/src/components/common/ErrorSnackbar/ErrorSnackbar.tsx"],"sourcesContent":["import React, {useState} from 'react'\r\nimport MuiAlert, {AlertProps} from '@material-ui/lab/Alert';\r\nimport {useDispatch} from 'react-redux';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\n\r\nconst Alert = React.forwardRef<HTMLDivElement, AlertProps>(function Alert(\r\n    props, ref) {\r\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />\r\n})\r\n\r\nexport function ErrorSnackbar() {\r\n    const error = 'useAppSelector(state => state.app.error)'\r\n    const dispatch = useDispatch()\r\n    const [open, setOpen] = useState(true)\r\n\r\n    const handleClose = (event?: React.SyntheticEvent | Event, reason?: string) => {\r\n        if (reason === 'clickaway') {\r\n            return\r\n        }\r\n        // dispatch(setError(null))\r\n    }\r\n    return (\r\n        <Snackbar open={error !== null} autoHideDuration={6000} onClose={handleClose}>\r\n            <Alert onClose={handleClose} severity=\"error\">\r\n                {error}\r\n            </Alert>\r\n        </Snackbar>\r\n    )\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAmC,wBAAnC;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,OAAOC,QAAP,MAAqB,4BAArB;;AAGA,MAAMC,KAAK,gBAAGL,KAAK,CAACM,UAAN,MAA6C,SAASD,KAAT,CACvDE,KADuD,EAChDC,GADgD,EAC3C;EACZ,oBAAO,QAAC,QAAD;IAAU,SAAS,EAAE,CAArB;IAAwB,GAAG,EAAEA,GAA7B;IAAkC,OAAO,EAAC,QAA1C;IAAA,GAAuDD;EAAvD;IAAA;IAAA;IAAA;EAAA,QAAP;AACH,CAHa,CAAd;MAAMF,K;AAKN,OAAO,SAASI,aAAT,GAAyB;EAAA;;EAC5B,MAAMC,KAAK,GAAG,0CAAd;EACA,MAAMC,QAAQ,GAAGR,WAAW,EAA5B;EACA,MAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,IAAD,CAAhC;;EAEA,MAAMa,WAAW,GAAG,CAACC,KAAD,EAAuCC,MAAvC,KAA2D;IAC3E,IAAIA,MAAM,KAAK,WAAf,EAA4B;MACxB;IACH,CAH0E,CAI3E;;EACH,CALD;;EAMA,oBACI,QAAC,QAAD;IAAU,IAAI,EAAEN,KAAK,KAAK,IAA1B;IAAgC,gBAAgB,EAAE,IAAlD;IAAwD,OAAO,EAAEI,WAAjE;IAAA,uBACI,QAAC,KAAD;MAAO,OAAO,EAAEA,WAAhB;MAA6B,QAAQ,EAAC,OAAtC;MAAA,UACKJ;IADL;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAOH;;GAlBeD,a;UAEKN,W;;;MAFLM,a"},"metadata":{},"sourceType":"module"}
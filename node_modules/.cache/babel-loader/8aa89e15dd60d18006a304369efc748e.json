{"ast":null,"code":"import _objectSpread from\"C:/program/samurai-way-TS/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React from'react';import MuiAlert from'@material-ui/lab/Alert';import Snackbar from'@material-ui/core/Snackbar';import{useAppDispatch,useAppSelector}from'../../../utils/hooks/hooks';import{setServerError}from'../../../redux/appReducer';import{jsx as _jsx}from\"react/jsx-runtime\";var Alert=/*#__PURE__*/React.forwardRef(function Alert(props,ref){return/*#__PURE__*/_jsx(MuiAlert,_objectSpread({elevation:6,ref:ref,variant:\"filled\"},props));});export function ErrorSnackbar(){var error=useAppSelector(function(state){return state.app.serverError;});var dispatch=useAppDispatch();var handleClose=function handleClose(event,reason){if(reason==='clickaway'){return;}dispatch(setServerError(null));};return/*#__PURE__*/_jsx(Snackbar,{open:error!==null,autoHideDuration:4000,onClose:handleClose,children:/*#__PURE__*/_jsx(Alert,{onClose:handleClose,severity:\"error\",children:error})});}","map":{"version":3,"names":["React","MuiAlert","Snackbar","useAppDispatch","useAppSelector","setServerError","Alert","forwardRef","props","ref","ErrorSnackbar","error","state","app","serverError","dispatch","handleClose","event","reason"],"sources":["C:/program/samurai-way-TS/src/components/common/ErrorSnackbar/ErrorSnackbar.tsx"],"sourcesContent":["import React, {useState} from 'react'\r\nimport MuiAlert, {AlertProps} from '@material-ui/lab/Alert';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport {useAppDispatch, useAppSelector} from '../../../utils/hooks/hooks';\r\nimport {setServerError} from '../../../redux/appReducer';\r\n\r\n\r\nconst Alert = React.forwardRef<HTMLDivElement, AlertProps>(function Alert(\r\n    props, ref) {\r\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />\r\n})\r\n\r\nexport function ErrorSnackbar() {\r\n    const error = useAppSelector(state => state.app.serverError)\r\n    const dispatch = useAppDispatch()\r\n\r\n    const handleClose = (event?: React.SyntheticEvent | Event, reason?: string) => {\r\n        if (reason === 'clickaway') {\r\n            return\r\n        }\r\n        dispatch(setServerError(null))\r\n    }\r\n    return (\r\n        <Snackbar open={error !== null} autoHideDuration={4000} onClose={handleClose}>\r\n            <Alert onClose={handleClose} severity=\"error\">\r\n                {error}\r\n            </Alert>\r\n        </Snackbar>\r\n    )\r\n}\r\n"],"mappings":"8GAAA,MAAOA,MAAP,KAA8B,OAA9B,CACA,MAAOC,SAAP,KAAmC,wBAAnC,CACA,MAAOC,SAAP,KAAqB,4BAArB,CACA,OAAQC,cAAR,CAAwBC,cAAxB,KAA6C,4BAA7C,CACA,OAAQC,cAAR,KAA6B,2BAA7B,C,2CAGA,GAAMC,MAAK,cAAGN,KAAK,CAACO,UAAN,CAA6C,QAASD,MAAT,CACvDE,KADuD,CAChDC,GADgD,CAC3C,CACZ,mBAAO,KAAC,QAAD,gBAAU,SAAS,CAAE,CAArB,CAAwB,GAAG,CAAEA,GAA7B,CAAkC,OAAO,CAAC,QAA1C,EAAuDD,KAAvD,EAAP,CACH,CAHa,CAAd,CAKA,MAAO,SAASE,cAAT,EAAyB,CAC5B,GAAMC,MAAK,CAAGP,cAAc,CAAC,SAAAQ,KAAK,QAAIA,MAAK,CAACC,GAAN,CAAUC,WAAd,EAAN,CAA5B,CACA,GAAMC,SAAQ,CAAGZ,cAAc,EAA/B,CAEA,GAAMa,YAAW,CAAG,QAAdA,YAAc,CAACC,KAAD,CAAuCC,MAAvC,CAA2D,CAC3E,GAAIA,MAAM,GAAK,WAAf,CAA4B,CACxB,OACH,CACDH,QAAQ,CAACV,cAAc,CAAC,IAAD,CAAf,CAAR,CACH,CALD,CAMA,mBACI,KAAC,QAAD,EAAU,IAAI,CAAEM,KAAK,GAAK,IAA1B,CAAgC,gBAAgB,CAAE,IAAlD,CAAwD,OAAO,CAAEK,WAAjE,uBACI,KAAC,KAAD,EAAO,OAAO,CAAEA,WAAhB,CAA6B,QAAQ,CAAC,OAAtC,UACKL,KADL,EADJ,EADJ,CAOH"},"metadata":{},"sourceType":"module"}
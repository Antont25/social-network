{"ast":null,"code":"var _jsxFileName = \"C:\\\\program\\\\samurai-way-TS\\\\src\\\\pages\\\\Profile.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { MyPosts } from '../components/profile/myPosts/MyPosts';\nimport UserInfo from '../components/profile/userInfo/UserInfo';\nimport { Loading } from '../components/common/loading/Loading';\nimport { useParams } from 'react-router';\nimport { useNavigate } from 'react-router-dom';\nimport { fetchUserProfileData } from '../redux/profileReducer';\nimport { useAppDispatch, useAppSelector } from '../utils/hooks/hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Profile = () => {\n  _s();\n\n  const dispatch = useAppDispatch();\n  const {\n    authorizedStatus,\n    authorizedUser,\n    isLoading,\n    posts,\n    userProfile,\n    userStatus\n  } = useAppSelector(state => ({\n    authorizedStatus: state.app.authorizedStatus,\n    authorizedUser: state.app.authorizedUser,\n    isLoading: state.app.isLoading,\n    posts: state.profilePage.posts,\n    userProfile: state.profilePage.userProfile,\n    userStatus: state.profilePage.userStatus\n  }));\n  let params = useParams();\n  let paramsURL = Number(params['id']);\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (authorizedStatus === 'successfully' && !params['id']) {\n      if (authorizedUser.id) paramsURL = authorizedUser.id;\n    }\n\n    if (authorizedStatus === 'successfully' || paramsURL) {\n      dispatch(fetchUserProfileData(paramsURL));\n    } else if (authorizedStatus === 'fail') {\n      navigate('/login');\n    }\n  }, [authorizedStatus, paramsURL]);\n\n  if (Object.keys(userProfile).length === 0 || isLoading) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(UserInfo, {\n      userProfile: userProfile,\n      authorizedUserId: authorizedUser.id,\n      userStatus: userStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MyPosts, {\n      photoUser: userProfile.photos.small,\n      posts: posts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Profile, \"TNzMoUMnxoocx+UgrkLSaJ7pa2A=\", false, function () {\n  return [useAppDispatch, useAppSelector, useParams, useNavigate];\n});\n\n_c = Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useEffect","MyPosts","UserInfo","Loading","useParams","useNavigate","fetchUserProfileData","useAppDispatch","useAppSelector","Profile","dispatch","authorizedStatus","authorizedUser","isLoading","posts","userProfile","userStatus","state","app","profilePage","params","paramsURL","Number","navigate","id","Object","keys","length","photos","small"],"sources":["C:/program/samurai-way-TS/src/pages/Profile.tsx"],"sourcesContent":["import React, {useEffect} from 'react';\r\nimport {MyPosts} from '../components/profile/myPosts/MyPosts';\r\nimport UserInfo from '../components/profile/userInfo/UserInfo';\r\nimport {Loading} from '../components/common/loading/Loading';\r\nimport {useParams} from 'react-router';\r\nimport {useNavigate} from 'react-router-dom';\r\nimport {fetchUserProfileData,} from '../redux/profileReducer';\r\nimport {useAppDispatch, useAppSelector} from '../utils/hooks/hooks';\r\n\r\n\r\nexport const Profile = () => {\r\n    const dispatch = useAppDispatch()\r\n    const {authorizedStatus, authorizedUser, isLoading, posts, userProfile, userStatus} = useAppSelector(state =>\r\n        ({\r\n            authorizedStatus: state.app.authorizedStatus,\r\n            authorizedUser: state.app.authorizedUser,\r\n            isLoading: state.app.isLoading,\r\n            posts: state.profilePage.posts,\r\n            userProfile: state.profilePage.userProfile,\r\n            userStatus: state.profilePage.userStatus,\r\n        }))\r\n\r\n    let params = useParams<'id'>()\r\n    let paramsURL = Number(params['id'])\r\n    const navigate = useNavigate()\r\n    useEffect(() => {\r\n        if (authorizedStatus === 'successfully' && !params['id']) {\r\n            if (authorizedUser.id) paramsURL = authorizedUser.id\r\n        }\r\n        if (authorizedStatus === 'successfully' || paramsURL) {\r\n            dispatch(fetchUserProfileData(paramsURL))\r\n        } else if (authorizedStatus === 'fail') {\r\n            navigate('/login')\r\n        }\r\n\r\n    }, [authorizedStatus, paramsURL])\r\n\r\n    if (Object.keys(userProfile).length === 0 || isLoading) {\r\n        return <Loading/>\r\n    }\r\n    return (\r\n        <>\r\n            <UserInfo userProfile={userProfile}\r\n                      authorizedUserId={authorizedUser.id}\r\n                      userStatus={userStatus}/>\r\n            <MyPosts photoUser={userProfile.photos.small}\r\n                     posts={posts}\r\n            />\r\n        </>);\r\n};\r\n\r\n\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,uCAAtB;AACA,OAAOC,QAAP,MAAqB,yCAArB;AACA,SAAQC,OAAR,QAAsB,sCAAtB;AACA,SAAQC,SAAR,QAAwB,cAAxB;AACA,SAAQC,WAAR,QAA0B,kBAA1B;AACA,SAAQC,oBAAR,QAAoC,yBAApC;AACA,SAAQC,cAAR,EAAwBC,cAAxB,QAA6C,sBAA7C;;;AAGA,OAAO,MAAMC,OAAO,GAAG,MAAM;EAAA;;EACzB,MAAMC,QAAQ,GAAGH,cAAc,EAA/B;EACA,MAAM;IAACI,gBAAD;IAAmBC,cAAnB;IAAmCC,SAAnC;IAA8CC,KAA9C;IAAqDC,WAArD;IAAkEC;EAAlE,IAAgFR,cAAc,CAACS,KAAK,KACrG;IACGN,gBAAgB,EAAEM,KAAK,CAACC,GAAN,CAAUP,gBAD/B;IAEGC,cAAc,EAAEK,KAAK,CAACC,GAAN,CAAUN,cAF7B;IAGGC,SAAS,EAAEI,KAAK,CAACC,GAAN,CAAUL,SAHxB;IAIGC,KAAK,EAAEG,KAAK,CAACE,WAAN,CAAkBL,KAJ5B;IAKGC,WAAW,EAAEE,KAAK,CAACE,WAAN,CAAkBJ,WALlC;IAMGC,UAAU,EAAEC,KAAK,CAACE,WAAN,CAAkBH;EANjC,CADqG,CAAN,CAApG;EAUA,IAAII,MAAM,GAAGhB,SAAS,EAAtB;EACA,IAAIiB,SAAS,GAAGC,MAAM,CAACF,MAAM,CAAC,IAAD,CAAP,CAAtB;EACA,MAAMG,QAAQ,GAAGlB,WAAW,EAA5B;EACAL,SAAS,CAAC,MAAM;IACZ,IAAIW,gBAAgB,KAAK,cAArB,IAAuC,CAACS,MAAM,CAAC,IAAD,CAAlD,EAA0D;MACtD,IAAIR,cAAc,CAACY,EAAnB,EAAuBH,SAAS,GAAGT,cAAc,CAACY,EAA3B;IAC1B;;IACD,IAAIb,gBAAgB,KAAK,cAArB,IAAuCU,SAA3C,EAAsD;MAClDX,QAAQ,CAACJ,oBAAoB,CAACe,SAAD,CAArB,CAAR;IACH,CAFD,MAEO,IAAIV,gBAAgB,KAAK,MAAzB,EAAiC;MACpCY,QAAQ,CAAC,QAAD,CAAR;IACH;EAEJ,CAVQ,EAUN,CAACZ,gBAAD,EAAmBU,SAAnB,CAVM,CAAT;;EAYA,IAAII,MAAM,CAACC,IAAP,CAAYX,WAAZ,EAAyBY,MAAzB,KAAoC,CAApC,IAAyCd,SAA7C,EAAwD;IACpD,oBAAO,QAAC,OAAD;MAAA;MAAA;MAAA;IAAA,QAAP;EACH;;EACD,oBACI;IAAA,wBACI,QAAC,QAAD;MAAU,WAAW,EAAEE,WAAvB;MACU,gBAAgB,EAAEH,cAAc,CAACY,EAD3C;MAEU,UAAU,EAAER;IAFtB;MAAA;MAAA;MAAA;IAAA,QADJ,eAII,QAAC,OAAD;MAAS,SAAS,EAAED,WAAW,CAACa,MAAZ,CAAmBC,KAAvC;MACS,KAAK,EAAEf;IADhB;MAAA;MAAA;MAAA;IAAA,QAJJ;EAAA,gBADJ;AASH,CAvCM;;GAAML,O;UACQF,c,EACqEC,c,EAUzEJ,S,EAEIC,W;;;KAdRI,O"},"metadata":{},"sourceType":"module"}
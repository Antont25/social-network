{"ast":null,"code":"var _jsxFileName = \"G:\\\\program\\\\practica\\\\react-practica\\\\it-incubator\\\\samurai-way-TS\\\\src\\\\components\\\\common\\\\textarea\\\\Textarea.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport style from './textarea.module.css';\nimport TextField from '@material-ui/core/TextField';\nimport Button from \"../button/Button\";\nimport * as yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = yup.object({\n  text: yup.string().required('Field is required')\n});\nexport const Textarea = props => {\n  _s();\n\n  const formik = useFormik({\n    initialValues: {\n      text: ''\n    },\n    validationSchema: validationSchema,\n    onSubmit: values => {\n      props.callback(values.text);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formik.handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.addTextBloc,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        name: 'text',\n        label: \"\\u043D\\u043E\\u0432\\u044B\\u0439 \\u043F\\u043E\\u0441\\u0442\",\n        placeholder: \"\\u043D\\u043E\\u0432\\u044B\\u0439 \\u043F\\u043E\\u0441\\u0442\",\n        multiline: true,\n        variant: \"outlined\",\n        value: formik.values.text,\n        className: style.textareaBloc,\n        onChange: formik.handleChange,\n        error: Boolean(formik.errors.text),\n        helperText: formik.errors.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Textarea, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = Textarea;\n\nvar _c;\n\n$RefreshReg$(_c, \"Textarea\");","map":{"version":3,"names":["React","style","TextField","Button","yup","useFormik","validationSchema","object","text","string","required","Textarea","props","formik","initialValues","onSubmit","values","callback","handleSubmit","addTextBloc","textareaBloc","handleChange","Boolean","errors"],"sources":["G:/program/practica/react-practica/it-incubator/samurai-way-TS/src/components/common/textarea/Textarea.tsx"],"sourcesContent":["import React from 'react';\r\nimport style from './textarea.module.css'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from \"../button/Button\";\r\nimport * as yup from \"yup\";\r\nimport {useFormik} from \"formik\";\r\n\r\n\r\ntype TextareaPropsType = {\r\n    callback: (value: string) => void\r\n}\r\n\r\nconst validationSchema = yup.object({\r\n    text: yup\r\n        .string()\r\n        .required('Field is required'),\r\n});\r\n\r\nexport const Textarea: React.FC<TextareaPropsType> = (props) => {\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            text: '',\r\n        },\r\n        validationSchema: validationSchema,\r\n        onSubmit: (values) => {\r\n            props.callback(values.text)\r\n        },\r\n    });\r\n\r\n    return (\r\n        <form onSubmit={formik.handleSubmit}>\r\n            <div className={style.addTextBloc}>\r\n                <TextField\r\n                    name={'text'}\r\n                    label=\"новый пост\"\r\n                    placeholder=\"новый пост\"\r\n                    multiline\r\n                    variant=\"outlined\"\r\n                    value={formik.values.text}\r\n                    className={style.textareaBloc}\r\n                    onChange={formik.handleChange}\r\n                    error={Boolean(formik.errors.text)}\r\n                    helperText={formik.errors.text}\r\n                />\r\n\r\n                <Button type=\"submit\">\r\n                    Добавить\r\n                </Button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAAQC,SAAR,QAAwB,QAAxB;;AAOA,MAAMC,gBAAgB,GAAGF,GAAG,CAACG,MAAJ,CAAW;EAChCC,IAAI,EAAEJ,GAAG,CACJK,MADC,GAEDC,QAFC,CAEQ,mBAFR;AAD0B,CAAX,CAAzB;AAMA,OAAO,MAAMC,QAAqC,GAAIC,KAAD,IAAW;EAAA;;EAE5D,MAAMC,MAAM,GAAGR,SAAS,CAAC;IACrBS,aAAa,EAAE;MACXN,IAAI,EAAE;IADK,CADM;IAIrBF,gBAAgB,EAAEA,gBAJG;IAKrBS,QAAQ,EAAGC,MAAD,IAAY;MAClBJ,KAAK,CAACK,QAAN,CAAeD,MAAM,CAACR,IAAtB;IACH;EAPoB,CAAD,CAAxB;EAUA,oBACI;IAAM,QAAQ,EAAEK,MAAM,CAACK,YAAvB;IAAA,uBACI;MAAK,SAAS,EAAEjB,KAAK,CAACkB,WAAtB;MAAA,wBACI,QAAC,SAAD;QACI,IAAI,EAAE,MADV;QAEI,KAAK,EAAC,yDAFV;QAGI,WAAW,EAAC,yDAHhB;QAII,SAAS,MAJb;QAKI,OAAO,EAAC,UALZ;QAMI,KAAK,EAAEN,MAAM,CAACG,MAAP,CAAcR,IANzB;QAOI,SAAS,EAAEP,KAAK,CAACmB,YAPrB;QAQI,QAAQ,EAAEP,MAAM,CAACQ,YARrB;QASI,KAAK,EAAEC,OAAO,CAACT,MAAM,CAACU,MAAP,CAAcf,IAAf,CATlB;QAUI,UAAU,EAAEK,MAAM,CAACU,MAAP,CAAcf;MAV9B;QAAA;QAAA;QAAA;MAAA,QADJ,eAcI,QAAC,MAAD;QAAQ,IAAI,EAAC,QAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAdJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAsBH,CAlCM;;GAAMG,Q;UAEMN,S;;;KAFNM,Q"},"metadata":{},"sourceType":"module"}
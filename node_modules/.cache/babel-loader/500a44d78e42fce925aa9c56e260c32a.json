{"ast":null,"code":"import _slicedToArray from\"C:/program/samurai-way-TS/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import style from'./userInfo.module.css';import avatar from'../../../assest/img/avatar.png';import Paper from'@material-ui/core/Paper';import Grid from'@material-ui/core/Grid';import ListItemText from'@material-ui/core/ListItemText';import ListItem from'@material-ui/core/ListItem';import{useAppDispatch}from'../../../utils/hooks/hooks';import{fetchStatusUpdates,updateContacts}from'../../../redux/profileReducer';import{AvatarUser}from'./Avatar/AvatarUser';import Button from'../../common/Button/Button';import{FormContacts}from'./FormContacts/FormContacts';import{EditMode}from'../../EditMode/EditMode';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var UserInfo=function UserInfo(props){var dispatch=useAppDispatch();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),editMode=_useState2[0],setEditMode=_useState2[1];var isOwner=props.authorizedUserId===props.userProfile.userId;var setStatusHandler=function setStatusHandler(value){dispatch(fetchStatusUpdates(value,props.userProfile.userId));};var editModeHandler=function editModeHandler(){setEditMode(!editMode);};var saveNameHandler=function saveNameHandler(fullName){dispatch(updateContacts(undefined,fullName));};var closedEditMode=function closedEditMode(){setEditMode(false);};return/*#__PURE__*/_jsxs(Paper,{elevation:3,className:style.avatarPaper,children:[/*#__PURE__*/_jsxs(Grid,{container:true,className:style.avatarBloc,children:[/*#__PURE__*/_jsx(AvatarUser,{src:props.userProfile.photos.small||avatar}),/*#__PURE__*/_jsxs(\"div\",{className:style.info,children:[/*#__PURE__*/_jsx(\"div\",{className:style.name,children:/*#__PURE__*/_jsx(EditMode,{value:props.userProfile.fullName,isOwner:isOwner,callback:saveNameHandler,label:'name',length:10})}),/*#__PURE__*/_jsxs(\"div\",{className:style.statusBloc,children:[/*#__PURE__*/_jsx(\"span\",{children:\"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441:\"}),/*#__PURE__*/_jsx(EditMode,{value:props.userStatus,callback:setStatusHandler,isOwner:isOwner,label:'status',length:80})]})]})]}),/*#__PURE__*/_jsxs(Grid,{container:true,className:style.contacts,children:[/*#__PURE__*/_jsx(\"h2\",{children:\"contacts\"}),/*#__PURE__*/_jsx(Grid,{item:true,className:style.contactItem,children:editMode?/*#__PURE__*/_jsx(FormContacts,{setEditMode:setEditMode,closedEditMode:closedEditMode}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(ListItem,{children:Object.keys(props.userProfile.contacts).map(function(item,index){return/*#__PURE__*/_jsx(ListItemText,{className:style.contactHeader,primary:\"\".concat(item,\":\")},index);})}),/*#__PURE__*/_jsx(ListItem,{children:Object.values(props.userProfile.contacts).map(function(item,index){return/*#__PURE__*/_jsx(ListItemText,{className:style.contactBody,primary:item||'нету даных'},index);})})]})}),isOwner&&!editMode&&/*#__PURE__*/_jsx(Button,{className:style.btn,onClick:editModeHandler,children:\"\\u0440\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u0444\\u043E\\u0440\\u043C\\u0443\"})]})]});};export default UserInfo;","map":{"version":3,"names":["React","useState","style","avatar","Paper","Grid","ListItemText","ListItem","useAppDispatch","fetchStatusUpdates","updateContacts","AvatarUser","Button","FormContacts","EditMode","UserInfo","props","dispatch","editMode","setEditMode","isOwner","authorizedUserId","userProfile","userId","setStatusHandler","value","editModeHandler","saveNameHandler","fullName","undefined","closedEditMode","avatarPaper","avatarBloc","photos","small","info","name","statusBloc","userStatus","contacts","contactItem","Object","keys","map","item","index","contactHeader","values","contactBody","btn"],"sources":["C:/program/samurai-way-TS/src/components/Profile/UserInfo/UserInfo.tsx"],"sourcesContent":["import React, {useState} from 'react';\r\nimport style from './userInfo.module.css'\r\nimport avatar from '../../../assest/img/avatar.png'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport {UserProfileType} from '../../../api/api';\r\nimport {useAppDispatch} from '../../../utils/hooks/hooks';\r\nimport {fetchStatusUpdates, updateContacts} from '../../../redux/profileReducer';\r\nimport {AvatarUser} from './Avatar/AvatarUser';\r\nimport Button from '../../common/Button/Button';\r\nimport {FormContacts} from './FormContacts/FormContacts';\r\nimport {EditMode} from '../../EditMode/EditMode';\r\n\r\n\r\ntype UserInfoType = {\r\n    userProfile: UserProfileType\r\n    authorizedUserId: number | null\r\n    userStatus: string | null\r\n\r\n}\r\nconst UserInfo: React.FC<UserInfoType> = (props) => {\r\n\r\n    const dispatch = useAppDispatch()\r\n\r\n    const [editMode, setEditMode] = useState(false)\r\n\r\n    const isOwner = props.authorizedUserId === props.userProfile.userId\r\n\r\n    const setStatusHandler = (value: string) => {\r\n        dispatch(fetchStatusUpdates(value, props.userProfile.userId))\r\n    }\r\n    const editModeHandler = () => {\r\n        setEditMode(!editMode)\r\n    }\r\n\r\n    const saveNameHandler = (fullName: string) => {\r\n        dispatch(updateContacts(undefined, fullName))\r\n    }\r\n\r\n    const closedEditMode = () => {\r\n        setEditMode(false)\r\n    }\r\n\r\n\r\n    return (\r\n        <Paper elevation={3} className={style.avatarPaper}>\r\n            <Grid container className={style.avatarBloc}>\r\n\r\n                <AvatarUser src={props.userProfile.photos.small || avatar}/>\r\n\r\n                <div className={style.info}>\r\n                    <div className={style.name}>\r\n                        <EditMode value={props.userProfile.fullName}\r\n                                  isOwner={isOwner}\r\n                                  callback={saveNameHandler}\r\n                                  label={'name'}\r\n                                  length={10}/>\r\n                    </div>\r\n\r\n                    <div className={style.statusBloc}>\r\n                        <span>Статус:</span>\r\n                        <EditMode value={props.userStatus}\r\n                                  callback={setStatusHandler}\r\n                                  isOwner={isOwner}\r\n                                  label={'status'}\r\n                                  length={80}/>\r\n\r\n                    </div>\r\n                </div>\r\n            </Grid>\r\n\r\n            <Grid container className={style.contacts}>\r\n                <h2>contacts</h2>\r\n                <Grid item className={style.contactItem}>\r\n                    {editMode\r\n                        ? <FormContacts setEditMode={setEditMode}\r\n                                        closedEditMode={closedEditMode}/>\r\n                        : <>\r\n                            <ListItem>\r\n                                {\r\n                                    Object.keys(props.userProfile.contacts).map((item, index) => <ListItemText\r\n                                        className={style.contactHeader}\r\n                                        key={index}\r\n                                        primary={`${item}:`}/>)\r\n                                }\r\n                            </ListItem>\r\n\r\n\r\n                            <ListItem>\r\n                                {\r\n                                    Object.values(props.userProfile.contacts).map((item, index) => <ListItemText\r\n                                        className={style.contactBody}\r\n                                        key={index}\r\n                                        primary={item || 'нету даных'}/>\r\n                                    )\r\n\r\n                                }\r\n                            </ListItem>\r\n                        </>\r\n                    }\r\n\r\n                </Grid>\r\n                {isOwner && !editMode &&\r\n                    <Button className={style.btn} onClick={editModeHandler}>редактировать форму</Button>}\r\n            </Grid>\r\n        </Paper>\r\n\r\n    )\r\n};\r\n\r\nexport default UserInfo;\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { api } from '../api/api';\nimport axios from 'axios';\nlet initialStateApp = {\n  isLoading: false,\n  authorizedStatus: 'initialization',\n  authorizedUser: {\n    id: null,\n    email: null,\n    login: null\n  },\n  authorizedProfileUser: {\n    photos: {\n      small: null\n    }\n  },\n  serverError: null\n};\nexport const appReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialStateApp;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'APP/IS_LOADING':\n      return { ...state,\n        isLoading: action.payload\n      };\n\n    case 'APP/SET_AUTHORIZED_USER':\n      return { ...state,\n        authorizedUser: { ...action.user\n        }\n      };\n\n    case 'APP/SET_AUTHORIZED_PROFILE_USER':\n      return { ...state,\n        authorizedProfileUser: action.payload\n      };\n\n    case 'APP/SET_AUTHORIZED_STATUS':\n      return { ...state,\n        authorizedStatus: action.payload\n      };\n\n    case 'APP/SET-SERVER-ERROR':\n      return { ...state,\n        serverError: action.payload\n      };\n\n    default:\n      return state;\n  }\n}; //action\n\nexport const setIsLoading = payload => ({\n  type: 'APP/IS_LOADING',\n  payload\n});\nexport const setAuthorizedUser = user => ({\n  type: 'APP/SET_AUTHORIZED_USER',\n  user\n});\nexport const setAuthorizedStatus = payload => ({\n  type: 'APP/SET_AUTHORIZED_STATUS',\n  payload\n});\nexport const setAuthorizedProfileUser = payload => ({\n  type: 'APP/SET_AUTHORIZED_PROFILE_USER',\n  payload\n});\nexport const setServerError = payload => ({\n  type: 'APP/SET-SERVER-ERROR',\n  payload\n}); //thunk\n\nexport const fetchAuthorizedData = () => async dispatch => {\n  try {\n    dispatch(setIsLoading(true));\n    let response = await api.authorizedMe();\n\n    if (response.resultCode === 0) {\n      dispatch(setAuthorizedUser(response.data));\n      dispatch(setAuthorizedStatus('successfully'));\n\n      if (response.data.id) {\n        let responseUser = await api.getUserProfile(response.data.id);\n        dispatch(setAuthorizedProfileUser(responseUser));\n      }\n    } else {\n      dispatch(setAuthorizedStatus('fail'));\n    }\n  } catch (e) {\n    const error = e;\n\n    if (axios.isAxiosError(error)) {\n      const setError = error.response ? error.response.data.error : error.message;\n      dispatch(setServerError(setError));\n    } else {\n      dispatch(setServerError(error.message || 'some error'));\n    }\n  } finally {\n    dispatch(setIsLoading(false));\n  }\n};\nexport const fetchAuthorization = (email, password, setStatus) => async dispatch => {\n  try {\n    dispatch(setIsLoading(true));\n    let response = await api.authorize(email, password);\n\n    if (response.resultCode === 0) {\n      dispatch(fetchAuthorizedData());\n    } else if (response.resultCode !== 0) {\n      setStatus(response.messages[0]);\n    }\n  } catch (error) {\n    console.log(error);\n  } finally {\n    dispatch(setIsLoading(false));\n  }\n};\nexport const fetchLogout = () => async dispatch => {\n  try {\n    dispatch(setIsLoading(true));\n    let response = await api.logout();\n\n    if (response.resultCode === 0) {\n      dispatch(fetchAuthorizedData());\n    }\n  } catch (error) {\n    console.log(error);\n  } finally {\n    dispatch(setIsLoading(false));\n  }\n}; //type","map":{"version":3,"names":["api","axios","initialStateApp","isLoading","authorizedStatus","authorizedUser","id","email","login","authorizedProfileUser","photos","small","serverError","appReducer","state","action","type","payload","user","setIsLoading","setAuthorizedUser","setAuthorizedStatus","setAuthorizedProfileUser","setServerError","fetchAuthorizedData","dispatch","response","authorizedMe","resultCode","data","responseUser","getUserProfile","e","error","isAxiosError","setError","message","fetchAuthorization","password","setStatus","authorize","messages","console","log","fetchLogout","logout"],"sources":["G:/program/practica/react-practica/it-incubator/samurai-way-TS/src/redux/appReducer.ts"],"sourcesContent":["import {api, AuthorizedUserType, UserProfileType} from '../api/api';\r\nimport {AppThunk} from './store';\r\nimport axios, {AxiosError} from 'axios';\r\n\r\nlet initialStateApp = {\r\n    isLoading: false,\r\n    authorizedStatus: 'initialization' as StatusAuthorizedType,\r\n    authorizedUser: {\r\n        id: null,\r\n        email: null,\r\n        login: null\r\n    } as AuthorizedUserType,\r\n    authorizedProfileUser: {\r\n        photos: {small: null}\r\n    } as UserProfileType,\r\n    serverError: null as null | string\r\n}\r\n\r\nexport const appReducer = (state = initialStateApp, action: ActionAppReducerType): InitialStateTypeApp => {\r\n    switch (action.type) {\r\n        case 'APP/IS_LOADING':\r\n            return {\r\n                ...state,\r\n                isLoading: action.payload\r\n            }\r\n        case 'APP/SET_AUTHORIZED_USER':\r\n            return {\r\n                ...state,\r\n                authorizedUser: {...action.user},\r\n            }\r\n        case 'APP/SET_AUTHORIZED_PROFILE_USER':\r\n            return {\r\n                ...state,\r\n                authorizedProfileUser: action.payload\r\n            }\r\n        case 'APP/SET_AUTHORIZED_STATUS':\r\n            return {\r\n                ...state,\r\n                authorizedStatus: action.payload\r\n            }\r\n        case 'APP/SET-SERVER-ERROR':\r\n            return {...state, serverError: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//action\r\nexport const setIsLoading = (payload: boolean) => ({type: 'APP/IS_LOADING', payload} as const)\r\nexport const setAuthorizedUser = (user: AuthorizedUserType) => ({type: 'APP/SET_AUTHORIZED_USER', user} as const)\r\nexport const setAuthorizedStatus = (payload: StatusAuthorizedType) =>\r\n    ({type: 'APP/SET_AUTHORIZED_STATUS', payload} as const)\r\nexport const setAuthorizedProfileUser = (payload: UserProfileType) =>\r\n    ({type: 'APP/SET_AUTHORIZED_PROFILE_USER', payload} as const)\r\nexport const setServerError = (payload: string | null) => ({type: 'APP/SET-SERVER-ERROR', payload} as const)\r\n\r\n//thunk\r\nexport const fetchAuthorizedData = (): AppThunk => async dispatch => {\r\n    try {\r\n        dispatch(setIsLoading(true))\r\n\r\n        let response = await api.authorizedMe()\r\n        if (response.resultCode === 0) {\r\n            dispatch(setAuthorizedUser(response.data))\r\n            dispatch(setAuthorizedStatus('successfully'))\r\n            if (response.data.id) {\r\n                let responseUser = await api.getUserProfile(response.data.id)\r\n                dispatch(setAuthorizedProfileUser(responseUser))\r\n            }\r\n        } else {\r\n            dispatch(setAuthorizedStatus('fail'))\r\n        }\r\n    } catch (e) {\r\n        const error = e as Error | AxiosError\r\n        if (axios.isAxiosError(error)) {\r\n            const setError = error.response\r\n                ? (error.response.data as ({ error: string })).error\r\n                : error.message\r\n            dispatch(setServerError(setError))\r\n        } else {\r\n            dispatch(setServerError(error.message || 'some error'))\r\n        }\r\n    } finally {\r\n        dispatch(setIsLoading(false))\r\n    }\r\n}\r\nexport const fetchAuthorization = (email: string, password: string, setStatus: any): AppThunk => async dispatch => {\r\n    try {\r\n        dispatch(setIsLoading(true))\r\n        let response = await api.authorize(email, password)\r\n        if (response.resultCode === 0) {\r\n            dispatch(fetchAuthorizedData())\r\n        } else if (response.resultCode !== 0) {\r\n            setStatus(response.messages[0])\r\n        }\r\n    } catch (error) {\r\n        console.log(error)\r\n    } finally {\r\n        dispatch(setIsLoading(false))\r\n    }\r\n}\r\nexport const fetchLogout = (): AppThunk => async dispatch => {\r\n    try {\r\n        dispatch(setIsLoading(true))\r\n        let response = await api.logout()\r\n        if (response.resultCode === 0) {\r\n            dispatch(fetchAuthorizedData())\r\n        }\r\n    } catch (error) {\r\n        console.log(error)\r\n    } finally {\r\n        dispatch(setIsLoading(false))\r\n    }\r\n}\r\n\r\n//type\r\nexport type InitialStateTypeApp = typeof initialStateApp\r\nexport type StatusAuthorizedType = 'successfully' | 'initialization' | 'fail'\r\nexport type ActionAppReducerType =\r\n    ReturnType<typeof setIsLoading>\r\n    | ReturnType<typeof setAuthorizedUser>\r\n    | ReturnType<typeof setAuthorizedStatus>\r\n    | ReturnType<typeof setAuthorizedProfileUser>\r\n    | ReturnType<typeof setServerError>\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
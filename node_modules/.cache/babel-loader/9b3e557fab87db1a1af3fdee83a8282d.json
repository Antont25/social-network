{"ast":null,"code":"var _jsxFileName = \"G:\\\\program\\\\practica\\\\react-practica\\\\it-incubator\\\\samurai-way-TS\\\\src\\\\components\\\\login\\\\Login.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport style from './login.module.css';\nimport SuperButton from \"../SuperButton/SuperButton\";\nimport { Input } from \"../input/Input\";\nimport { useAppDispatch, useAppSelector } from \"../../redux/app/hooks\";\nimport { fetchAuthorization } from \"../../redux/authorizedReducer\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = yup.object({\n  email: yup.string().email('Enter a valid email').required('Email is required'),\n  password: yup.string().min(4, 'Password should be of minimum 8 characters length').required('Password is required')\n});\nexport const Login = () => {\n  _s();\n\n  debugger;\n  const dispatch = useAppDispatch();\n  const authorizedCode = useAppSelector(state => state.authorized.authorizedCode);\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (authorizedCode === 0) navigate('/');\n  }, [authorizedCode]);\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    validationSchema: validationSchema,\n    onSubmit: (values, _ref) => {\n      let {\n        setStatus\n      } = _ref;\n      dispatch(fetchAuthorization(values.email, values.password, setStatus));\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.loginBloc,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        id: \"email\",\n        name: \"email\",\n        label: \"Email\",\n        value: formik.values.email,\n        onChange: formik.handleChange,\n        error: formik.errors.email,\n        touched: formik.touched.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        id: \"password\",\n        name: \"password\",\n        label: \"Password\",\n        type: \"password\",\n        value: formik.values.password,\n        onChange: formik.handleChange,\n        error: formik.errors.password,\n        touched: formik.touched.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SuperButton, {\n        type: \"submit\",\n        className: style.loginBtn,\n        children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), formik.status && formik.status && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.errors,\n        children: formik.status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"44E4+B4fHpbdTt08+NtgET7Dk7I=\", false, function () {\n  return [useAppDispatch, useAppSelector, useNavigate, useFormik];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useEffect","useFormik","yup","style","SuperButton","Input","useAppDispatch","useAppSelector","fetchAuthorization","useNavigate","validationSchema","object","email","string","required","password","min","Login","dispatch","authorizedCode","state","authorized","navigate","formik","initialValues","onSubmit","values","setStatus","loginBloc","handleSubmit","handleChange","errors","touched","loginBtn","status"],"sources":["G:/program/practica/react-practica/it-incubator/samurai-way-TS/src/components/login/Login.tsx"],"sourcesContent":["import React, {useEffect} from 'react';\r\nimport {useFormik} from 'formik';\r\nimport * as yup from 'yup';\r\nimport style from './login.module.css'\r\nimport SuperButton from \"../SuperButton/SuperButton\";\r\nimport {Input} from \"../input/Input\";\r\nimport {useAppDispatch, useAppSelector} from \"../../redux/app/hooks\";\r\nimport {fetchAuthorization} from \"../../redux/authorizedReducer\";\r\nimport {Navigate, useNavigate} from \"react-router-dom\";\r\n\r\n\r\nconst validationSchema = yup.object({\r\n    email: yup\r\n        .string()\r\n        .email('Enter a valid email')\r\n        .required('Email is required'),\r\n    password: yup\r\n        .string()\r\n        .min(4, 'Password should be of minimum 8 characters length')\r\n        .required('Password is required'),\r\n});\r\n\r\nexport const Login = () => {debugger\r\n    const dispatch = useAppDispatch()\r\n    const authorizedCode = useAppSelector(state => state.authorized.authorizedCode)\r\n    const navigate = useNavigate()\r\n\r\n    useEffect(() => {\r\n        if (authorizedCode === 0) navigate('/')\r\n    }, [authorizedCode])\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n        },\r\n        validationSchema: validationSchema,\r\n        onSubmit: (values,{setStatus}) => {\r\n            dispatch(fetchAuthorization(values.email, values.password,setStatus));\r\n        },\r\n    });\r\n\r\n    return (\r\n        <div className={style.loginBloc}>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <Input id={\"email\"}\r\n                       name={\"email\"}\r\n                       label={\"Email\"}\r\n                       value={formik.values.email}\r\n                       onChange={formik.handleChange}\r\n                       error={formik.errors.email}\r\n                       touched={formik.touched.email}\r\n                />\r\n                <Input id=\"password\"\r\n                       name=\"password\"\r\n                       label=\"Password\"\r\n                       type=\"password\"\r\n                       value={formik.values.password}\r\n                       onChange={formik.handleChange}\r\n                       error={formik.errors.password}\r\n                       touched={formik.touched.password}\r\n                />\r\n                <SuperButton type=\"submit\" className={style.loginBtn}>\r\n                    Войти\r\n                </SuperButton>\r\n                {formik.status && formik.status && (\r\n                    <div className={style.errors}>{formik.status}</div>\r\n                )}\r\n            </form>\r\n        </div>\r\n    );\r\n};"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,SAAR,QAAwB,QAAxB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,SAAQC,KAAR,QAAoB,gBAApB;AACA,SAAQC,cAAR,EAAwBC,cAAxB,QAA6C,uBAA7C;AACA,SAAQC,kBAAR,QAAiC,+BAAjC;AACA,SAAkBC,WAAlB,QAAoC,kBAApC;;AAGA,MAAMC,gBAAgB,GAAGR,GAAG,CAACS,MAAJ,CAAW;EAChCC,KAAK,EAAEV,GAAG,CACLW,MADE,GAEFD,KAFE,CAEI,qBAFJ,EAGFE,QAHE,CAGO,mBAHP,CADyB;EAKhCC,QAAQ,EAAEb,GAAG,CACRW,MADK,GAELG,GAFK,CAED,CAFC,EAEE,mDAFF,EAGLF,QAHK,CAGI,sBAHJ;AALsB,CAAX,CAAzB;AAWA,OAAO,MAAMG,KAAK,GAAG,MAAM;EAAA;;EAAC;EACxB,MAAMC,QAAQ,GAAGZ,cAAc,EAA/B;EACA,MAAMa,cAAc,GAAGZ,cAAc,CAACa,KAAK,IAAIA,KAAK,CAACC,UAAN,CAAiBF,cAA3B,CAArC;EACA,MAAMG,QAAQ,GAAGb,WAAW,EAA5B;EAEAT,SAAS,CAAC,MAAM;IACZ,IAAImB,cAAc,KAAK,CAAvB,EAA0BG,QAAQ,CAAC,GAAD,CAAR;EAC7B,CAFQ,EAEN,CAACH,cAAD,CAFM,CAAT;EAIA,MAAMI,MAAM,GAAGtB,SAAS,CAAC;IACrBuB,aAAa,EAAE;MACXZ,KAAK,EAAE,EADI;MAEXG,QAAQ,EAAE;IAFC,CADM;IAKrBL,gBAAgB,EAAEA,gBALG;IAMrBe,QAAQ,EAAE,CAACC,MAAD,WAAwB;MAAA,IAAhB;QAACC;MAAD,CAAgB;MAC9BT,QAAQ,CAACV,kBAAkB,CAACkB,MAAM,CAACd,KAAR,EAAec,MAAM,CAACX,QAAtB,EAA+BY,SAA/B,CAAnB,CAAR;IACH;EARoB,CAAD,CAAxB;EAWA,oBACI;IAAK,SAAS,EAAExB,KAAK,CAACyB,SAAtB;IAAA,uBACI;MAAM,QAAQ,EAAEL,MAAM,CAACM,YAAvB;MAAA,wBACI,QAAC,KAAD;QAAO,EAAE,EAAE,OAAX;QACO,IAAI,EAAE,OADb;QAEO,KAAK,EAAE,OAFd;QAGO,KAAK,EAAEN,MAAM,CAACG,MAAP,CAAcd,KAH5B;QAIO,QAAQ,EAAEW,MAAM,CAACO,YAJxB;QAKO,KAAK,EAAEP,MAAM,CAACQ,MAAP,CAAcnB,KAL5B;QAMO,OAAO,EAAEW,MAAM,CAACS,OAAP,CAAepB;MAN/B;QAAA;QAAA;QAAA;MAAA,QADJ,eASI,QAAC,KAAD;QAAO,EAAE,EAAC,UAAV;QACO,IAAI,EAAC,UADZ;QAEO,KAAK,EAAC,UAFb;QAGO,IAAI,EAAC,UAHZ;QAIO,KAAK,EAAEW,MAAM,CAACG,MAAP,CAAcX,QAJ5B;QAKO,QAAQ,EAAEQ,MAAM,CAACO,YALxB;QAMO,KAAK,EAAEP,MAAM,CAACQ,MAAP,CAAchB,QAN5B;QAOO,OAAO,EAAEQ,MAAM,CAACS,OAAP,CAAejB;MAP/B;QAAA;QAAA;QAAA;MAAA,QATJ,eAkBI,QAAC,WAAD;QAAa,IAAI,EAAC,QAAlB;QAA2B,SAAS,EAAEZ,KAAK,CAAC8B,QAA5C;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAlBJ,EAqBKV,MAAM,CAACW,MAAP,IAAiBX,MAAM,CAACW,MAAxB,iBACG;QAAK,SAAS,EAAE/B,KAAK,CAAC4B,MAAtB;QAAA,UAA+BR,MAAM,CAACW;MAAtC;QAAA;QAAA;QAAA;MAAA,QAtBR;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AA6BH,CAjDM;;GAAMjB,K;UACQX,c,EACMC,c,EACNE,W,EAMFR,S;;;KATNgB,K"},"metadata":{},"sourceType":"module"}
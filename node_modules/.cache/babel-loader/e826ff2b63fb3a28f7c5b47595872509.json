{"ast":null,"code":"let initialState = {\n  menuIsShow: false\n};\nconst SHOW_MENU = 'SHOW_MENU';\nexport const headerReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SHOW_MENU:\n      return { ...state,\n        menuIsShow: !state.menuIsShow\n      };\n\n    default:\n      return state;\n  }\n};\nexport const showMenuHandler = () => ({\n  type: SHOW_MENU\n});","map":{"version":3,"names":["initialState","menuIsShow","SHOW_MENU","headerReducer","state","action","type","showMenuHandler"],"sources":["G:/program/practica/react-practica/it-incubator/samurai-way-TS/src/redux/headerReducer.ts"],"sourcesContent":["type InitialStateType = typeof initialState\r\ntype ShowMenuType = {\r\n    type: typeof SHOW_MENU\r\n}\r\nexport type ActionHeaderReducerType = ReturnType<typeof showMenuHandler>\r\n\r\nlet initialState = {\r\n    menuIsShow: false,\r\n}\r\n\r\nconst SHOW_MENU = 'SHOW_MENU'\r\n\r\nexport const headerReducer = (state = initialState, action: ActionHeaderReducerType): InitialStateType => {\r\n    switch (action.type) {\r\n        case SHOW_MENU:\r\n            return {\r\n                ...state,\r\n                menuIsShow: !state.menuIsShow\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const showMenuHandler = (): ShowMenuType => ({type: SHOW_MENU})\r\n\r\n"],"mappings":"AAMA,IAAIA,YAAY,GAAG;EACfC,UAAU,EAAE;AADG,CAAnB;AAIA,MAAMC,SAAS,GAAG,WAAlB;AAEA,OAAO,MAAMC,aAAa,GAAG,YAA6E;EAAA,IAA5EC,KAA4E,uEAApEJ,YAAoE;EAAA,IAAtDK,MAAsD;;EACtG,QAAQA,MAAM,CAACC,IAAf;IACI,KAAKJ,SAAL;MACI,OAAO,EACH,GAAGE,KADA;QAEHH,UAAU,EAAE,CAACG,KAAK,CAACH;MAFhB,CAAP;;IAIJ;MACI,OAAOG,KAAP;EAPR;AASH,CAVM;AAaP,OAAO,MAAMG,eAAe,GAAG,OAAqB;EAACD,IAAI,EAAEJ;AAAP,CAArB,CAAxB"},"metadata":{},"sourceType":"module"}
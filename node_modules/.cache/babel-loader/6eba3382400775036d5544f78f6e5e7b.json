{"ast":null,"code":"import _regeneratorRuntime from\"C:/program/samurai-way-TS/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/program/samurai-way-TS/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import axios from'axios';var instance=axios.create({baseURL:'https://social-network.samuraijs.com/api/1.0/',withCredentials:true,headers:{'API-KEY':'b68e1396-946f-405d-92ed-906f9f26a9d8'}});export var api={getUser:function getUser(currentPage){return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var response;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return instance.get(\"users?page=\".concat(currentPage));case 2:response=_context.sent;return _context.abrupt(\"return\",response.data);case 4:case\"end\":return _context.stop();}}},_callee);}))();},getUserProfile:function getUserProfile(paramsURL){return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){var response;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return instance.get(\"profile/\".concat(paramsURL));case 2:response=_context2.sent;return _context2.abrupt(\"return\",response.data);case 4:case\"end\":return _context2.stop();}}},_callee2);}))();},authorizedMe:function authorizedMe(){return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(){var response;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return instance.get(\"auth/me\");case 2:response=_context3.sent;return _context3.abrupt(\"return\",response.data);case 4:case\"end\":return _context3.stop();}}},_callee3);}))();},unFollowUser:function unFollowUser(usersId){return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(){var response;return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return instance.delete(\"follow/\".concat(usersId));case 2:response=_context4.sent;return _context4.abrupt(\"return\",response.data);case 4:case\"end\":return _context4.stop();}}},_callee4);}))();},followUser:function followUser(usersId){return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(){var response;return _regeneratorRuntime().wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.next=2;return instance.post(\"follow/\".concat(usersId));case 2:response=_context5.sent;return _context5.abrupt(\"return\",response.data);case 4:case\"end\":return _context5.stop();}}},_callee5);}))();},statusUpdates:function statusUpdates(newStatus){return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6(){var response;return _regeneratorRuntime().wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:_context6.next=2;return instance.put(\"profile/status\",{status:newStatus});case 2:response=_context6.sent;return _context6.abrupt(\"return\",response.data);case 4:case\"end\":return _context6.stop();}}},_callee6);}))();},getStatusUser:function getStatusUser(userId){return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee7(){var response;return _regeneratorRuntime().wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:_context7.next=2;return instance.get(\"profile/status/\".concat(userId));case 2:response=_context7.sent;return _context7.abrupt(\"return\",response.data);case 4:case\"end\":return _context7.stop();}}},_callee7);}))();},authorize:function authorize(email,password){return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee8(){var response;return _regeneratorRuntime().wrap(function _callee8$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:_context8.next=2;return instance.post(\"auth/login\",{email:email,password:password});case 2:response=_context8.sent;return _context8.abrupt(\"return\",response.data);case 4:case\"end\":return _context8.stop();}}},_callee8);}))();},logout:function logout(){return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee9(){var response;return _regeneratorRuntime().wrap(function _callee9$(_context9){while(1){switch(_context9.prev=_context9.next){case 0:_context9.next=2;return instance.delete(\"auth/login\");case 2:response=_context9.sent;return _context9.abrupt(\"return\",response.data);case 4:case\"end\":return _context9.stop();}}},_callee9);}))();},savePhoto:function savePhoto(image){return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee10(){var bodyFormData,response;return _regeneratorRuntime().wrap(function _callee10$(_context10){while(1){switch(_context10.prev=_context10.next){case 0:bodyFormData=new FormData();bodyFormData.append('image',image);_context10.next=4;return instance.put(\"profile/photo\",bodyFormData,{headers:{'Content-Type':'multipart/form-data'}});case 4:response=_context10.sent;return _context10.abrupt(\"return\",response.data);case 6:case\"end\":return _context10.stop();}}},_callee10);}))();},updateContacts:function updateContacts(data){return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee11(){var response;return _regeneratorRuntime().wrap(function _callee11$(_context11){while(1){switch(_context11.prev=_context11.next){case 0:_context11.next=2;return instance.put(\"profile\",data);case 2:response=_context11.sent;return _context11.abrupt(\"return\",response.data);case 4:case\"end\":return _context11.stop();}}},_callee11);}))();}};//type","map":{"version":3,"names":["axios","instance","create","baseURL","withCredentials","headers","api","getUser","currentPage","get","response","data","getUserProfile","paramsURL","authorizedMe","unFollowUser","usersId","delete","followUser","post","statusUpdates","newStatus","put","status","getStatusUser","userId","authorize","email","password","logout","savePhoto","image","bodyFormData","FormData","append","updateContacts"],"sources":["C:/program/samurai-way-TS/src/api/api.ts"],"sourcesContent":["import axios from 'axios';\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {\r\n        'API-KEY': 'b68e1396-946f-405d-92ed-906f9f26a9d8'\r\n    }\r\n})\r\n\r\n\r\nexport const api = {\r\n    async getUser(currentPage: number) {\r\n        const response = await instance.get<FetchUserType>(`users?page=${currentPage}`)\r\n        return response.data\r\n    },\r\n    async getUserProfile(paramsURL: number) {\r\n        const response = await instance.get<UserProfileType>(`profile/${paramsURL}`)\r\n        return response.data\r\n    },\r\n    async authorizedMe() {\r\n        const response = await instance.get<ResponseType<AuthorizedUserType>>(`auth/me`)\r\n        return response.data\r\n    },\r\n    async unFollowUser(usersId: number) {\r\n        const response = await instance.delete<ResponseType>(`follow/${usersId}`)\r\n        return response.data\r\n    },\r\n    async followUser(usersId: number) {\r\n        const response = await instance.post<ResponseType>(`follow/${usersId}`)\r\n        return response.data\r\n    },\r\n    async statusUpdates(newStatus: string) {\r\n        const response = await instance.put<ResponseType>(`profile/status`, {status: newStatus})\r\n        return response.data\r\n    },\r\n    async getStatusUser(userId: number) {\r\n        const response = await instance.get<string | null>(`profile/status/${userId}`)\r\n        return response.data\r\n    },\r\n    async authorize(email: string, password: string) {\r\n        const response = await instance.post<ResponseType<{ id: number }>>(`auth/login`, {email, password})\r\n        return response.data\r\n    },\r\n    async logout() {\r\n        const response = await instance.delete<ResponseType>(`auth/login`)\r\n        return response.data\r\n    },\r\n    async savePhoto(image: string) {\r\n        const bodyFormData = new FormData();\r\n        bodyFormData.append('image', image)\r\n\r\n        const response = await instance.put<ResponseType<PhotosTypeResponse>>(`profile/photo`, bodyFormData, {\r\n                headers: {'Content-Type': 'multipart/form-data'}\r\n            }\r\n            ,)\r\n        return response.data\r\n    },\r\n    async updateContacts(data: UpdateDateType) {\r\n        const response = await instance.put<ResponseType>(`profile`, data)\r\n        return response.data\r\n    },\r\n\r\n}\r\n\r\n//type\r\nexport type PhotosTypeResponse = {\r\n    photos: PhotosType\r\n\r\n}\r\nexport type PhotosType = {\r\n    small: string\r\n    large: string\r\n}\r\nexport type ResponseType<T = {}> = {\r\n    resultCode: number\r\n    messages: string[]\r\n    data: T\r\n}\r\nexport type AuthorizedUserType = {\r\n    id: null | number\r\n    email: null | string\r\n    login: null | string\r\n\r\n}\r\nexport type UpdateDateType = {\r\n    aboutMe: string | null\r\n    contacts: ContactsType,\r\n    lookingForAJob?: boolean\r\n    lookingForAJobDescription: string | null\r\n    fullName: string | null\r\n    userId?: number\r\n}\r\nexport type ContactsType = {\r\n    facebook: string | null\r\n    website: string | null\r\n    vk: string | null\r\n    twitter: string | null\r\n    instagram: string | null\r\n    youtube: string | null,\r\n    github: string | null\r\n    mainLink: string | null\r\n};\r\nexport type UserProfileType = {\r\n    aboutMe: string | null\r\n    contacts: ContactsType,\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string | null\r\n    fullName: string | null\r\n    userId: number\r\n    photos: {\r\n        small: string | null\r\n        large: string | null\r\n    }\r\n}\r\nexport type UserType = {\r\n    name: string\r\n    id: number\r\n    uniqueUrlName: null\r\n    photos: {\r\n        small: null | string\r\n        large: null | string\r\n    },\r\n    status: null | string\r\n    followed: boolean\r\n}\r\nexport type FetchUserType = {\r\n    items: Array<UserType>\r\n    totalCount: number\r\n    error: null\r\n}"],"mappings":"8OAAA,MAAOA,MAAP,KAAkB,OAAlB,CAGA,GAAMC,SAAQ,CAAGD,KAAK,CAACE,MAAN,CAAa,CAC1BC,OAAO,CAAE,+CADiB,CAE1BC,eAAe,CAAE,IAFS,CAG1BC,OAAO,CAAE,CACL,UAAW,sCADN,CAHiB,CAAb,CAAjB,CASA,MAAO,IAAMC,IAAG,CAAG,CACTC,OADS,kBACDC,WADC,CACoB,0OACRP,SAAQ,CAACQ,GAAT,sBAA0CD,WAA1C,EADQ,QACzBE,QADyB,+CAExBA,QAAQ,CAACC,IAFe,6DAGlC,CAJc,CAKTC,cALS,yBAKMC,SALN,CAKyB,gPACbZ,SAAQ,CAACQ,GAAT,mBAAyCI,SAAzC,EADa,QAC9BH,QAD8B,iDAE7BA,QAAQ,CAACC,IAFoB,+DAGvC,CARc,CASTG,YATS,wBASM,gPACMb,SAAQ,CAACQ,GAAT,WADN,QACXC,QADW,iDAEVA,QAAQ,CAACC,IAFC,+DAGpB,CAZc,CAaTI,YAbS,uBAaIC,OAbJ,CAaqB,gPACTf,SAAQ,CAACgB,MAAT,kBAAwCD,OAAxC,EADS,QAC1BN,QAD0B,iDAEzBA,QAAQ,CAACC,IAFgB,+DAGnC,CAhBc,CAiBTO,UAjBS,qBAiBEF,OAjBF,CAiBmB,gPACPf,SAAQ,CAACkB,IAAT,kBAAsCH,OAAtC,EADO,QACxBN,QADwB,iDAEvBA,QAAQ,CAACC,IAFc,+DAGjC,CApBc,CAqBTS,aArBS,wBAqBKC,SArBL,CAqBwB,gPACZpB,SAAQ,CAACqB,GAAT,kBAA6C,CAACC,MAAM,CAAEF,SAAT,CAA7C,CADY,QAC7BX,QAD6B,iDAE5BA,QAAQ,CAACC,IAFmB,+DAGtC,CAxBc,CAyBTa,aAzBS,wBAyBKC,MAzBL,CAyBqB,gPACTxB,SAAQ,CAACQ,GAAT,0BAA8CgB,MAA9C,EADS,QAC1Bf,QAD0B,iDAEzBA,QAAQ,CAACC,IAFgB,+DAGnC,CA5Bc,CA6BTe,SA7BS,oBA6BCC,KA7BD,CA6BgBC,QA7BhB,CA6BkC,gPACtB3B,SAAQ,CAACkB,IAAT,cAA0D,CAACQ,KAAK,CAALA,KAAD,CAAQC,QAAQ,CAARA,QAAR,CAA1D,CADsB,QACvClB,QADuC,iDAEtCA,QAAQ,CAACC,IAF6B,+DAGhD,CAhCc,CAiCTkB,MAjCS,kBAiCA,gPACY5B,SAAQ,CAACgB,MAAT,cADZ,QACLP,QADK,iDAEJA,QAAQ,CAACC,IAFL,+DAGd,CApCc,CAqCTmB,SArCS,oBAqCCC,KArCD,CAqCgB,2OACrBC,YADqB,CACN,GAAIC,SAAJ,EADM,CAE3BD,YAAY,CAACE,MAAb,CAAoB,OAApB,CAA6BH,KAA7B,EAF2B,wBAIJ9B,SAAQ,CAACqB,GAAT,iBAAgEU,YAAhE,CAA8E,CAC7F3B,OAAO,CAAE,CAAC,eAAgB,qBAAjB,CADoF,CAA9E,CAJI,QAIrBK,QAJqB,mDAQpBA,QAAQ,CAACC,IARW,iEAS9B,CA9Cc,CA+CTwB,cA/CS,yBA+CMxB,IA/CN,CA+C4B,sPAChBV,SAAQ,CAACqB,GAAT,WAAsCX,IAAtC,CADgB,QACjCD,QADiC,mDAEhCA,QAAQ,CAACC,IAFuB,iEAG1C,CAlDc,CAAZ,CAsDP"},"metadata":{},"sourceType":"module"}
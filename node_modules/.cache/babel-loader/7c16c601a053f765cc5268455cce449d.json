{"ast":null,"code":"var _jsxFileName = \"G:\\\\program\\\\practica\\\\react-practica\\\\it-incubator\\\\samurai-way-TS\\\\src\\\\pages\\\\Dialogs.tsx\";\nimport React from 'react';\nimport style from '../components/Dialogs/Dialogs.module.css';\nimport Message from \"../components/Dialogs/Messages/Message\";\nimport { DialogItems } from \"../components/Dialogs/DialogItems\";\nimport { Textarea } from \"../common/textarea/Textarea\";\nimport { connect } from \"react-redux\";\nimport { addMessage, newMessageText } from \"../redux/dialogsReducer\";\nimport { withAuthRedirect } from \"../utils/hoc/withAuthRedirect\";\nimport { AddText } from \"../common/addText/AddText\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dialogs = props => {\n  function addMessagesHandler() {\n    props.addMessage();\n    props.newMessageText('');\n  }\n\n  function onChangeMessagesHandler(newText) {\n    props.newMessageText(newText);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.dialogs,\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: props.dialogs.map(item => /*#__PURE__*/_jsxDEV(DialogItems, {\n        name: item.name,\n        id: `${item.id}`\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 44\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: style.dialogItem,\n      children: [/*#__PURE__*/_jsxDEV(AddText, {\n        newPostText: props.textMessages,\n        addPostState: addMessagesHandler,\n        newTextPost: onChangeMessagesHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Textarea, {\n        text: props.textMessages,\n        onChangeHandler: onChangeMessagesHandler,\n        add: addMessagesHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), props.massages.map(item => /*#__PURE__*/_jsxDEV(Message, {\n        message: item.message\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 45\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Dialogs;\n\nconst mapStateToProps = state => {\n  return {\n    textMessages: state.dialogsPage.newTextMessages,\n    dialogs: state.dialogsPage.dialogs,\n    massages: state.dialogsPage.messages\n  };\n};\n\nexport default withAuthRedirect(connect(mapStateToProps, {\n  addMessage,\n  newMessageText\n})(Dialogs));\n\nvar _c;\n\n$RefreshReg$(_c, \"Dialogs\");","map":{"version":3,"names":["React","style","Message","DialogItems","Textarea","connect","addMessage","newMessageText","withAuthRedirect","AddText","Dialogs","props","addMessagesHandler","onChangeMessagesHandler","newText","dialogs","map","item","name","id","dialogItem","textMessages","massages","message","mapStateToProps","state","dialogsPage","newTextMessages","messages"],"sources":["G:/program/practica/react-practica/it-incubator/samurai-way-TS/src/pages/Dialogs.tsx"],"sourcesContent":["import React from 'react';\r\nimport style from '../components/Dialogs/Dialogs.module.css'\r\nimport Message from \"../components/Dialogs/Messages/Message\";\r\nimport {DialogItems} from \"../components/Dialogs/DialogItems\";\r\nimport {Textarea} from \"../common/textarea/Textarea\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStoreType} from \"../redux/store\";\r\nimport {addMessage, DialogsType, MessagesType, newMessageText} from \"../redux/dialogsReducer\";\r\nimport {withAuthRedirect} from \"../utils/hoc/withAuthRedirect\";\r\nimport {AddText} from \"../common/addText/AddText\";\r\n\r\n\r\ntype DialogsPropsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\n\r\ntype MapStateToPropsType = {\r\n    dialogs: Array<DialogsType>\r\n    massages: Array<MessagesType>\r\n    textMessages: string\r\n}\r\ntype MapDispatchToPropsType = {\r\n    newMessageText: (newText: string) => void\r\n    addMessage: () => void\r\n}\r\n\r\nconst Dialogs = (props: DialogsPropsType) => {\r\n\r\n\r\n    function addMessagesHandler() {\r\n        props.addMessage()\r\n        props.newMessageText('')\r\n    }\r\n\r\n    function onChangeMessagesHandler(newText: string) {\r\n        props.newMessageText(newText)\r\n    }\r\n\r\n    return (\r\n        <div className={style.dialogs}>\r\n            <ul>\r\n                {props.dialogs.map(item => <DialogItems key={item.id} name={item.name} id={`${item.id}`}/>)}\r\n\r\n            </ul>\r\n\r\n            <ul className={style.dialogItem}>\r\n                <AddText newPostText={props.textMessages}\r\n                         addPostState={addMessagesHandler}\r\n                         newTextPost={onChangeMessagesHandler}\r\n                />\r\n                <Textarea text={props.textMessages}\r\n                          onChangeHandler={onChangeMessagesHandler}\r\n                          add={addMessagesHandler}\r\n                />\r\n\r\n                {props.massages.map(item => <Message key={item.id} message={item.message}/>)}\r\n\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: AppStoreType): MapStateToPropsType => {\r\n    return {\r\n        textMessages: state.dialogsPage.newTextMessages,\r\n        dialogs: state.dialogsPage.dialogs,\r\n        massages: state.dialogsPage.messages\r\n    }\r\n}\r\n\r\n\r\nexport default withAuthRedirect(connect(mapStateToProps, {addMessage, newMessageText})(Dialogs));"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,0CAAlB;AACA,OAAOC,OAAP,MAAoB,wCAApB;AACA,SAAQC,WAAR,QAA0B,mCAA1B;AACA,SAAQC,QAAR,QAAuB,6BAAvB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,SAAQC,UAAR,EAA+CC,cAA/C,QAAoE,yBAApE;AACA,SAAQC,gBAAR,QAA+B,+BAA/B;AACA,SAAQC,OAAR,QAAsB,2BAAtB;;;AAgBA,MAAMC,OAAO,GAAIC,KAAD,IAA6B;EAGzC,SAASC,kBAAT,GAA8B;IAC1BD,KAAK,CAACL,UAAN;IACAK,KAAK,CAACJ,cAAN,CAAqB,EAArB;EACH;;EAED,SAASM,uBAAT,CAAiCC,OAAjC,EAAkD;IAC9CH,KAAK,CAACJ,cAAN,CAAqBO,OAArB;EACH;;EAED,oBACI;IAAK,SAAS,EAAEb,KAAK,CAACc,OAAtB;IAAA,wBACI;MAAA,UACKJ,KAAK,CAACI,OAAN,CAAcC,GAAd,CAAkBC,IAAI,iBAAI,QAAC,WAAD;QAA2B,IAAI,EAAEA,IAAI,CAACC,IAAtC;QAA4C,EAAE,EAAG,GAAED,IAAI,CAACE,EAAG;MAA3D,GAAkBF,IAAI,CAACE,EAAvB;QAAA;QAAA;QAAA;MAAA,QAA1B;IADL;MAAA;MAAA;MAAA;IAAA,QADJ,eAMI;MAAI,SAAS,EAAElB,KAAK,CAACmB,UAArB;MAAA,wBACI,QAAC,OAAD;QAAS,WAAW,EAAET,KAAK,CAACU,YAA5B;QACS,YAAY,EAAET,kBADvB;QAES,WAAW,EAAEC;MAFtB;QAAA;QAAA;QAAA;MAAA,QADJ,eAKI,QAAC,QAAD;QAAU,IAAI,EAAEF,KAAK,CAACU,YAAtB;QACU,eAAe,EAAER,uBAD3B;QAEU,GAAG,EAAED;MAFf;QAAA;QAAA;QAAA;MAAA,QALJ,EAUKD,KAAK,CAACW,QAAN,CAAeN,GAAf,CAAmBC,IAAI,iBAAI,QAAC,OAAD;QAAuB,OAAO,EAAEA,IAAI,CAACM;MAArC,GAAcN,IAAI,CAACE,EAAnB;QAAA;QAAA;QAAA;MAAA,QAA3B,CAVL;IAAA;MAAA;MAAA;MAAA;IAAA,QANJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAsBH,CAlCD;;KAAMT,O;;AAoCN,MAAMc,eAAe,GAAIC,KAAD,IAA8C;EAClE,OAAO;IACHJ,YAAY,EAAEI,KAAK,CAACC,WAAN,CAAkBC,eAD7B;IAEHZ,OAAO,EAAEU,KAAK,CAACC,WAAN,CAAkBX,OAFxB;IAGHO,QAAQ,EAAEG,KAAK,CAACC,WAAN,CAAkBE;EAHzB,CAAP;AAKH,CAND;;AASA,eAAepB,gBAAgB,CAACH,OAAO,CAACmB,eAAD,EAAkB;EAAClB,UAAD;EAAaC;AAAb,CAAlB,CAAP,CAAuDG,OAAvD,CAAD,CAA/B"},"metadata":{},"sourceType":"module"}
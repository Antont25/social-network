{"ast":null,"code":"import { api } from '../api/api';\nimport { errorFromStatusCodeOrApplication } from '../utils/error-utils';\nlet initialStateApp = {\n  isLoading: false,\n  authorizedStatus: 'initialization',\n  authorizedUser: {\n    id: null,\n    email: null,\n    login: null\n  },\n  authorizedProfileUser: {\n    photos: {\n      small: null\n    }\n  },\n  serverError: null\n};\nexport const appReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialStateApp;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'APP/IS_LOADING':\n      return { ...state,\n        isLoading: action.payload\n      };\n\n    case 'APP/SET_AUTHORIZED_USER':\n      return { ...state,\n        authorizedUser: { ...action.user\n        }\n      };\n\n    case 'APP/SET_AUTHORIZED_PROFILE_USER':\n      return { ...state,\n        authorizedProfileUser: action.payload\n      };\n\n    case 'APP/SET_AUTHORIZED_STATUS':\n      return { ...state,\n        authorizedStatus: action.payload\n      };\n\n    case 'APP/SET-SERVER-ERROR':\n      return { ...state,\n        serverError: action.payload\n      };\n\n    case 'PROFILE/UPDATE_AVATAR_SUCCESS':\n      {\n        debugger;\n        return { ...state,\n          authorizedProfileUser: { ...state.authorizedProfileUser,\n            photos: {\n              small: action.payload.small,\n              large: action.payload.large\n            }\n          }\n        };\n      }\n\n    default:\n      return state;\n  }\n}; //action\n\nexport const setIsLoading = payload => ({\n  type: 'APP/IS_LOADING',\n  payload\n});\nexport const setAuthorizedUser = user => ({\n  type: 'APP/SET_AUTHORIZED_USER',\n  user\n});\nexport const setAuthorizedStatus = payload => ({\n  type: 'APP/SET_AUTHORIZED_STATUS',\n  payload\n});\nexport const setAuthorizedProfileUser = payload => ({\n  type: 'APP/SET_AUTHORIZED_PROFILE_USER',\n  payload\n});\nexport const setServerError = payload => ({\n  type: 'APP/SET-SERVER-ERROR',\n  payload\n}); //thunk\n\nexport const fetchAuthorizedData = () => async dispatch => {\n  try {\n    dispatch(setIsLoading(true));\n    let response = await api.authorizedMe();\n\n    if (response.resultCode === 0) {\n      dispatch(setAuthorizedUser(response.data));\n      dispatch(setAuthorizedStatus('successfully'));\n\n      if (response.data.id) {\n        let responseUser = await api.getUserProfile(response.data.id);\n        dispatch(setAuthorizedProfileUser(responseUser));\n      }\n    } else {\n      dispatch(setAuthorizedStatus('fail'));\n    }\n  } catch (e) {\n    const error = e;\n    errorFromStatusCodeOrApplication(error, dispatch);\n  } finally {\n    dispatch(setIsLoading(false));\n  }\n};\nexport const fetchAuthorization = (email, password, setStatus) => async dispatch => {\n  try {\n    dispatch(setIsLoading(true));\n    let response = await api.authorize(email, password);\n\n    if (response.resultCode === 0) {\n      dispatch(fetchAuthorizedData());\n    } else if (response.resultCode !== 0) {\n      setStatus(response.messages[0]);\n    }\n  } catch (e) {\n    const error = e;\n    errorFromStatusCodeOrApplication(error, dispatch);\n  } finally {\n    dispatch(setIsLoading(false));\n  }\n};\nexport const fetchLogout = () => async dispatch => {\n  try {\n    dispatch(setIsLoading(true));\n    let response = await api.logout();\n\n    if (response.resultCode === 0) {\n      dispatch(fetchAuthorizedData());\n    }\n  } catch (e) {\n    const error = e;\n    errorFromStatusCodeOrApplication(error, dispatch);\n  } finally {\n    dispatch(setIsLoading(false));\n  }\n}; //type","map":{"version":3,"names":["api","errorFromStatusCodeOrApplication","initialStateApp","isLoading","authorizedStatus","authorizedUser","id","email","login","authorizedProfileUser","photos","small","serverError","appReducer","state","action","type","payload","user","large","setIsLoading","setAuthorizedUser","setAuthorizedStatus","setAuthorizedProfileUser","setServerError","fetchAuthorizedData","dispatch","response","authorizedMe","resultCode","data","responseUser","getUserProfile","e","error","fetchAuthorization","password","setStatus","authorize","messages","fetchLogout","logout"],"sources":["C:/program/samurai-way-TS/src/redux/appReducer.ts"],"sourcesContent":["import {api, AuthorizedUserType, UserProfileType} from '../api/api';\r\nimport {AppThunk} from './store';\r\nimport axios, {AxiosError} from 'axios';\r\nimport {errorFromStatusCodeOrApplication} from '../utils/error-utils';\r\nimport {updateAvatarSuccess} from './profileReducer';\r\n\r\nlet initialStateApp = {\r\n    isLoading: false,\r\n    authorizedStatus: 'initialization' as StatusAuthorizedType,\r\n    authorizedUser: {\r\n        id: null,\r\n        email: null,\r\n        login: null\r\n    } as AuthorizedUserType,\r\n    authorizedProfileUser: {\r\n        photos: {small: null}\r\n    } as UserProfileType,\r\n    serverError: null as null | string\r\n}\r\n\r\nexport const appReducer = (state = initialStateApp, action: ActionAppReducerType): InitialStateTypeApp => {\r\n    switch (action.type) {\r\n        case 'APP/IS_LOADING':\r\n            return {\r\n                ...state,\r\n                isLoading: action.payload\r\n            }\r\n        case 'APP/SET_AUTHORIZED_USER':\r\n            return {\r\n                ...state,\r\n                authorizedUser: {...action.user},\r\n            }\r\n        case 'APP/SET_AUTHORIZED_PROFILE_USER':\r\n            return {\r\n                ...state,\r\n                authorizedProfileUser: action.payload\r\n            }\r\n        case 'APP/SET_AUTHORIZED_STATUS':\r\n            return {\r\n                ...state,\r\n                authorizedStatus: action.payload\r\n            }\r\n        case 'APP/SET-SERVER-ERROR':\r\n            return {...state, serverError: action.payload}\r\n        case 'PROFILE/UPDATE_AVATAR_SUCCESS': {\r\n            debugger\r\n            return {\r\n                ...state,\r\n                authorizedProfileUser: {\r\n                    ...state.authorizedProfileUser,\r\n                    photos: {small: action.payload.small, large: action.payload.large}\r\n                }\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//action\r\nexport const setIsLoading = (payload: boolean) => ({type: 'APP/IS_LOADING', payload} as const)\r\nexport const setAuthorizedUser = (user: AuthorizedUserType) => ({type: 'APP/SET_AUTHORIZED_USER', user} as const)\r\nexport const setAuthorizedStatus = (payload: StatusAuthorizedType) =>\r\n    ({type: 'APP/SET_AUTHORIZED_STATUS', payload} as const)\r\nexport const setAuthorizedProfileUser = (payload: UserProfileType) =>\r\n    ({type: 'APP/SET_AUTHORIZED_PROFILE_USER', payload} as const)\r\nexport const setServerError = (payload: string | null) => ({type: 'APP/SET-SERVER-ERROR', payload} as const)\r\n\r\n//thunk\r\nexport const fetchAuthorizedData = (): AppThunk => async dispatch => {\r\n    try {\r\n        dispatch(setIsLoading(true))\r\n\r\n        let response = await api.authorizedMe()\r\n        if (response.resultCode === 0) {\r\n            dispatch(setAuthorizedUser(response.data))\r\n            dispatch(setAuthorizedStatus('successfully'))\r\n            if (response.data.id) {\r\n                let responseUser = await api.getUserProfile(response.data.id)\r\n                dispatch(setAuthorizedProfileUser(responseUser))\r\n            }\r\n        } else {\r\n            dispatch(setAuthorizedStatus('fail'))\r\n        }\r\n    } catch (e) {\r\n        const error = e as Error | AxiosError\r\n        errorFromStatusCodeOrApplication(error, dispatch)\r\n    } finally {\r\n        dispatch(setIsLoading(false))\r\n    }\r\n}\r\nexport const fetchAuthorization = (email: string, password: string, setStatus: any): AppThunk => async dispatch => {\r\n    try {\r\n        dispatch(setIsLoading(true))\r\n        let response = await api.authorize(email, password)\r\n        if (response.resultCode === 0) {\r\n            dispatch(fetchAuthorizedData())\r\n        } else if (response.resultCode !== 0) {\r\n            setStatus(response.messages[0])\r\n        }\r\n    } catch (e) {\r\n        const error = e as Error | AxiosError\r\n        errorFromStatusCodeOrApplication(error, dispatch)\r\n    } finally {\r\n        dispatch(setIsLoading(false))\r\n    }\r\n}\r\nexport const fetchLogout = (): AppThunk => async dispatch => {\r\n    try {\r\n        dispatch(setIsLoading(true))\r\n        let response = await api.logout()\r\n        if (response.resultCode === 0) {\r\n            dispatch(fetchAuthorizedData())\r\n        }\r\n    } catch (e) {\r\n        const error = e as Error | AxiosError\r\n        errorFromStatusCodeOrApplication(error, dispatch)\r\n    } finally {\r\n        dispatch(setIsLoading(false))\r\n    }\r\n}\r\n\r\n//type\r\nexport type InitialStateTypeApp = typeof initialStateApp\r\nexport type StatusAuthorizedType = 'successfully' | 'initialization' | 'fail'\r\nexport type ActionAppReducerType =\r\n    ReturnType<typeof setIsLoading>\r\n    | ReturnType<typeof setAuthorizedUser>\r\n    | ReturnType<typeof setAuthorizedStatus>\r\n    | ReturnType<typeof setAuthorizedProfileUser>\r\n    | ReturnType<typeof setServerError>\r\n    | ReturnType<typeof updateAvatarSuccess>\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import axios from 'axios';\nimport { setServerError } from '../redux/appReducer';\nexport const errorFromStatusCodeOrApplication = (error, dispatch) => {\n  if (axios.isAxiosError(error)) {\n    const setError = error.response ? error.response.data.error : error.message;\n    dispatch(setServerError(setError));\n  } else {\n    dispatch(setServerError(error.message || 'some error'));\n  }\n};","map":{"version":3,"names":["axios","setServerError","errorFromStatusCodeOrApplication","error","dispatch","isAxiosError","setError","response","data","message"],"sources":["G:/program/practica/react-practica/it-incubator/samurai-way-TS/src/utils/error-utils.ts"],"sourcesContent":["import axios, {AxiosError} from 'axios';\r\nimport {setServerError} from '../redux/appReducer';\r\nimport {Dispatch} from 'redux';\r\n\r\nexport const errorFromStatusCodeOrApplication = (error: Error | AxiosError, dispatch: Dispatch) => {\r\n    if (axios.isAxiosError(error)) {\r\n        const setError = error.response\r\n            ? (error.response.data as ({ error: string })).error\r\n            : error.message\r\n        dispatch(setServerError(setError))\r\n    } else {\r\n        dispatch(setServerError(error.message || 'some error'))\r\n    }\r\n}"],"mappings":"AAAA,OAAOA,KAAP,MAAgC,OAAhC;AACA,SAAQC,cAAR,QAA6B,qBAA7B;AAGA,OAAO,MAAMC,gCAAgC,GAAG,CAACC,KAAD,EAA4BC,QAA5B,KAAmD;EAC/F,IAAIJ,KAAK,CAACK,YAAN,CAAmBF,KAAnB,CAAJ,EAA+B;IAC3B,MAAMG,QAAQ,GAAGH,KAAK,CAACI,QAAN,GACVJ,KAAK,CAACI,QAAN,CAAeC,IAAhB,CAA6CL,KADlC,GAEXA,KAAK,CAACM,OAFZ;IAGAL,QAAQ,CAACH,cAAc,CAACK,QAAD,CAAf,CAAR;EACH,CALD,MAKO;IACHF,QAAQ,CAACH,cAAc,CAACE,KAAK,CAACM,OAAN,IAAiB,YAAlB,CAAf,CAAR;EACH;AACJ,CATM"},"metadata":{},"sourceType":"module"}
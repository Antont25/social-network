{"ast":null,"code":"var _jsxFileName = \"G:\\\\program\\\\practica\\\\react-practica\\\\it-incubator\\\\samurai-way-TS\\\\src\\\\components\\\\login\\\\Login.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport style from './login.module.css';\nimport Button from \"../common/button/Button\";\nimport { Input } from \"../common/input/Input\";\nimport { useAppDispatch, useAppSelector } from \"../../utils/hooks/hooks\";\nimport { fetchAuthorization } from \"../../redux/authorizedReducer\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = yup.object({\n  email: yup.string().email('Enter a valid email').required('Email is required'),\n  password: yup.string().min(4, 'Password should be of minimum 4 characters length').required('Password is required')\n});\nexport const Login = () => {\n  _s();\n\n  const dispatch = useAppDispatch();\n  const authorizedCode = useAppSelector(state => state.authorized.authorizedCode);\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (authorizedCode === 0) navigate('/');\n  }, [authorizedCode]);\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    validationSchema: validationSchema,\n    onSubmit: (values, _ref) => {\n      let {\n        setStatus\n      } = _ref;\n      dispatch(fetchAuthorization(values.email, values.password, setStatus));\n    }\n  });\n  const disabled = formik.touched.password && formik.touched.email && !!(formik.errors.email || formik.errors.password);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.loginBloc,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        id: \"email\",\n        name: \"email\",\n        label: \"Email\",\n        value: formik.values.email,\n        onChange: formik.handleChange,\n        error: formik.errors.email,\n        touched: formik.touched.email,\n        onBlur: () => formik.setFieldTouched('email', true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        id: \"password\",\n        name: \"password\",\n        label: \"Password\",\n        type: \"password\",\n        value: formik.values.password,\n        onChange: formik.handleChange,\n        error: formik.errors.password || formik.status,\n        touched: formik.touched.password,\n        onBlur: () => formik.setFieldTouched('password', true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        className: style.loginBtn,\n        disabled: disabled,\n        children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"44E4+B4fHpbdTt08+NtgET7Dk7I=\", false, function () {\n  return [useAppDispatch, useAppSelector, useNavigate, useFormik];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useEffect","useFormik","yup","style","Button","Input","useAppDispatch","useAppSelector","fetchAuthorization","useNavigate","validationSchema","object","email","string","required","password","min","Login","dispatch","authorizedCode","state","authorized","navigate","formik","initialValues","onSubmit","values","setStatus","disabled","touched","errors","loginBloc","handleSubmit","handleChange","setFieldTouched","status","loginBtn"],"sources":["G:/program/practica/react-practica/it-incubator/samurai-way-TS/src/components/login/Login.tsx"],"sourcesContent":["import React, {useEffect} from 'react';\r\nimport {useFormik} from 'formik';\r\nimport * as yup from 'yup';\r\nimport style from './login.module.css'\r\nimport Button from \"../common/button/Button\";\r\nimport {Input} from \"../common/input/Input\";\r\nimport {useAppDispatch, useAppSelector} from \"../../utils/hooks/hooks\";\r\nimport {fetchAuthorization} from \"../../redux/authorizedReducer\";\r\nimport {Navigate, useNavigate} from \"react-router-dom\";\r\n\r\n\r\nconst validationSchema = yup.object({\r\n    email: yup\r\n        .string()\r\n        .email('Enter a valid email')\r\n        .required('Email is required'),\r\n    password: yup\r\n        .string()\r\n        .min(4, 'Password should be of minimum 4 characters length')\r\n        .required('Password is required'),\r\n});\r\n\r\nexport const Login = () => {\r\n    const dispatch = useAppDispatch()\r\n    const authorizedCode = useAppSelector(state => state.authorized.authorizedCode)\r\n    const navigate = useNavigate()\r\n\r\n    useEffect(() => {\r\n        if (authorizedCode === 0) navigate('/')\r\n    }, [authorizedCode])\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n        },\r\n        validationSchema: validationSchema,\r\n        onSubmit: (values, {setStatus}) => {\r\n            dispatch(fetchAuthorization(values.email, values.password, setStatus));\r\n        },\r\n    });\r\n    const disabled = (formik.touched.password && formik.touched.email && !!(formik.errors.email || formik.errors.password))\r\n    return (\r\n        <div className={style.loginBloc}>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <Input id={\"email\"}\r\n                       name={\"email\"}\r\n                       label={\"Email\"}\r\n                       value={formik.values.email}\r\n                       onChange={formik.handleChange}\r\n                       error={formik.errors.email}\r\n                       touched={formik.touched.email}\r\n                       onBlur={() => formik.setFieldTouched('email', true)}\r\n                />\r\n                <Input id=\"password\"\r\n                       name=\"password\"\r\n                       label=\"Password\"\r\n                       type=\"password\"\r\n                       value={formik.values.password}\r\n                       onChange={formik.handleChange}\r\n                       error={formik.errors.password || formik.status}\r\n                       touched={formik.touched.password}\r\n                       onBlur={() => formik.setFieldTouched('password', true)}\r\n                />\r\n                <Button type=\"submit\"\r\n                        className={style.loginBtn}\r\n                        disabled={disabled}\r\n                >\r\n                    Войти\r\n                </Button>\r\n            </form>\r\n        </div>\r\n    );\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}
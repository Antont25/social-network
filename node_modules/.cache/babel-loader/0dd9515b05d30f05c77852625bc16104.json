{"ast":null,"code":"var _jsxFileName = \"G:\\\\program\\\\practica\\\\react-practica\\\\it-incubator\\\\samurai-way-TS\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport './App.css';\nimport { connect } from 'react-redux';\nimport { fetchAuthorizedData } from './redux/appReducer';\nimport { ErrorSnackbar } from './components/common/ErrorSnackbar/ErrorSnackbar';\nimport { WitchRouting } from './components/WitchRouting';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = props => {\n  _s();\n\n  useEffect(() => {\n    props.fetchAuthorizedData();\n  }, []); // if (props.isLoading) {\n  //     return <Loading/>\n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(WitchRouting, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ErrorSnackbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = App;\n\nfunction mapStateToProps(state) {\n  return {\n    menuIsShow: state.headerPage.menuIsShow,\n    isLoading: state.app.isLoading\n  };\n}\n\nexport default connect(mapStateToProps, {\n  fetchAuthorizedData\n})(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","connect","fetchAuthorizedData","ErrorSnackbar","WitchRouting","App","props","mapStateToProps","state","menuIsShow","headerPage","isLoading","app"],"sources":["G:/program/practica/react-practica/it-incubator/samurai-way-TS/src/App.tsx"],"sourcesContent":["import React, {useEffect} from 'react'\r\nimport './App.css';\r\nimport {connect} from 'react-redux';\r\nimport {AppStoreType} from './redux/store';\r\nimport {fetchAuthorizedData} from './redux/appReducer';\r\nimport {ErrorSnackbar} from './components/common/ErrorSnackbar/ErrorSnackbar';\r\nimport {WitchRouting} from './components/WitchRouting';\r\n\r\n\r\ntype MapStateToProps = {\r\n    menuIsShow: boolean\r\n    isLoading: boolean\r\n}\r\ntype AppType = MapStateToProps & {\r\n    fetchAuthorizedData: () => void\r\n}\r\n\r\n\r\nconst App = (props: AppType) => {\r\n\r\n\r\n    useEffect(() => {\r\n        props.fetchAuthorizedData()\r\n    }, [])\r\n\r\n\r\n    // if (props.isLoading) {\r\n    //     return <Loading/>\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <WitchRouting/>\r\n            <ErrorSnackbar/>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction mapStateToProps(state: AppStoreType): MapStateToProps {\r\n    return {\r\n        menuIsShow: state.headerPage.menuIsShow,\r\n        isLoading: state.app.isLoading,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {fetchAuthorizedData})(App);\r\n\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,WAAP;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,SAAQC,mBAAR,QAAkC,oBAAlC;AACA,SAAQC,aAAR,QAA4B,iDAA5B;AACA,SAAQC,YAAR,QAA2B,2BAA3B;;;;AAYA,MAAMC,GAAG,GAAIC,KAAD,IAAoB;EAAA;;EAG5BN,SAAS,CAAC,MAAM;IACZM,KAAK,CAACJ,mBAAN;EACH,CAFQ,EAEN,EAFM,CAAT,CAH4B,CAQ5B;EACA;EACA;;EAEA,oBACI;IAAA,wBACI,QAAC,YAAD;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI,QAAC,aAAD;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA,gBADJ;AAMH,CAlBD;;GAAMG,G;;KAAAA,G;;AAoBN,SAASE,eAAT,CAAyBC,KAAzB,EAA+D;EAC3D,OAAO;IACHC,UAAU,EAAED,KAAK,CAACE,UAAN,CAAiBD,UAD1B;IAEHE,SAAS,EAAEH,KAAK,CAACI,GAAN,CAAUD;EAFlB,CAAP;AAIH;;AAED,eAAeV,OAAO,CAACM,eAAD,EAAkB;EAACL;AAAD,CAAlB,CAAP,CAAgDG,GAAhD,CAAf"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import axios from'axios';import{setServerError}from'../redux/appReducer';export var errorFromStatusCodeOrApplication=function errorFromStatusCodeOrApplication(error,dispatch){if(axios.isAxiosError(error)){var setError=error.response?error.response.data.error:error.message;dispatch(setServerError(setError));}else{dispatch(setServerError(error.message||'some error'));}};","map":{"version":3,"names":["axios","setServerError","errorFromStatusCodeOrApplication","error","dispatch","isAxiosError","setError","response","data","message"],"sources":["C:/program/samurai-way-TS/src/utils/error-utils.ts"],"sourcesContent":["import axios, {AxiosError} from 'axios';\r\nimport {setServerError} from '../redux/appReducer';\r\nimport {Dispatch} from 'redux';\r\n\r\nexport const errorFromStatusCodeOrApplication = (error: Error | AxiosError, dispatch: Dispatch) => {\r\n    if (axios.isAxiosError(error)) {\r\n        const setError = error.response\r\n            ? (error.response.data as ({ error: string })).error\r\n            : error.message\r\n        dispatch(setServerError(setError))\r\n    } else {\r\n        dispatch(setServerError(error.message || 'some error'))\r\n    }\r\n}"],"mappings":"AAAA,MAAOA,MAAP,KAAgC,OAAhC,CACA,OAAQC,cAAR,KAA6B,qBAA7B,CAGA,MAAO,IAAMC,iCAAgC,CAAG,QAAnCA,iCAAmC,CAACC,KAAD,CAA4BC,QAA5B,CAAmD,CAC/F,GAAIJ,KAAK,CAACK,YAAN,CAAmBF,KAAnB,CAAJ,CAA+B,CAC3B,GAAMG,SAAQ,CAAGH,KAAK,CAACI,QAAN,CACVJ,KAAK,CAACI,QAAN,CAAeC,IAAhB,CAA6CL,KADlC,CAEXA,KAAK,CAACM,OAFZ,CAGAL,QAAQ,CAACH,cAAc,CAACK,QAAD,CAAf,CAAR,CACH,CALD,IAKO,CACHF,QAAQ,CAACH,cAAc,CAACE,KAAK,CAACM,OAAN,EAAiB,YAAlB,CAAf,CAAR,CACH,CACJ,CATM"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\program\\\\samurai-way-TS\\\\src\\\\components\\\\profile\\\\userInfo\\\\UserInfo.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport style from './userInfo.module.css';\nimport avatar from '../../../assest/img/avatar.png';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport { Status } from '../../users/Status';\nimport { useAppDispatch } from '../../../utils/hooks/hooks';\nimport { fetchStatusUpdates } from '../../../redux/profileReducer';\nimport { AvatarUser } from './Avatar/AvatarUser';\nimport Button from '../../common/button/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserInfo = props => {\n  _s();\n\n  const dispatch = useAppDispatch();\n  const [editMode, setEditMode] = useState(false);\n  const isOwner = props.authorizedUserId === props.userProfile.userId;\n\n  const setStatusHandler = value => {\n    dispatch(fetchStatusUpdates(value, props.userProfile.userId));\n  };\n\n  const editModeHandler = () => {\n    setEditMode(!editMode);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 3,\n    className: style.avatarPaper,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: style.avatarBloc,\n      children: [/*#__PURE__*/_jsxDEV(AvatarUser, {\n        src: props.userProfile.photos.small || avatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.info,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.name,\n          children: props.userProfile.fullName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Status, {\n          valueStatus: props.userStatus,\n          callback: setStatusHandler,\n          isOwner: isOwner\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: style.contacts,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        className: style.contactItem,\n        children: [/*#__PURE__*/_jsxDEV(ListItem, {\n          children: Object.keys(props.userProfile.contacts).map((item, index) => /*#__PURE__*/_jsxDEV(ListItemText, {\n            className: style.contactHeader,\n            primary: `${item}:`\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 90\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), editMode ? /*#__PURE__*/_jsxDEV(ListItem, {\n          children: Object.values(props.userProfile.contacts).map((item, index) => /*#__PURE__*/_jsxDEV(ListItemText, {\n            className: style.contactBody,\n            primary: item || 'нету даных'\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 96\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 27\n        }, this) : /*#__PURE__*/_jsxDEV(ListItem, {\n          children: Object.values(props.userProfile.contacts).map((item, index) => /*#__PURE__*/_jsxDEV(ListItemText, {\n            className: style.contactBody,\n            primary: item || 'нету даных'\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 96\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 27\n        }, this), isOwner && /*#__PURE__*/_jsxDEV(Button, {\n          onClick: editModeHandler,\n          name: 'редактировать форму'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UserInfo, \"/myqj4reRwkabyhN1NBG/D6r1cs=\", false, function () {\n  return [useAppDispatch];\n});\n\n_c = UserInfo;\nexport default UserInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserInfo\");","map":{"version":3,"names":["React","useState","style","avatar","Paper","Grid","ListItemText","ListItem","Status","useAppDispatch","fetchStatusUpdates","AvatarUser","Button","UserInfo","props","dispatch","editMode","setEditMode","isOwner","authorizedUserId","userProfile","userId","setStatusHandler","value","editModeHandler","avatarPaper","avatarBloc","photos","small","info","name","fullName","userStatus","contacts","contactItem","Object","keys","map","item","index","contactHeader","values","contactBody"],"sources":["C:/program/samurai-way-TS/src/components/profile/userInfo/UserInfo.tsx"],"sourcesContent":["import React, {useState} from 'react';\r\nimport style from './userInfo.module.css'\r\nimport avatar from '../../../assest/img/avatar.png'\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport {Status} from '../../users/Status';\r\nimport {UserProfileType} from '../../../api/api';\r\nimport {useAppDispatch} from '../../../utils/hooks/hooks';\r\nimport {fetchStatusUpdates} from '../../../redux/profileReducer';\r\nimport {AvatarUser} from './Avatar/AvatarUser';\r\nimport Button from '../../common/button/Button';\r\n\r\n\r\ntype UserInfoType = {\r\n    userProfile: UserProfileType\r\n    authorizedUserId: number | null\r\n    userStatus: string | null\r\n\r\n}\r\nconst UserInfo: React.FC<UserInfoType> = (props) => {\r\n\r\n    const dispatch = useAppDispatch()\r\n\r\n    const [editMode, setEditMode] = useState(false)\r\n\r\n    const isOwner = props.authorizedUserId === props.userProfile.userId\r\n\r\n    const setStatusHandler = (value: string) => {\r\n        dispatch(fetchStatusUpdates(value, props.userProfile.userId))\r\n    }\r\n    const editModeHandler = () => {\r\n        setEditMode(!editMode)\r\n    }\r\n\r\n    return (\r\n        <Paper elevation={3} className={style.avatarPaper}>\r\n            <Grid container className={style.avatarBloc}>\r\n\r\n                <AvatarUser src={props.userProfile.photos.small || avatar}/>\r\n\r\n                <div className={style.info}>\r\n                    <div className={style.name}>{props.userProfile.fullName}</div>\r\n                    <Status valueStatus={props.userStatus}\r\n                            callback={setStatusHandler}\r\n                            isOwner={isOwner}/>\r\n                </div>\r\n            </Grid>\r\n\r\n            <Grid container className={style.contacts}>\r\n                <h2>contacts</h2>\r\n                <Grid item className={style.contactItem}>\r\n                    <ListItem>\r\n                        {\r\n                            Object.keys(props.userProfile.contacts).map((item, index) => <ListItemText\r\n                                className={style.contactHeader}\r\n                                key={index}\r\n                                primary={`${item}:`}/>)\r\n                        }\r\n                    </ListItem>\r\n\r\n                    {editMode\r\n                        ? <ListItem>\r\n                            {\r\n                                Object.values(props.userProfile.contacts).map((item, index) => <ListItemText\r\n                                    className={style.contactBody}\r\n                                    key={index}\r\n                                    primary={item || 'нету даных'}/>\r\n                                )\r\n\r\n                            }\r\n                        </ListItem>\r\n\r\n                        : <ListItem>\r\n                            {\r\n                                Object.values(props.userProfile.contacts).map((item, index) => <ListItemText\r\n                                    className={style.contactBody}\r\n                                    key={index}\r\n                                    primary={item || 'нету даных'}/>\r\n                                )\r\n\r\n                            }\r\n                        </ListItem>\r\n\r\n                    }\r\n                    {isOwner && <Button onClick={editModeHandler} name={'редактировать форму'}/>}\r\n                </Grid>\r\n\r\n            </Grid>\r\n        </Paper>\r\n\r\n    )\r\n        ;\r\n};\r\n\r\nexport default UserInfo;"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"G:\\\\program\\\\practica\\\\react-practica\\\\it-incubator\\\\samurai-way-TS\\\\src\\\\components\\\\common\\\\textarea\\\\Textarea.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport style from './textarea.module.css';\nimport TextField from '@material-ui/core/TextField';\nimport Button from \"../button/Button\";\nimport { useFormik } from \"formik\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Textarea = props => {\n  _s();\n\n  const formik = useFormik({\n    initialValues: {\n      text: ''\n    },\n    validationSchema: props.validationSchema,\n    onSubmit: (values, _ref) => {\n      let {\n        resetForm\n      } = _ref;\n      props.callback(values.text);\n      resetForm();\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formik.handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.addTextBloc,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        name: 'text',\n        label: \"\\u043D\\u043E\\u0432\\u044B\\u0439 \\u043F\\u043E\\u0441\\u0442\",\n        placeholder: \"\\u043D\\u043E\\u0432\\u044B\\u0439 \\u043F\\u043E\\u0441\\u0442\",\n        multiline: true,\n        variant: \"outlined\",\n        value: formik.values.text,\n        className: style.textareaBloc,\n        onChange: formik.handleChange,\n        error: Boolean(formik.errors.text),\n        helperText: formik.errors.text,\n        inputProps: {\n          maxLength: 12\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Textarea, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = Textarea;\n\nvar _c;\n\n$RefreshReg$(_c, \"Textarea\");","map":{"version":3,"names":["React","style","TextField","Button","useFormik","Textarea","props","formik","initialValues","text","validationSchema","onSubmit","values","resetForm","callback","handleSubmit","addTextBloc","textareaBloc","handleChange","Boolean","errors","maxLength"],"sources":["G:/program/practica/react-practica/it-incubator/samurai-way-TS/src/components/common/textarea/Textarea.tsx"],"sourcesContent":["import React from 'react';\r\nimport style from './textarea.module.css'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from \"../button/Button\";\r\nimport {useFormik} from \"formik\";\r\n\r\n\r\ntype TextareaPropsType = {\r\n    callback: (value: string) => void\r\n    validationSchema: any\r\n}\r\n\r\nexport const Textarea: React.FC<TextareaPropsType> = (props) => {\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            text: '',\r\n        },\r\n        validationSchema: props.validationSchema,\r\n        onSubmit: (values, {resetForm}) => {\r\n            props.callback(values.text)\r\n            resetForm()\r\n        },\r\n    });\r\n\r\n    return (\r\n        <form onSubmit={formik.handleSubmit}>\r\n            <div className={style.addTextBloc}>\r\n                <TextField\r\n                    name={'text'}\r\n                    label=\"новый пост\"\r\n                    placeholder=\"новый пост\"\r\n                    multiline\r\n                    variant=\"outlined\"\r\n                    value={formik.values.text}\r\n                    className={style.textareaBloc}\r\n                    onChange={formik.handleChange}\r\n                    error={Boolean(formik.errors.text)}\r\n                    helperText={formik.errors.text}\r\n                    inputProps={{maxLength: 12}}\r\n                />\r\n\r\n                <Button type=\"submit\">\r\n                    Добавить\r\n                </Button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,SAAQC,SAAR,QAAwB,QAAxB;;AAQA,OAAO,MAAMC,QAAqC,GAAIC,KAAD,IAAW;EAAA;;EAE5D,MAAMC,MAAM,GAAGH,SAAS,CAAC;IACrBI,aAAa,EAAE;MACXC,IAAI,EAAE;IADK,CADM;IAIrBC,gBAAgB,EAAEJ,KAAK,CAACI,gBAJH;IAKrBC,QAAQ,EAAE,CAACC,MAAD,WAAyB;MAAA,IAAhB;QAACC;MAAD,CAAgB;MAC/BP,KAAK,CAACQ,QAAN,CAAeF,MAAM,CAACH,IAAtB;MACAI,SAAS;IACZ;EARoB,CAAD,CAAxB;EAWA,oBACI;IAAM,QAAQ,EAAEN,MAAM,CAACQ,YAAvB;IAAA,uBACI;MAAK,SAAS,EAAEd,KAAK,CAACe,WAAtB;MAAA,wBACI,QAAC,SAAD;QACI,IAAI,EAAE,MADV;QAEI,KAAK,EAAC,yDAFV;QAGI,WAAW,EAAC,yDAHhB;QAII,SAAS,MAJb;QAKI,OAAO,EAAC,UALZ;QAMI,KAAK,EAAET,MAAM,CAACK,MAAP,CAAcH,IANzB;QAOI,SAAS,EAAER,KAAK,CAACgB,YAPrB;QAQI,QAAQ,EAAEV,MAAM,CAACW,YARrB;QASI,KAAK,EAAEC,OAAO,CAACZ,MAAM,CAACa,MAAP,CAAcX,IAAf,CATlB;QAUI,UAAU,EAAEF,MAAM,CAACa,MAAP,CAAcX,IAV9B;QAWI,UAAU,EAAE;UAACY,SAAS,EAAE;QAAZ;MAXhB;QAAA;QAAA;QAAA;MAAA,QADJ,eAeI,QAAC,MAAD;QAAQ,IAAI,EAAC,QAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAfJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAuBH,CApCM;;GAAMhB,Q;UAEMD,S;;;KAFNC,Q"},"metadata":{},"sourceType":"module"}
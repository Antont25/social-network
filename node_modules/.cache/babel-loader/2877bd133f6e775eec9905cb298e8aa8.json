{"ast":null,"code":"var _jsxFileName = \"G:\\\\program\\\\practica\\\\react-practica\\\\it-incubator\\\\samurai-way-TS\\\\src\\\\pages\\\\Dialogs.tsx\";\nimport React from 'react';\nimport style from '../components/Dialogs/Dialogs.module.css';\nimport Message from \"../components/Dialogs/Messages/Message\";\nimport { DialogItems } from \"../components/Dialogs/DialogItems\";\nimport { Textarea } from \"../components/common/textarea/Textarea\";\nimport { connect } from \"react-redux\";\nimport { addMessage } from \"../redux/dialogsReducer\";\nimport { withAuthRedirect } from \"../utils/hoc/withAuthRedirect\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dialogs = props => {\n  // function addMessagesHandler() {\n  //     props.addMessage()\n  //     props.newMessageText('')\n  // }\n  //\n  // function onChangeMessagesHandler(newText: string) {\n  //     props.newMessageText(newText)\n  // }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.dialogs,\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: props.dialogs.map(item => /*#__PURE__*/_jsxDEV(DialogItems, {\n        name: item.name,\n        id: `${item.id}`\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 44\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: style.dialogItem,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Textarea, {\n          callback: props.addMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), props.massages.map(item => /*#__PURE__*/_jsxDEV(Message, {\n        message: item.message\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 45\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Dialogs;\n\nconst mapStateToProps = state => {\n  return {\n    dialogs: state.dialogsPage.dialogs,\n    massages: state.dialogsPage.messages\n  };\n};\n\nexport default withAuthRedirect(connect(mapStateToProps, {\n  addMessage\n})(Dialogs));\n\nvar _c;\n\n$RefreshReg$(_c, \"Dialogs\");","map":{"version":3,"names":["React","style","Message","DialogItems","Textarea","connect","addMessage","withAuthRedirect","Dialogs","props","dialogs","map","item","name","id","dialogItem","massages","message","mapStateToProps","state","dialogsPage","messages"],"sources":["G:/program/practica/react-practica/it-incubator/samurai-way-TS/src/pages/Dialogs.tsx"],"sourcesContent":["import React from 'react';\r\nimport style from '../components/Dialogs/Dialogs.module.css'\r\nimport Message from \"../components/Dialogs/Messages/Message\";\r\nimport {DialogItems} from \"../components/Dialogs/DialogItems\";\r\nimport {Textarea} from \"../components/common/textarea/Textarea\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStoreType} from \"../redux/store\";\r\nimport {addMessage, DialogsType, MessagesType} from \"../redux/dialogsReducer\";\r\nimport {withAuthRedirect} from \"../utils/hoc/withAuthRedirect\";\r\n\r\n\r\ntype DialogsPropsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\n\r\ntype MapStateToPropsType = {\r\n    dialogs: Array<DialogsType>\r\n    massages: Array<MessagesType>\r\n}\r\ntype MapDispatchToPropsType = {\r\n    addMessage: (newText: string) => void\r\n}\r\n\r\nconst Dialogs = (props: DialogsPropsType) => {\r\n\r\n\r\n    // function addMessagesHandler() {\r\n    //     props.addMessage()\r\n    //     props.newMessageText('')\r\n    // }\r\n    //\r\n    // function onChangeMessagesHandler(newText: string) {\r\n    //     props.newMessageText(newText)\r\n    // }\r\n\r\n    return (\r\n        <div className={style.dialogs}>\r\n            <ul>\r\n                {props.dialogs.map(item => <DialogItems key={item.id} name={item.name} id={`${item.id}`}/>)}\r\n\r\n            </ul>\r\n\r\n            <ul className={style.dialogItem}>\r\n                <div>\r\n                    <Textarea callback={props.addMessage}/>\r\n                </div>\r\n                {props.massages.map(item => <Message key={item.id} message={item.message}/>)}\r\n\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: AppStoreType): MapStateToPropsType => {\r\n    return {\r\n        dialogs: state.dialogsPage.dialogs,\r\n        massages: state.dialogsPage.messages\r\n    }\r\n}\r\n\r\n\r\nexport default withAuthRedirect(connect(mapStateToProps, {addMessage})(Dialogs));"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,0CAAlB;AACA,OAAOC,OAAP,MAAoB,wCAApB;AACA,SAAQC,WAAR,QAA0B,mCAA1B;AACA,SAAQC,QAAR,QAAuB,wCAAvB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,SAAQC,UAAR,QAAoD,yBAApD;AACA,SAAQC,gBAAR,QAA+B,+BAA/B;;;AAcA,MAAMC,OAAO,GAAIC,KAAD,IAA6B;EAGzC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA,oBACI;IAAK,SAAS,EAAER,KAAK,CAACS,OAAtB;IAAA,wBACI;MAAA,UACKD,KAAK,CAACC,OAAN,CAAcC,GAAd,CAAkBC,IAAI,iBAAI,QAAC,WAAD;QAA2B,IAAI,EAAEA,IAAI,CAACC,IAAtC;QAA4C,EAAE,EAAG,GAAED,IAAI,CAACE,EAAG;MAA3D,GAAkBF,IAAI,CAACE,EAAvB;QAAA;QAAA;QAAA;MAAA,QAA1B;IADL;MAAA;MAAA;MAAA;IAAA,QADJ,eAMI;MAAI,SAAS,EAAEb,KAAK,CAACc,UAArB;MAAA,wBACI;QAAA,uBACI,QAAC,QAAD;UAAU,QAAQ,EAAEN,KAAK,CAACH;QAA1B;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QADJ,EAIKG,KAAK,CAACO,QAAN,CAAeL,GAAf,CAAmBC,IAAI,iBAAI,QAAC,OAAD;QAAuB,OAAO,EAAEA,IAAI,CAACK;MAArC,GAAcL,IAAI,CAACE,EAAnB;QAAA;QAAA;QAAA;MAAA,QAA3B,CAJL;IAAA;MAAA;MAAA;MAAA;IAAA,QANJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAgBH,CA5BD;;KAAMN,O;;AA8BN,MAAMU,eAAe,GAAIC,KAAD,IAA8C;EAClE,OAAO;IACHT,OAAO,EAAES,KAAK,CAACC,WAAN,CAAkBV,OADxB;IAEHM,QAAQ,EAAEG,KAAK,CAACC,WAAN,CAAkBC;EAFzB,CAAP;AAIH,CALD;;AAQA,eAAed,gBAAgB,CAACF,OAAO,CAACa,eAAD,EAAkB;EAACZ;AAAD,CAAlB,CAAP,CAAuCE,OAAvC,CAAD,CAA/B"},"metadata":{},"sourceType":"module"}
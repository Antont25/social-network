{"ast":null,"code":"var _jsxFileName = \"C:\\\\program\\\\samurai-way-TS\\\\src\\\\components\\\\Profile\\\\MyPosts\\\\MyPosts.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { MyPost } from './MyPost/MyPost';\nimport { Paper } from '@material-ui/core';\nimport style from './myPosts.module.css';\nimport { addPost } from '../../../redux/profileReducer';\nimport { Textarea } from '../../common/Textarea/Textarea';\nimport { validationPostAndDialog } from '../../../utils/validation/validation';\nimport { useAppDispatch } from '../../../utils/hooks/hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MyPosts = props => {\n  _s();\n\n  const dispatch = useAppDispatch();\n  let newPost = props.posts.map(item => /*#__PURE__*/_jsxDEV(MyPost, {\n    massage: item.massage,\n    likes: item.likes,\n    photoUser: props.photoUser\n  }, item.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 43\n  }, this));\n\n  const addPostHandler = newText => {\n    dispatch(addPost(newText));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 3,\n    className: style.postBloc,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u041C\\u043E\\u0438 \\u043F\\u043E\\u0441\\u0442\\u044B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.addPostBloc,\n      children: /*#__PURE__*/_jsxDEV(Textarea, {\n        callback: addPostHandler,\n        validationSchema: validationPostAndDialog\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), newPost]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MyPosts, \"BJQ1DUn/XFEl2NsQ3DWyHAXfnkY=\", false, function () {\n  return [useAppDispatch];\n});\n\n_c = MyPosts;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyPosts\");","map":{"version":3,"names":["React","MyPost","Paper","style","addPost","Textarea","validationPostAndDialog","useAppDispatch","MyPosts","props","dispatch","newPost","posts","map","item","massage","likes","photoUser","id","addPostHandler","newText","postBloc","addPostBloc"],"sources":["C:/program/samurai-way-TS/src/components/Profile/MyPosts/MyPosts.tsx"],"sourcesContent":["import React from 'react';\r\nimport {MyPost} from './MyPost/MyPost';\r\nimport {Paper} from '@material-ui/core';\r\nimport style from './myPosts.module.css'\r\nimport {addPost, PostsType} from '../../../redux/profileReducer';\r\nimport {Textarea} from '../../common/Textarea/Textarea';\r\nimport {validationPostAndDialog} from '../../../utils/validation/validation';\r\nimport {useAppDispatch} from '../../../utils/hooks/hooks';\r\n\r\ntype PostPageType = {\r\n    posts: Array<PostsType>\r\n    photoUser: string | null\r\n}\r\nexport const MyPosts = (props: PostPageType) => {\r\n    const dispatch = useAppDispatch()\r\n    let newPost = props.posts.map(item => <MyPost key={item.id} massage={item.massage} likes={item.likes}\r\n                                                  photoUser={props.photoUser}/>)\r\n    const addPostHandler = (newText: string) => {\r\n        dispatch(addPost(newText))\r\n    }\r\n    return (\r\n        <Paper elevation={3} className={style.postBloc}>\r\n            <h2>Мои посты</h2>\r\n            <div className={style.addPostBloc}>\r\n                <Textarea callback={addPostHandler}\r\n                          validationSchema={validationPostAndDialog}\r\n                />\r\n            </div>\r\n\r\n            {newPost}\r\n        </Paper>\r\n    );\r\n};\r\n\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,QAAqB,iBAArB;AACA,SAAQC,KAAR,QAAoB,mBAApB;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AACA,SAAQC,OAAR,QAAiC,+BAAjC;AACA,SAAQC,QAAR,QAAuB,gCAAvB;AACA,SAAQC,uBAAR,QAAsC,sCAAtC;AACA,SAAQC,cAAR,QAA6B,4BAA7B;;AAMA,OAAO,MAAMC,OAAO,GAAIC,KAAD,IAAyB;EAAA;;EAC5C,MAAMC,QAAQ,GAAGH,cAAc,EAA/B;EACA,IAAII,OAAO,GAAGF,KAAK,CAACG,KAAN,CAAYC,GAAZ,CAAgBC,IAAI,iBAAI,QAAC,MAAD;IAAsB,OAAO,EAAEA,IAAI,CAACC,OAApC;IAA6C,KAAK,EAAED,IAAI,CAACE,KAAzD;IACQ,SAAS,EAAEP,KAAK,CAACQ;EADzB,GAAaH,IAAI,CAACI,EAAlB;IAAA;IAAA;IAAA;EAAA,QAAxB,CAAd;;EAEA,MAAMC,cAAc,GAAIC,OAAD,IAAqB;IACxCV,QAAQ,CAACN,OAAO,CAACgB,OAAD,CAAR,CAAR;EACH,CAFD;;EAGA,oBACI,QAAC,KAAD;IAAO,SAAS,EAAE,CAAlB;IAAqB,SAAS,EAAEjB,KAAK,CAACkB,QAAtC;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAK,SAAS,EAAElB,KAAK,CAACmB,WAAtB;MAAA,uBACI,QAAC,QAAD;QAAU,QAAQ,EAAEH,cAApB;QACU,gBAAgB,EAAEb;MAD5B;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QAFJ,EAQKK,OARL;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAYH,CAnBM;;GAAMH,O;UACQD,c;;;KADRC,O"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"const NEW_MESSAGE_TEXT = 'NEW_MESSAGE_TEXT';\nconst ADD_MESSAGE = \"ADD_MESSAGE\";\nconst initialState = {\n  dialogs: [{\n    id: 1,\n    name: 'Amdrey'\n  }, {\n    id: 2,\n    name: 'Any'\n  }],\n  messages: [{\n    id: 1,\n    message: 'yoooo'\n  }, {\n    id: 1,\n    message: 'ysss'\n  }],\n  newTextMessages: 'f'\n};\nexport const dialogsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_MESSAGE:\n      let newMessages = {\n        id: 3,\n        message: state.newTextMessages\n      };\n      return { ...state,\n        messages: [newMessages, ...state.messages]\n      };\n\n    case NEW_MESSAGE_TEXT:\n      return { ...state,\n        newTextMessages: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\nexport const newMessageText = payload => ({\n  type: NEW_MESSAGE_TEXT,\n  payload\n});\nexport const addMessage = () => ({\n  type: ADD_MESSAGE\n});","map":{"version":3,"names":["NEW_MESSAGE_TEXT","ADD_MESSAGE","initialState","dialogs","id","name","messages","message","newTextMessages","dialogsReducer","state","action","type","newMessages","payload","newMessageText","addMessage"],"sources":["G:/program/practica/react-practica/it-incubator/samurai-way-TS/src/redux/dialogsReducer.ts"],"sourcesContent":["type NewMessageTextType = {\r\n    type: typeof NEW_MESSAGE_TEXT\r\n    payload: string\r\n}\r\ntype AddMessageType = {\r\n    type: typeof ADD_MESSAGE\r\n}\r\ntype InitialStateType = typeof initialState\r\nexport type DialogsType = {\r\n    id: number\r\n    name: string\r\n}\r\nexport type MessagesType = {\r\n    id: number\r\n    message: string\r\n}\r\nexport type ActionDialogsReducerType = ReturnType<typeof newMessageText> | ReturnType<typeof addMessage>\r\n\r\n\r\nconst NEW_MESSAGE_TEXT = 'NEW_MESSAGE_TEXT';\r\nconst ADD_MESSAGE = \"ADD_MESSAGE\";\r\n\r\nconst initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Amdrey'},\r\n        {id: 2, name: 'Any'}\r\n    ] as Array<DialogsType>,\r\n    messages: [\r\n        {id: 1, message: 'yoooo'},\r\n        {id: 1, message: 'ysss'},\r\n    ] as Array<MessagesType>,\r\n    newTextMessages: 'f'\r\n}\r\n\r\nexport const dialogsReducer = (state = initialState, action: ActionDialogsReducerType): InitialStateType => {\r\n    switch (action.type) {\r\n        case  ADD_MESSAGE:\r\n            let newMessages: MessagesType = {id: 3, message: state.newTextMessages}\r\n            return {\r\n                ...state,\r\n                messages: [newMessages, ...state.messages]\r\n            }\r\n\r\n        case NEW_MESSAGE_TEXT :\r\n            return {\r\n                ...state,\r\n                newTextMessages: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\n\r\nexport const newMessageText = (payload: string): NewMessageTextType => ({type: NEW_MESSAGE_TEXT, payload})\r\nexport const addMessage = (): AddMessageType => ({type: ADD_MESSAGE})\r\n"],"mappings":"AAmBA,MAAMA,gBAAgB,GAAG,kBAAzB;AACA,MAAMC,WAAW,GAAG,aAApB;AAEA,MAAMC,YAAY,GAAG;EACjBC,OAAO,EAAE,CACL;IAACC,EAAE,EAAE,CAAL;IAAQC,IAAI,EAAE;EAAd,CADK,EAEL;IAACD,EAAE,EAAE,CAAL;IAAQC,IAAI,EAAE;EAAd,CAFK,CADQ;EAKjBC,QAAQ,EAAE,CACN;IAACF,EAAE,EAAE,CAAL;IAAQG,OAAO,EAAE;EAAjB,CADM,EAEN;IAACH,EAAE,EAAE,CAAL;IAAQG,OAAO,EAAE;EAAjB,CAFM,CALO;EASjBC,eAAe,EAAE;AATA,CAArB;AAYA,OAAO,MAAMC,cAAc,GAAG,YAA8E;EAAA,IAA7EC,KAA6E,uEAArER,YAAqE;EAAA,IAAvDS,MAAuD;;EACxG,QAAQA,MAAM,CAACC,IAAf;IACI,KAAMX,WAAN;MACI,IAAIY,WAAyB,GAAG;QAACT,EAAE,EAAE,CAAL;QAAQG,OAAO,EAAEG,KAAK,CAACF;MAAvB,CAAhC;MACA,OAAO,EACH,GAAGE,KADA;QAEHJ,QAAQ,EAAE,CAACO,WAAD,EAAc,GAAGH,KAAK,CAACJ,QAAvB;MAFP,CAAP;;IAKJ,KAAKN,gBAAL;MACI,OAAO,EACH,GAAGU,KADA;QAEHF,eAAe,EAAEG,MAAM,CAACG;MAFrB,CAAP;;IAIJ;MACI,OAAOJ,KAAP;EAdR;AAgBH,CAjBM;AAoBP,OAAO,MAAMK,cAAc,GAAID,OAAD,KAA0C;EAACF,IAAI,EAAEZ,gBAAP;EAAyBc;AAAzB,CAA1C,CAAvB;AACP,OAAO,MAAME,UAAU,GAAG,OAAuB;EAACJ,IAAI,EAAEX;AAAP,CAAvB,CAAnB"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\program\\\\samurai-way-TS\\\\src\\\\components\\\\profile\\\\userInfo\\\\UserInfo.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport style from './userInfo.module.css';\nimport avatar from '../../../assest/img/avatar.png';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport { useAppDispatch } from '../../../utils/hooks/hooks';\nimport { fetchStatusUpdates, updateContacts } from '../../../redux/profileReducer';\nimport { AvatarUser } from './Avatar/AvatarUser';\nimport Button from '../../common/button/Button';\nimport { FormContacts } from './FormContacts/FormContacts';\nimport { EditMode } from '../../EditMode/EditMode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UserInfo = props => {\n  _s();\n\n  const dispatch = useAppDispatch();\n  const [editMode, setEditMode] = useState(false);\n  const isOwner = props.authorizedUserId === props.userProfile.userId;\n\n  const setStatusHandler = value => {\n    dispatch(fetchStatusUpdates(value, props.userProfile.userId));\n  };\n\n  const editModeHandler = () => {\n    setEditMode(!editMode);\n  };\n\n  const saveNameHandler = fullName => {\n    dispatch(updateContacts(undefined, fullName));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 3,\n    className: style.avatarPaper,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: style.avatarBloc,\n      children: [/*#__PURE__*/_jsxDEV(AvatarUser, {\n        src: props.userProfile.photos.small || avatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.info,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.name,\n          children: /*#__PURE__*/_jsxDEV(EditMode, {\n            value: props.userProfile.fullName,\n            isOwner: isOwner,\n            callback: saveNameHandler,\n            label: 'name'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.statusBloc,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(EditMode, {\n            value: props.userStatus,\n            callback: setStatusHandler,\n            isOwner: isOwner,\n            label: 'status'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: style.contacts,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        className: style.contactItem,\n        children: editMode ? /*#__PURE__*/_jsxDEV(FormContacts, {\n          setEditMode: setEditMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 27\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(ListItem, {\n            children: Object.keys(props.userProfile.contacts).map((item, index) => /*#__PURE__*/_jsxDEV(ListItemText, {\n              className: style.contactHeader,\n              primary: `${item}:`\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 98\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n            children: Object.values(props.userProfile.contacts).map((item, index) => /*#__PURE__*/_jsxDEV(ListItemText, {\n              className: style.contactBody,\n              primary: item || 'нету даных'\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 100\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), isOwner && !editMode && /*#__PURE__*/_jsxDEV(Button, {\n        onClick: editModeHandler,\n        children: \"\\u0440\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u0444\\u043E\\u0440\\u043C\\u0443\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UserInfo, \"/myqj4reRwkabyhN1NBG/D6r1cs=\", false, function () {\n  return [useAppDispatch];\n});\n\n_c = UserInfo;\nexport default UserInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserInfo\");","map":{"version":3,"names":["React","useState","style","avatar","Paper","Grid","ListItemText","ListItem","useAppDispatch","fetchStatusUpdates","updateContacts","AvatarUser","Button","FormContacts","EditMode","UserInfo","props","dispatch","editMode","setEditMode","isOwner","authorizedUserId","userProfile","userId","setStatusHandler","value","editModeHandler","saveNameHandler","fullName","undefined","avatarPaper","avatarBloc","photos","small","info","name","statusBloc","userStatus","contacts","contactItem","Object","keys","map","item","index","contactHeader","values","contactBody"],"sources":["C:/program/samurai-way-TS/src/components/profile/userInfo/UserInfo.tsx"],"sourcesContent":["import React, {useState} from 'react';\r\nimport style from './userInfo.module.css'\r\nimport avatar from '../../../assest/img/avatar.png'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport {UserProfileType} from '../../../api/api';\r\nimport {useAppDispatch} from '../../../utils/hooks/hooks';\r\nimport {fetchStatusUpdates, updateContacts} from '../../../redux/profileReducer';\r\nimport {AvatarUser} from './Avatar/AvatarUser';\r\nimport Button from '../../common/button/Button';\r\nimport {FormContacts} from './FormContacts/FormContacts';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport {EditMode} from '../../EditMode/EditMode';\r\n\r\n\r\ntype UserInfoType = {\r\n    userProfile: UserProfileType\r\n    authorizedUserId: number | null\r\n    userStatus: string | null\r\n\r\n}\r\nconst UserInfo: React.FC<UserInfoType> = (props) => {\r\n\r\n    const dispatch = useAppDispatch()\r\n\r\n    const [editMode, setEditMode] = useState(false)\r\n\r\n    const isOwner = props.authorizedUserId === props.userProfile.userId\r\n\r\n    const setStatusHandler = (value: string) => {\r\n        dispatch(fetchStatusUpdates(value, props.userProfile.userId))\r\n    }\r\n    const editModeHandler = () => {\r\n        setEditMode(!editMode)\r\n    }\r\n\r\n    const saveNameHandler = (fullName: string) => {\r\n        dispatch(updateContacts(undefined, fullName))\r\n    }\r\n\r\n\r\n    return (\r\n        <Paper elevation={3} className={style.avatarPaper}>\r\n            <Grid container className={style.avatarBloc}>\r\n\r\n                <AvatarUser src={props.userProfile.photos.small || avatar}/>\r\n\r\n                <div className={style.info}>\r\n                    <div className={style.name}>\r\n                        <EditMode value={props.userProfile.fullName}\r\n                                  isOwner={isOwner}\r\n                                  callback={saveNameHandler}\r\n                                  label={'name'}/>\r\n                    </div>\r\n\r\n                    <div className={style.statusBloc}>\r\n                        <span>Статус:</span>\r\n                        <EditMode value={props.userStatus}\r\n                                  callback={setStatusHandler}\r\n                                  isOwner={isOwner}\r\n                                  label={'status'}/>\r\n\r\n                    </div>\r\n                </div>\r\n            </Grid>\r\n\r\n            <Grid container className={style.contacts}>\r\n                <h2>contacts</h2>\r\n                <Grid item className={style.contactItem}>\r\n                    {editMode\r\n                        ? <FormContacts setEditMode={setEditMode}/>\r\n                        : <>\r\n                            <ListItem>\r\n                                {\r\n                                    Object.keys(props.userProfile.contacts).map((item, index) => <ListItemText\r\n                                        className={style.contactHeader}\r\n                                        key={index}\r\n                                        primary={`${item}:`}/>)\r\n                                }\r\n                            </ListItem>\r\n\r\n\r\n                            <ListItem>\r\n                                {\r\n                                    Object.values(props.userProfile.contacts).map((item, index) => <ListItemText\r\n                                        className={style.contactBody}\r\n                                        key={index}\r\n                                        primary={item || 'нету даных'}/>\r\n                                    )\r\n\r\n                                }\r\n                            </ListItem>\r\n                        </>\r\n                    }\r\n\r\n                </Grid>\r\n                {isOwner && !editMode &&\r\n                    <Button onClick={editModeHandler}>редактировать форму</Button>}\r\n            </Grid>\r\n        </Paper>\r\n\r\n    )\r\n};\r\n\r\nexport default UserInfo;\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\program\\\\samurai-way-TS\\\\src\\\\components\\\\users\\\\Status.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Input } from '../common/input/Input';\nimport style from './users.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Status = props => {\n  _s();\n\n  const [valueStatus, setValueStatus] = useState(props.valueStatus);\n  const [editMode, setEditMode] = useState(false);\n\n  function onDoubleClickHandler() {\n    setEditMode(true);\n  }\n\n  function onBlurHandler() {\n    if (valueStatus !== props.valueStatus) {\n      valueStatus && props.callback(valueStatus);\n    }\n\n    setEditMode(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.statusBloc,\n    children: [\"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441:\", props.isAuthorizedUser ? editMode ? /*#__PURE__*/_jsxDEV(Input, {\n      id: 'status',\n      name: 'status',\n      value: valueStatus,\n      autoFocus: true,\n      onChange: e => setValueStatus(e.currentTarget.value),\n      onBlur: onBlurHandler,\n      className: style.statusInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 23\n    }, this) : /*#__PURE__*/_jsxDEV(SpanStatus, {\n      valueStatus: props.valueStatus,\n      className: style.textStatus,\n      callback: onDoubleClickHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 23\n    }, this) : /*#__PURE__*/_jsxDEV(SpanStatus, {\n      valueStatus: props.valueStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Status, \"ZnYffh+QUI2P8HFmCF2IfP144S0=\");\n\n_c = Status;\n\nconst SpanStatus = props => {\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: props.className,\n    onDoubleClick: props.callback,\n    children: props.valueStatus || 'нету даных'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 12\n  }, this);\n};\n\n_c2 = SpanStatus;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Status\");\n$RefreshReg$(_c2, \"SpanStatus\");","map":{"version":3,"names":["React","useState","Input","style","Status","props","valueStatus","setValueStatus","editMode","setEditMode","onDoubleClickHandler","onBlurHandler","callback","statusBloc","isAuthorizedUser","e","currentTarget","value","statusInput","textStatus","SpanStatus","className"],"sources":["C:/program/samurai-way-TS/src/components/users/Status.tsx"],"sourcesContent":["import React, {FC, useState} from 'react';\nimport {Input} from '../common/input/Input';\nimport style from './users.module.css'\n\n\ntype StatusType = {\n    valueStatus: string | null\n    isAuthorizedUser: boolean\n    callback: (value: string) => void\n}\n\nexport const Status: FC<StatusType> = (props) => {\n    const [valueStatus, setValueStatus] = useState(props.valueStatus)\n    const [editMode, setEditMode] = useState(false)\n\n    function onDoubleClickHandler() {\n        setEditMode(true)\n    }\n\n    function onBlurHandler() {\n        if (valueStatus !== props.valueStatus) {\n            valueStatus && props.callback(valueStatus)\n        }\n\n        setEditMode(false)\n    }\n\n    return (\n        <div className={style.statusBloc}>\n            Статус:{props.isAuthorizedUser\n            ? (editMode\n                    ? <Input id={'status'}\n                             name={'status'}\n                             value={valueStatus}\n                             autoFocus={true}\n                             onChange={e => setValueStatus(e.currentTarget.value)}\n                             onBlur={onBlurHandler}\n                             className={style.statusInput}\n                    />\n                    : <SpanStatus valueStatus={props.valueStatus}\n                                  className={style.textStatus}\n                                  callback={onDoubleClickHandler}/>\n            )\n            : <SpanStatus valueStatus={props.valueStatus}/>\n        }\n\n        </div>\n\n    );\n};\n\ntype SpanStatusType = {\n    valueStatus: string | null\n    className?: string\n    callback?: () => void\n}\nconst SpanStatus = (props: SpanStatusType) => {\n    return <span className={props.className}\n                 onDoubleClick={props.callback}>\n            {props.valueStatus || 'нету даных'}\n        </span>\n}\n\n\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAmBC,QAAnB,QAAkC,OAAlC;AACA,SAAQC,KAAR,QAAoB,uBAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AASA,OAAO,MAAMC,MAAsB,GAAIC,KAAD,IAAW;EAAA;;EAC7C,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAACI,KAAK,CAACC,WAAP,CAA9C;EACA,MAAM,CAACE,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,KAAD,CAAxC;;EAEA,SAASS,oBAAT,GAAgC;IAC5BD,WAAW,CAAC,IAAD,CAAX;EACH;;EAED,SAASE,aAAT,GAAyB;IACrB,IAAIL,WAAW,KAAKD,KAAK,CAACC,WAA1B,EAAuC;MACnCA,WAAW,IAAID,KAAK,CAACO,QAAN,CAAeN,WAAf,CAAf;IACH;;IAEDG,WAAW,CAAC,KAAD,CAAX;EACH;;EAED,oBACI;IAAK,SAAS,EAAEN,KAAK,CAACU,UAAtB;IAAA,oDACYR,KAAK,CAACS,gBAAN,GACLN,QAAQ,gBACD,QAAC,KAAD;MAAO,EAAE,EAAE,QAAX;MACO,IAAI,EAAE,QADb;MAEO,KAAK,EAAEF,WAFd;MAGO,SAAS,EAAE,IAHlB;MAIO,QAAQ,EAAES,CAAC,IAAIR,cAAc,CAACQ,CAAC,CAACC,aAAF,CAAgBC,KAAjB,CAJpC;MAKO,MAAM,EAAEN,aALf;MAMO,SAAS,EAAER,KAAK,CAACe;IANxB;MAAA;MAAA;MAAA;IAAA,QADC,gBASD,QAAC,UAAD;MAAY,WAAW,EAAEb,KAAK,CAACC,WAA/B;MACY,SAAS,EAAEH,KAAK,CAACgB,UAD7B;MAEY,QAAQ,EAAET;IAFtB;MAAA;MAAA;MAAA;IAAA,QAVF,gBAcN,QAAC,UAAD;MAAY,WAAW,EAAEL,KAAK,CAACC;IAA/B;MAAA;MAAA;MAAA;IAAA,QAfN;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAsBH,CAtCM;;GAAMF,M;;KAAAA,M;;AA6Cb,MAAMgB,UAAU,GAAIf,KAAD,IAA2B;EAC1C,oBAAO;IAAM,SAAS,EAAEA,KAAK,CAACgB,SAAvB;IACM,aAAa,EAAEhB,KAAK,CAACO,QAD3B;IAAA,UAEEP,KAAK,CAACC,WAAN,IAAqB;EAFvB;IAAA;IAAA;IAAA;EAAA,QAAP;AAIH,CALD;;MAAMc,U"},"metadata":{},"sourceType":"module"}